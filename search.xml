<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo 博客Matery主题添加ArtiTalk说说模块</title>
      <link href="posts/655c.html"/>
      <url>posts/655c.html</url>
      
        <content type="html"><![CDATA[<p>新建一个网页，希望以卡片的方式记录下一些零碎的东西。就像发说说朋友圈一样在自己的Hexo上分享记录。</p><p>所以选中了<a href="https://artitalk.js.org/">ArtiTalk</a></p><p>项目地址：<a href="https://artitalk.js.org/">ArtiTalk官网</a>、<a href="https://github.com/ArtitalkJS/Artitalk">代码仓库</a></p><p>大概这个样子：</p><h2 id="注册LeanCloud"><a href="#注册LeanCloud" class="headerlink" title="注册LeanCloud"></a>注册LeanCloud</h2><p>LeanCloud注册地址：<a href="https://leancloud.app/">LeanCloud</a>，选择国际版，国际版与国内版速度没有区别。</p><p>注册完成后，选择左上角应用-创建应用-开发版、命名，然后选择创建并打开。</p><p>选择数据存储-结构化数据-创建class-命名并直接创建。</p><p>在新建的应用中-结构化数据-用户（User）。点击添加行，输入想用的用户名及密码，这个账户就是用来发布说说用的。</p><p>回到结构化数据中，点击 class 最下面自己新建的class 。进入权限，在 Class 访问权限中将 <code>add_fields</code> 以及 <code>create</code> 权限设置为指定用户，输入你刚才输入的用户名会自动匹配。为了安全起见，将<code>delete</code>和 <code>update </code>也设置为跟它们一样的权限。<br>然后新建一个名为<code>atComment</code>的class，权限什么的使用默认的即可。</p><p>点击 class 下的 <code>_User</code> 添加列，列名称为 img，默认值填上你这个账号想要用的发布说说的头像url，这一项不进行配置，说说头像会显示为默认头像 Artitalk 的 logo。</p><p>在最左菜单栏中找到设置 -&gt; 应用凭证，记下来 <code>AppID</code> 和 <code>AppKey</code> ，用于后续主题配置文件。</p><p>最后将 <code>_User</code> 中的权限全部调为指定用户，或者数据创建者，为了保证不被篡改用户数据已达到强制发布说说。</p><h2 id="下载Artitalk"><a href="#下载Artitalk" class="headerlink" title="下载Artitalk"></a>下载Artitalk</h2><p><a href="https://github.com/ArtitalkJS/Artitalk">代码仓库</a></p><p>下载完成后有个 Artitalk 目录，dist 里面就是组件代码。</p><h2 id="放入组件"><a href="#放入组件" class="headerlink" title="放入组件"></a>放入组件</h2><p>在主题目录 <code>/source/libs</code> 目录新建一个文件夹 <code>artitalk</code>。</p><p>将<code>/Artitalk/dist/css/</code> 下的 <code>artitalk.min.css</code> 复制到主题目录 <code>/source/libs/artitalk</code>下；</p><p>将 <code>/Artitalk/dist/js/</code> 下的 <code>artitalk.min.js</code> 复制到主题目录 <code>/source/libs/artitalk</code>下；</p><p>因为尽量和 matery 引入风格一致。</p><p>修改主题配置 <code>_config.yml</code> 文件，搜索关键词 <code>libs</code></p><p>找到 css 在最后一行添加：</p><pre><code class="line-numbers language-yaml">artitalk: /libs/artitalk/artitalk.min.css</code></pre><p>找到 js 在最后一行</p><pre><code class="line-numbers language-yaml">artitalk: /libs/artitalk/artitalk.min.js</code></pre><p>如果一直想用最新版，可以换成CDN最新版：<code>https://cdn.jsdelivr.net/npm/artitalk</code></p><p>找到主题目录下 <code>/layout/_partial/head.ejs</code>，在头部引入css</p><pre><code class="line-numbers language-html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.css.artitalk) %&gt;&quot;&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo跳过source下指定文件的渲染</title>
      <link href="posts/5dbc.html"/>
      <url>posts/5dbc.html</url>
      
        <content type="html"><![CDATA[<p>不对根目录下source/目录下的指定文件进行渲染具体操作</p><p>关于hexo的根目录<code>_config.yml</code>配置，官方文档中：</p><pre><code class="line-numbers language-YML">skip_render：跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。</code></pre><p>如果要跳过source文件夹下的<code>test.html</code>，可以这样配置：</p><pre><code class="line-numbers language-YML">skip_render: test.html</code></pre><p>注意，千万不要手贱加上个<code>/</code>写成<code>/test.html</code>，这里只能填相对于source文件夹的<strong>相对路径</strong>。</p><p>如果要忽略source下的test文件夹下所有文件，可以这样配置：</p><pre><code class="line-numbers language-YML">skip_render: test/*</code></pre><p>如果要忽略source下的test文件夹下<code>.html</code>文件，可以这样配置：</p><pre><code class="line-numbers language-YML">skip_render: test/*.html</code></pre><p>如果要忽略source下的test文件夹下所有文件和目录，可以这样配置：</p><pre><code class="line-numbers language-YML">skip_render: test/**</code></pre><p>如果要忽略多个路径的文件或目录，可以这样配置：</p><pre><code class="line-numbers language-YML">skip_render:  - test.html  - test/*</code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Obsidian优化记录</title>
      <link href="posts/7c30.html"/>
      <url>posts/7c30.html</url>
      
        <content type="html"><![CDATA[<h2 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h2><p>软件中更改主题可能出现无法加载状态，需要科学上网条件才能加载主题。</p><p>可以通过其他渠道下载主题样式文件(.CSS)，放入到<code>.obsidian\themes</code>文件夹中即可</p><p>选择简单舒适的<code>Minimal</code>主题：<a href="https://github.com/kepano/obsidian-minimal">Minimal</a></p><p>搭配主题配置插件：(<a href="obsidian://show-plugin?id=obsidian-minimal-settings">Minimal Theme Settings</a>)</p><h2 id="设置模板"><a href="#设置模板" class="headerlink" title="设置模板"></a>设置模板</h2><p>在笔记文件目录下新建一个用来存放模板的可见文件夹(不带”.”)，如scaffolds，</p><p>在此目录下新建一个Markdown文件，里面输入的内容就是你的模板内容。</p><p>核心插件中开启插件模板，找到插件列表选择模板-模板文件位置中输入scaffolds</p><p>时间格式可以自行设置，不设置将按照默认格式应用，设置完成后，可以在模板中任意位置引用<code>&#123;&#123;date&#125;&#125;</code>、<code>&#123;&#123;time&#125;&#125;</code>、<code>&#123;&#123;titile&#125;&#125;(即文件标题)</code>，则会在插入模板时这些代码变成实时日期、或对应的文件标题。</p><p>使用模板时，<code>Ctrl+P</code>打开面板选择插入模板，或者设置插入模板快捷键快速使用。</p><blockquote><p>因自己的笔记文件夹(obsidian的库)放置在hexo的_post文件夹上，obsidian新建的模板会被hexo渲染从而产生错误，为此需要在hexo中_config.yml中设置skip_render跳过渲染。具体操作记录在[[Hexo跳过source下指定文件的渲染]]</p></blockquote><h2 id="显示标题标记"><a href="#显示标题标记" class="headerlink" title="显示标题标记"></a>显示标题标记</h2><p>像Typora那样，能在所见即所得的实时预览模式下，给标题打上标记，区分标题级别。</p><p>因obsidian底层更新，暂时无法使用。</p><p>下载<code>.css</code>文件:<a href="https://github.com/deathau/obsidian-snippets/blob/main/clutter-free-headings.css">Clutter-Free Headings</a></p><p>将内容复制下来，并且命名文件<code>Clutter-Free Heading.css</code>，将css文件放在<code>vault/.obsidian/snippets</code>下，在外观-CSS代码片段中打开并刷新加载。</p><p>各类样式库资源参考：<a href="https://github.com/kmaasrud/awesome-obsidian">awesome-obsidian</a>、<a href="https://github.com/deathau/obsidian-snippets">obsidian-snippets</a></p><h2 id="规整文本两端对齐"><a href="#规整文本两端对齐" class="headerlink" title="规整文本两端对齐"></a>规整文本两端对齐</h2><p>用来规整两边文本对齐优化，看起来更加整齐。</p><p>根据上面同样的方法安装使用，代码地址：<a href="https://github.com/kmaasrud/awesome-obsidian/blob/master/code/css-snippets/hyphenation-and-justification.css">hyphenation-and-justification</a>。</p><h2 id="标签颜色"><a href="#标签颜色" class="headerlink" title="标签颜色"></a>标签颜色</h2><p>改代码用来更改标签颜色，也可以更根据代码格式自己照着定义特定标签颜色。代码地址：<a href="https://github.com/kmaasrud/awesome-obsidian/blob/master/code/css-snippets/hyphenation-and-justification.css">Tag-Pills</a></p>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Obsidian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>keepass最安全的密码管理方案</title>
      <link href="posts/412b.html"/>
      <url>posts/412b.html</url>
      
        <content type="html"><![CDATA[<p>相较于密码管理软件，论安全、自由性、稳定性、开源免费等这些特征，剩下的软件只有bitwarden、keepass两款软件，最终还是从bitwarden替换为keepass，其中一个重要原因是，keepass的数据能保留在自己手上。</p><p>bitwarden及时自己搭建，也没有单独的数据库可以导出，不方便备份。</p><p>keepass什么都好，唯一一点就是配置过程麻烦，所以记录一下搭建过程。</p><p>如果你也需要配置，有觉得太麻烦，我把自己Windows端配置好的keepass(含文中提到的插件)供下载，剩下你只需要在按照文中安装浏览器扩展及手机端软件即可。</p><p><a href="https://sumsung.lanzoub.com/iuQWh02ng8oj">下载地址</a></p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>Windows端下载地址：<a href="https://keepass.info/download.html">keepass</a></p><p>下载便携版2.x版本，方便携带和转移，比如放置在U盘中。</p><p>如果是两台Windows端电脑考虑同步的话，安装便携版，避免两台电脑安装配置两次。</p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p><code>ctrl+N</code>或者在<code>Files</code>→<code>new</code>中，然后选择一个地方存放你的数据库.kdbx（这个文件存放的就是你的密码，名称可以随意）</p><p>弹出来的数据库存放地址，可以将他放在网盘里，实现同步和备份。</p><p>以后在任何设备，只要使用keepass打开这个数据库文件就可以访问整个密码库。</p><p>设置你的数据库密码，这个密码非常重要，密码强度应该要保证强度足够。因为这个密码管理这你所有账号的密码，即one password keep all others。</p><p>设置「安全」选项卡中的「迭代次数」<br>迭代次数越高数据库越难被暴力破解，但每次打开数据库的耗时也越长，你可以根据自己的需要来进行设置<code>（可以保持默认）</code></p><p>设置完之后，点击「OK」，会弹出一个打印应急表单的窗口，点击「跳过」即可。</p><h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><p>KeePass 的另一大优势还在于，由于软件本身开源，所以它拥有非常多强大的插件：</p><p><a href="https://keepass.info/plugins.html">插件地址</a></p><p>下面是一些常用的插件</p><h3 id="汉化插件"><a href="#汉化插件" class="headerlink" title="汉化插件"></a>汉化插件</h3><p><a href="https://keepass.info/translations.html">汉化插件下载地址</a><br>选择Chinese，simp.中对应的版本，将下载的<code>Chinese_Simplified.lngx</code>文件keepass文件夹的language中。</p><p>运行 KeePass.exe 启动程序，点击 View » Change Language » 双击简体中文即可更改语言。</p><h3 id="KPEnhancedEntryView"><a href="#KPEnhancedEntryView" class="headerlink" title="KPEnhancedEntryView"></a>KPEnhancedEntryView</h3><p>KPEnhancedEntryView 这个插件的作用是提供更方便的主页面视图，同时按 F9 就可以一键查看／隐藏所有加密字段，同时也能在主界面直接修改用户名、密码、添加备注和附件，可以说是必备插件。<br><img src="https://images.xmq.plus/202204050948658.png" alt="插件截图"></p><p>下载地址：<a href="https://sourceforge.net/projects/kpenhentryview/files/">KPEnhancedEntryView</a></p><p>插件下载后，把解压出来的 .plgx 文件，放于 KeePass 的 Plugins 文件夹中，就完成安装了。</p><h3 id="AutoTypeSearch"><a href="#AutoTypeSearch" class="headerlink" title="AutoTypeSearch"></a>AutoTypeSearch</h3><p>用于在 KeePass 未能成功匹配的时候，快速搜索你的密码数据库。</p><p>你可以在 KeePass 的工具 » 选项 » AutoTypeSearch中设置一个呼出快捷键，比如设置<code>Ctrl+Alt+Q</code>，可以实现全局搜索。</p><p>下载地址：<a href="https://sourceforge.net/projects/autotypesearch/">AutoTypeSearch</a></p><h3 id="CheckPasswordBox"><a href="#CheckPasswordBox" class="headerlink" title="CheckPasswordBox"></a>CheckPasswordBox</h3><p>此插件的作用很简单：在使用自动输入时防止误输密码到非密码框。</p><p>下载地址：<a href="https://sourceforge.net/projects/checkpasswordbox/">CheckPasswordBox</a></p><h3 id="RDCAutoTypeAndTCATO"><a href="#RDCAutoTypeAndTCATO" class="headerlink" title="RDCAutoTypeAndTCATO"></a>RDCAutoTypeAndTCATO</h3><p>此插件增加了对远程桌面连接 （RDC） 窗口自动输入的支持</p><p>更关键的是，对于QQ这类窗口也需要此插件才能正常进行自动输入</p><p>下载地址：<a href="https://rdc-keepass-plugin.appspot.com/">RDCAutoTypeAndTCATO</a></p><p>设置方法是：点击工具 » RDCAutoTypeTCATO » Programs List，把 QQ.exe 和 QQProtect.exe 添加到右边的窗口，保存并退出</p><h3 id="KeePassHttp"><a href="#KeePassHttp" class="headerlink" title="KeePassHttp"></a>KeePassHttp</h3><p>作用是连接浏览器与 KeePass，这款插件倒没有什么需要设置的，下载后放到  Plugins 文件夹中即可</p><p>下载地址：<a href="https://github.com/pfn/keepasshttp/">KeePassHttp</a></p><h3 id="KPSimpleBackup"><a href="#KPSimpleBackup" class="headerlink" title="KPSimpleBackup"></a>KPSimpleBackup</h3><p>此插件的作用是对数据库进行备份，每保存一次即可触发备份或者手动备份。</p><p>下载地址：<a href="https://github.com/marvinweber/KPSimpleBackup/releases">KPSimpleBackup</a></p><p>插入插件后，选择工具-KPSimpleBackup-选择设置(Setting)-Add folder-确认文件备份路径即可。如果需要手动备份，每一次需要备份时可以点击Back database now！</p><h2 id="浏览器扩展"><a href="#浏览器扩展" class="headerlink" title="浏览器扩展"></a>浏览器扩展</h2><p>单给 KeePass 加上了 KeePassHttp 插件还没完，主要是要与浏览器扩展搭配才可</p><p>在浏览器上安装 KeePassHttp-Connector 这款扩展：</p><ul><li><p><a href="https://microsoftedge.microsoft.com/addons/detail/keepassconnectoredge/bjfplpjakcjndfljopfdmmcankpopdki">Edge版安装地址</a></p></li><li><p><a href="https://chrome.google.com/webstore/detail/keepasshttp-connector/dafgdjggglmmknipkhngniifhplpcldb">Chrome下载地址</a></p></li><li><p><a href="https://www.gugeapps.net/webstore/detail/keepasshttp-connector/dafgdjggglmmknipkhngniifhplpcldb">国内可用Chrome下载地址1</a></p></li><li><p><a href="https://www.extfans.com/productivity/dafgdjggglmmknipkhngniifhplpcldb/">国内可用Chrome版下载地址2</a></p></li><li><p><a href="https://addons.mozilla.org/en-US/firefox/addon/keepasshttp-connector/">火狐版安装地址</a></p></li></ul><p>确保你的 KeePass 已经启动，然后点击浏览器扩展栏的 KeePassHttp-Connector 扩展图标，并进行连接，首次连接需要你设置一个 Key name<code>（这个看自己喜欢随意设置即可）</code>，然后你就能看成功的将浏览器与 KeePass 关联起来了。</p><p>然后你就能很方便的将在浏览器输入的密码，新建并保存到 KeePass 了。</p><p>在你输入完密码后，在密码框右键，选择 KeePassConnect 的保存登录信息</p><p>然后右上角的 KeePassConnect 的扩展图标将会闪动，点击一下，将可以将密码新建或者更新到 KeePass 中。</p><p><img src="https://images.xmq.plus/202204051023554.png" alt="保存登录信息"></p><h2 id="数据库同步"><a href="#数据库同步" class="headerlink" title="数据库同步"></a>数据库同步</h2><p>KeePass 实现全平台同步的办法是将数据库文件存放到同步网盘中。</p><p>可以使用OneDrive或者坚果云的Webdev</p><p>数据库的大小非常小，非常使用坚果云的免费Webdev进行全平台同步。</p><h3 id="坚果云同步"><a href="#坚果云同步" class="headerlink" title="坚果云同步"></a>坚果云同步</h3><p><a href="https://www.jianguoyun.com/">坚果云</a></p><p>把你的 .kdbx数据库文件，上传到坚果云的一个新建文件夹（文件夹名需要是英文）</p><p>然后在网页右上角账户 » 账户信息 » 安全选项中，添加一个应用并生成密码</p><p><img src="https://images.xmq.plus/202204051031855.png" alt="安全选项"></p><p>接着回到 KeePass 中，点击文件 » 打开 » 打开网址</p><p><img src="https://images.xmq.plus/202204051034052.png" alt="打开网址"></p><p>比如我的情况是：在 Keepass 文件夹下，密码数据库的文件名是：PasswordDatebase.kdbx，所以我的地址是：<a href="https://dav.jianguoyun.com/dav/Keepass/PasswordDatebase.kdbx">https://dav.jianguoyun.com/dav/Keepass/PasswordDatebase.kdbx</a></p><p>而用户名是坚果云账号，密码是上面在坚果云中生成的应用密码</p><p>OK，到这里其实就已经实现了云同步了。</p><p>后期也可以定期对数据库文件下载进行备份，充分保证数据安全。</p><h3 id="添加触发器实现自动保存"><a href="#添加触发器实现自动保存" class="headerlink" title="添加触发器实现自动保存"></a>添加触发器实现自动保存</h3><p>虽然目前你已经可以直接通过 KeePass 原生的同步功能进行同步了，但每次同步都需要自己手动点击保存，这可能对于某些人来说太麻烦了</p><p>当然，你要是能养成每次添加、修改数据库密码后就手动Ctrl+S保存的好习惯，也不用下面这些设置</p><p>但对于部分人来说，有修改后就自动保存还是挺重要的，所以这里就介绍一下方法：点击工具 » 触发器</p><pre><code class="line-numbers language-HTML">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;  &lt;TriggerCollection xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;  &lt;Triggers&gt;  &lt;Trigger&gt;  &lt;Guid&gt;L2euC7Mr/EKh7nPjueuZvQ==&lt;/Guid&gt;  &lt;Name&gt;SaveSync&lt;/Name&gt;  &lt;Events&gt;  &lt;Event&gt;  &lt;TypeGuid&gt;s6j9/ngTSmqcXdW6hDqbjg==&lt;/TypeGuid&gt;  &lt;Parameters&gt;  &lt;Parameter&gt;1&lt;/Parameter&gt;  &lt;Parameter&gt;kdbx&lt;/Parameter&gt;  &lt;/Parameters&gt;  &lt;/Event&gt;  &lt;/Events&gt;  &lt;Conditions /&gt;  &lt;Actions&gt;  &lt;Action&gt;  &lt;TypeGuid&gt;tkamn96US7mbrjykfswQ6g==&lt;/TypeGuid&gt;  &lt;Parameters&gt;  &lt;Parameter&gt;SaveSync&lt;/Parameter&gt;  &lt;Parameter&gt;0&lt;/Parameter&gt;  &lt;/Parameters&gt;  &lt;/Action&gt;  &lt;Action&gt;  &lt;TypeGuid&gt;Iq135Bd4Tu2ZtFcdArOtTQ==&lt;/TypeGuid&gt;  &lt;Parameters&gt;  &lt;Parameter&gt;https://dav.jianguoyun.com/dav/keePass/passwordSync.kdbx&lt;/Parameter&gt;  &lt;Parameter&gt;123456&lt;/Parameter&gt;  &lt;Parameter&gt;123456&lt;/Parameter&gt;  &lt;/Parameters&gt;  &lt;/Action&gt;  &lt;Action&gt;  &lt;TypeGuid&gt;tkamn96US7mbrjykfswQ6g==&lt;/TypeGuid&gt;  &lt;Parameters&gt;  &lt;Parameter&gt;SaveSync&lt;/Parameter&gt;  &lt;Parameter&gt;1&lt;/Parameter&gt;  &lt;/Parameters&gt;  &lt;/Action&gt;  &lt;/Actions&gt;  &lt;/Trigger&gt;  &lt;/Triggers&gt;  &lt;/TriggerCollection&gt;</code></pre><p>复制好以上代码后，在触发器这里，点击「从剪贴板粘贴触发器」</p><p><img src="https://images.xmq.plus/202204051046625.png" alt="剪切板粘贴触发器"></p><p>接着会多出一个 SaveSync 的触发器，选中它 » 点击编辑</p><p>在动作选项卡中，选中第二个动作，点击编辑，修改其中的网址、用户名、密码设置为你自己的<code>（和上一步WebDAV同步的网址、账户、密码相同）</code></p><p><img src="https://images.xmq.plus/202204051051147.png" alt="触发器设置"></p><h2 id="自动输入"><a href="#自动输入" class="headerlink" title="自动输入"></a>自动输入</h2><p>KeePass 搭配上面的 KeePassHttp-Connector 浏览器扩展就已经能很好的实现密码自动输入了，但如果你想在一些软件上也实现密码自动输入，就需要额外进行一些设置了</p><p>设置的前提是你安装了 CheckPasswordBox 这款插件</p><p>在KeePass主页面选中你的数据库并右键 » 编辑群组 » 自动输入 » 替代默认规则为：<code>+&#123;DELAY 100&#125;&#123;CLEARFIELD&#125;&#123;USERNAME&#125;&#123;TAB&#125;&#123;PASSWORDBOX&#125;&#123;PASSWORD&#125;&#123;ENTER&#125;</code></p><p><img src="https://images.xmq.plus/202204051056961.png" alt="替代默认规则"></p><p>然后在工具 » 选项 » 集成中设置自动输入的快捷键，比如<code>Ctrl+Alt+A</code>自动输入、<code>Ctrl+Alt+Shift+A</code>自动输入密码、<code>Ctrl+Alt+K</code>打开keepass面板（另外如果你需要KeePass开机启动，也可以在这里进行设置）</p><p>最后，对于你需要自动输入密码的客户端，需要手动进行添加，比如想实现百度云客户端用户名、密码的进行自动输入</p><p>那就要先确保百度云客户端正处于登录窗口，再双击在 KeePass 中双击编辑百度密码的那条记录，在自动输入中 » 添加目标窗口</p><p><img src="https://images.xmq.plus/202204051109346.png" alt="添加自动输入"></p><h2 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h2><h3 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h3><p>保证在每次需要使用时，浏览器的插件都能正常连接到keepass，所以设置keepass开机自启动更加方便。</p><p>工具-选项-集成-选择随系统启动。</p><p>但是这个每次开机后都需要输入一次密码。介意的可以选择不设置此项。</p><h3 id="最小化至系统托盘"><a href="#最小化至系统托盘" class="headerlink" title="最小化至系统托盘"></a>最小化至系统托盘</h3><p>工具-选项-外观-勾选最小化到系统托盘(而不是任务栏)。</p><p>或者勾选关闭×按钮最小化窗口，而不是退出程序。退出程序可以使用<code>Ctrl+Q</code>快捷键退出。</p><p>这样设置似乎更人性化，可根据自己需求选择。</p><h3 id="其他密码软件导入"><a href="#其他密码软件导入" class="headerlink" title="其他密码软件导入"></a>其他密码软件导入</h3><p>从其他已有的密码管理软件、浏览器或者网站导入账号密码至keepass中。</p><p>选择文件-导入-选择导入格式并选择文件进行导入。</p><h2 id="手机端同步"><a href="#手机端同步" class="headerlink" title="手机端同步"></a>手机端同步</h2><p>安卓端普遍推荐的都是 Keepass2Android，算是同类APP中最好用的那个。</p><p>你可以在SOFTPEDIA上下载：<a href="https://mobile.softpedia.com/apk/keepass2android-password-safe/">Keepass2Android</a></p><p>安装好之后，首次打开 Keepass2Android，选择打开文件 » 选择HTTPS格式的WebDav</p><p>然后就是输入你数据库的坚果云 WebDAV 地址，填写你的坚果云账号，与坚果云中设置的第三方应用密码</p><p>将数据库导入进来之后，再输入你的数据库管理密码进行打开（如果你有设置密钥，需要把密钥文件拷贝到你的手机上）</p><p>新版的 Keepass2Android 已经支持自动识别与填充，甚至部分APP内的登录都是支持的（如酷安）</p><p>最后，Windows端只要填入相应的登录网址，一般可以自动填充。如果不能自动填充，使用自动输入快捷键快速录入。</p><p>设置的快捷键也能提高使用效率：</p><p><code>Ctrl+Alt+Q</code>全局搜索<br><code>Ctrl+Alt+A</code>自动输入<br><code>Ctrl+Alt+Shift+A</code>自动输入密码<br><code>Ctrl+Alt+K</code>打开keepass面板</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Keepass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于业内资料编制工作汇报</title>
      <link href="posts/21d7.html"/>
      <url>posts/21d7.html</url>
      
        <content type="html"><![CDATA[<p>问：<br>规范内业资料管理。施工过程中内业资料编制是否及时？如何保证及时性，竣工收尾阶段如何快速归档，以及集中保管的做法和建议。</p><p>答：</p><h2 id="施工过程中内业编制是否及时？如何保证及时性"><a href="#施工过程中内业编制是否及时？如何保证及时性" class="headerlink" title="施工过程中内业编制是否及时？如何保证及时性"></a>施工过程中内业编制是否及时？如何保证及时性</h2><p>及时，施工过程中内页资料编制做到及时跟进现场实际进度，后期竣工验收资料编制能做到与现场施工同步。</p><p>保证内业编制及时总结有以下几点</p><h3 id="施工过程中资料整理"><a href="#施工过程中资料整理" class="headerlink" title="施工过程中资料整理"></a>施工过程中资料整理</h3><ol><li>保证现场施工情况获取及时</li></ol><p>资料的准确性和及时性的前提是现场施工情况能够及时获取，应建立一个施工进度情况汇报的小组、工作群，保证每个工作面的施工情况都有专人汇报每日施工进度，再通过编制资料人员对各个工作面资料进行整理汇总。</p><ol start="2"><li>施工过程中资料模板化、流程化</li></ol><p>施工前期，根据工程情况、资料归档要求、现场施工情况等方面，提前对施工过程中资料进行模板化、流程化，以便于快速高效地编制工程资料，可有效解决施工过程中工期紧、任务重环境下编制各种施工资料而时间匆促的问题。</p><ol start="3"><li>借助软件提高工作效率</li></ol><p>施工生产中很多编制资料都是同一个模板，可以在施工前期提前规划好、提前做好模板，必要时，可以借助办公软件辅助，如excel公式、word宏，进行批量处理，可以降低出错率，同时还能避开重复性操作，提高资料编制人员的效率和资料编制的准确率。</p><p>如下图，借助excel公式制作工程日报模板，每日仅需输入关键数据即可快速生成日报情况<br><img src="https://images.xmq.plus/202204031627441.png" alt="借助excel公式制作工程日报模板"></p><ol start="4"><li>资料编制实时跟踪现场施工进度</li></ol><p>施工过程中资料，应实时根据现场施工进度进行编制。实时跟进资料编制，一是能够有效记录工程施工的实际情况，体现资料的价值意义；二是减轻后期资料整理的压力，给后期竣工验收资料整理留足时间；三是后期对分部分项资料、单位（子单位）工程资料、竣工资料整理汇总逻辑上不会出现错误，方便后期资料编制有据可查。</p><ol start="5"><li>分类规整</li></ol><p>编制资料往往不是一个简单的、同类型的资料，面对复杂的资料编制及整理，需要对资料进行分类规整，分类目、分电子文件夹、分实体文件盒、文件柜；类目较多时，同样可以借助思维导图一类软件对结构脉络进行可视化，对于实体文件盒子添上明确、便于区分的标签，保证资料明确可查。</p><ol start="6"><li>跟进过程中资料的同时做好台账记录</li></ol><p>一个工程项目往往工期周期长，伴随的资料繁多，编制资料的过程中不仅要保证资料的实时跟进，随着时间的累积资料数目也会增多，应在整理的资料文件夹下存有配套的记录台账，台账能够让资料变得一目了然、思路清晰，容易发现资料的完整性与否，及时发现问题，及时解决。</p><p>台账应记录必要的关键信息，如序号、具体施工部位、施工里程、浇筑时间、结构类型、备注等等，后期快速查阅、筛选汇总、统计计算、理清脉络有着不容小觑的作用。</p><h2 id="竣工收尾阶段如何快速归档，以及集中保管的做法和建议"><a href="#竣工收尾阶段如何快速归档，以及集中保管的做法和建议" class="headerlink" title="竣工收尾阶段如何快速归档，以及集中保管的做法和建议"></a>竣工收尾阶段如何快速归档，以及集中保管的做法和建议</h2><p>竣工收尾阶段做到快速归档总结有以下几点：</p><h3 id="后期竣工验收资料整理"><a href="#后期竣工验收资料整理" class="headerlink" title="后期竣工验收资料整理"></a>后期竣工验收资料整理</h3><ol><li>施工过程中资料体系完整</li></ol><p>后期分部分项、单位（子单位）工程、竣工预验收、竣工验收资料整理主要是在施工过程中资料基础上进行编制及汇总，因此，保证施工过程中资料跟进及时、资料体系完整、脉络清晰，有利于后期资料编制汇总的效率、正确率都会大幅提升，以达到资料及时移交的目的。</p><p>后期竣工验收资料整理同样系统地对照档案馆、移交单位等各方要求的目录和编制要求进行梳理、收集即可快速编制，甚至在施工过程中即可编制完成。</p><p>2.后期竣工资料提前编制完成</p><p>后期竣工资料涉及到多方单位盖章签字，存在一定的流程，需要一定的时间周期，应预留各方单位充分时间，做到资料提前整理完成，按时或提前盖章签字完成，达到移交要求。</p><p>3.梳理汇总工程关键信息</p><p>后期收尾阶段归档资料常常涉及的是一些工程汇总性的信息，如项目概况、分部分项、子单位工程、单位工程等信息。对一些常用、关键性的工程进行汇总、记录。便于在编制时方便快速查找，从而快速编制。比如，从施工过程中资料的台账中汇总出各个分部分项、子单位、单位工程的施工记录数，最早分部分项施工时间、最晚子单位浇筑时间等等。</p><p>后期竣工验收资料很大一部分数据都来自于施工过程中文件的整理归纳，要保证竣工验收资料快速归档的基础在于施工过程中资料编制系统完整、可靠、准确。</p><h3 id="资料集中保管的做法及建议"><a href="#资料集中保管的做法及建议" class="headerlink" title="资料集中保管的做法及建议"></a>资料集中保管的做法及建议</h3><p>资料整理过程中总结有以下几点：</p><ol><li>按资料分柜、分盒</li></ol><p>一个完整的工程项目资料繁多，种类结构复杂，对不同类目的文件大项使用文件柜、文件层分类，细项按文件盒归档保管。对于文件较多的一类资料，设置多个同名文件盒，并将文件盒名称排序。</p><ol start="2"><li>资料有序、有台账</li></ol><p>单个文件盒的同类文件，长期不变的文件应按序、按台账、按时间排列等方式由上到下依次排列，如技术交底、进度计划、浇筑记录等等。</p><ol start="3"><li>电子文件与纸质文件相对应</li></ol><p>电子文件与纸质版文件如果情况允许，尽量保证实体文件排列结构、排列方法与电子版中文件一一对应，可以在电子版中台账快速核对文件完整性。文件不在柜时做好台账、做好记录，防止文件缺失。</p><ol start="4"><li>电子文件定期备份</li></ol><p>电子文件资料记录着整个施工过程，电子文件的损失是不可逆的，对文件定期备份是必不可少的一步，也是降低损失最重要的一步。应使用硬盘、U盘、或网盘对文件进行定期备份。</p><ol start="5"><li>纸质文件防水防潮、设锁</li></ol><p>纸质文件大部分经过签字盖章，防止文件丢失造成损失，应对纸质文件资料存放位置进行选择，保证纸质材料干燥，做到防水防潮。其次，对文件柜中的资料存放后关闭柜门，并设置门锁。</p><ol start="6"><li>资料汇总至一个存储设备</li></ol><p>编制资料最好由一人编制，存储至一台电脑上。如果工作强度大，需多人协同完成，建议资料修改完成后统一收集到一个位置，避免出现所有资料不同版本分布在每个人的工作电脑上，后期可能无法判断资料具体哪个版本为最终版本，否则容易出现文件在一台电脑上有，另一个文件在另一台电脑上，出现文件体系不完整的现象。每次修改完成后应存放到同一个位置，或者同步到所有电脑上。条件许可的情况下，可以通过一定的设备和软件、网络资源将所有资料文件统一存放到一个局域网网盘、网盘、存储设备等，保证资料系统文件的完整性。</p>]]></content>
      
      
      <categories>
          
          <category> 土木工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Echarts图表异步加载数据</title>
      <link href="posts/d11b.html"/>
      <url>posts/d11b.html</url>
      
        <content type="html"><![CDATA[<p>echarts图表中数据太多，可以将数据从页面配置项中拿出来，放入到单独的json文件中，并对其进行引用。简洁页面代码的同时也易于管理。</p><h2 id="异步加载"><a href="#异步加载" class="headerlink" title="异步加载"></a>异步加载</h2><p><a href="https://echarts.apache.org/handbook/zh/get-started">入门示例</a>中的数据是在初始化后<code>setOption</code>中直接填入的，但是很多时候可能数据需要异步加载后再填入。<code>ECharts</code> 中实现异步数据的更新非常简单，在图表初始化后不管任何时候只要通过 jQuery 等工具异步获取数据后通过 <code>setOption</code> 填入数据和配置项就行。</p><pre><code class="line-numbers language-js">var myChart = echarts.init(document.getElementById(&#39;main&#39;));$.get(&#39;data.json&#39;).done(function(data) &#123;  // data 的结构:  // &#123;  //     categories: [&quot;衬衫&quot;,&quot;羊毛衫&quot;,&quot;雪纺衫&quot;,&quot;裤子&quot;,&quot;高跟鞋&quot;,&quot;袜子&quot;],  //     values: [5, 20, 36, 10, 10, 20]  // &#125;  myChart.setOption(&#123;    title: &#123;      text: &#39;异步数据加载示例&#39;    &#125;,    tooltip: &#123;&#125;,    legend: &#123;&#125;,    xAxis: &#123;      data: data.categories    &#125;,    yAxis: &#123;&#125;,    series: [      &#123;        name: &#39;销量&#39;,        type: &#39;bar&#39;,        data: data.values      &#125;    ]  &#125;);&#125;);</code></pre><p>参考来源：<a href="https://echarts.apache.org/handbook/zh/how-to/data/dynamic-data">异步数据的加载与动态更新</a></p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>以引入数据文件<code>salary_data.json</code>为例，名称可以自定义。</p><p>在需要引入数据文件的echarts配置项中，写入引入路径代码：<br>一般写在定义option后</p><pre><code class="line-numbers language-JS">&lt;script type=&quot;text/javascript&quot;&gt;var dom = document.getElementById(&quot;container&quot;); var myChart = echarts.init(dom);var app = &#123;&#125;;var option;//在此配置项位置引入路径，如需引入网络路径则：//var ROOT_PATH = &#39;https://XXX&#39;//$.get(ROOT_PATH + &#39;/salary_data.json/.json&#39;, function (data) &#123; //myChart.setOption( (//引入本地路径，如根目录下salary_data.json文件$.get(&#39;/salary_list.json&#39;, function (salary_data) &#123;myChart.setOption((option = &#123;xxx；          ...&#125;))&#125;)// 即将配置项option包起来，对应的括弧在此位置结束 if (option &amp;&amp; typeof option === &#39;object&#39;) &#123; myChart.setOption(option); &#125; //myChart名称需一一对应 &lt;/script&gt;</code></pre><p>如果一个页面内有多个独立的echarts图表、或者多个独立的echarts配置脚本（scripts），可以使用同一个数据json文件中的数据。但是需要在页面中每个配置脚本中加入引入路径代码。且保证每个charts名称不能一致，如改为 sheet1Chart.setOption、 sheet2Chart.setOption：</p><pre><code class="line-numbers language-JS">// 第一个脚本&lt;script type=&quot;text/javascript&quot;&gt;    XXX; $.get(&#39;/salary_data.json&#39;, function (salary_data) &#123; sheet1Chart.setOption( (    XXX;    )) &#125;) if (option &amp;&amp; typeof option === &#39;object&#39;) &#123; sheet1Chart.setOption(option); &#125; &lt;/script&gt;// 第二个脚本&lt;script type=&quot;text/javascript&quot;&gt;    XXX; $.get(&#39;/salary_data.json&#39;, function (salary_data) &#123; sheet2Chart.setOption( (    XXX;    )) &#125;) if (option &amp;&amp; typeof option === &#39;object&#39;) &#123; sheet2Chart.setOption(option); &#125; &lt;/script&gt;</code></pre><p>在hexo主题目录下source/（hexo根目录）下新建一个数据文件salary_data.json，输入数据格式：</p><pre><code class="line-numbers language-JSON">&#123;&quot;数据名1&quot;: [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;],&quot;数据名2&quot;: [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;],&quot;数据名3&quot;: [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;],&quot;数据名4&quot;: [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;],&quot;数据名5&quot;: [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;]&#125;// 数据名使用字母字符，只是为了便于理解使用的数据名。</code></pre><p>在需要使用数据的配置项中即可直接使用数据：</p><pre><code class="line-numbers language-JS">series: [ &#123; name: &#39;数据名1&#39;, data: salary_data.数据名1 &#125;, &#123; name: &#39;数据名2&#39;, data: salary_data.数据名2 &#125;, &#123; name: &#39;数据名3&#39;, data: salary_data.数据名3 &#125;, &#123; name: &#39;数据名4&#39;, data: salary_data.数据名4 &#125;, &#123; name: &#39;数据名5&#39;, data: salary_data.数据名5 &#125;]</code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Ehcarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客设置数据文件</title>
      <link href="posts/a348.html"/>
      <url>posts/a348.html</url>
      
        <content type="html"><![CDATA[<p>在Hexo页面中，将某些页面中需要重复更新、重复使用的数据信息从页面中分离出来，放入到<code>source/_data</code>中，把所有需要经常更新的数据都放到数据文件下，便于查找及更新，例如，导航页的网站信息、Windows软件信息。</p><h2 id="数据文件"><a href="#数据文件" class="headerlink" title="数据文件"></a>数据文件</h2><p>有时您可能需要在主题中使用某些资料，而这些资料并不在文章内，并且是需要重复使用的，那么您可以考虑使用 Hexo 3.0 新增的「数据文件」功能。此功能会载入 <code>source/_data</code> 内的 YAML 或 JSON 文件，如此一来您便能在网站中复用这些文件了。</p><p>举例来说，在 <code>source/_data</code> 文件夹中新建 <code>menu.yml</code> 文件：</p><pre><code class="line-numbers language-YML">Home: /  Gallery: /gallery/  Archives: /archives/  </code></pre><p>您就能在模板中使用这些资料：</p><pre><code class="line-numbers language-YML">&lt;% for (var link in site.data.menu) &#123; %&gt;   &lt;a href=&quot;&lt;%= site.data.menu[link] %&gt;&quot;&gt; &lt;%= link %&gt; &lt;/a&gt;  &lt;% &#125; %&gt;  </code></pre><p>渲染结果如下 :</p><pre><code class="line-numbers language-HTML">&lt;a href=&quot;/&quot;&gt; Home &lt;/a&gt;  &lt;a href=&quot;/gallery/&quot;&gt; Gallery &lt;/a&gt;  &lt;a href=&quot;/archives/&quot;&gt; Archives &lt;/a&gt;</code></pre><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="导航页网站数据文件"><a href="#导航页网站数据文件" class="headerlink" title="导航页网站数据文件"></a>导航页网站数据文件</h3><p>导航页各个网站的数据信息原本都存放在主题目录下的_config.yml文件中。</p><p>网站数量较多，放在主题目录下容易与其他配置项冗杂在一起。</p><p>source/_data文件下新建文件<code>navsites.yml</code><br>将主题下的配置文件中的导航配置项剪切至<code>navsites.yml</code>中</p><p>修改导航页面代码，定位到新文件中<code>navsites.yml</code>中</p><p>将导航nav.ejs页面下所有涉及网站数据信息的路径进行替换，即将theme.navmenu替换site.data.navsites.navmenu、theme.navlogo替换site.data.navsites.navlogo、theme.navabout替换site.data.navsites.navabout等等，如下所示：</p><pre><code class="line-numbers language-YML"> &lt;!-- e=theme.navmenu --&gt; &lt;% for( let e of theme.navmenu ) &#123; %&gt;</code></pre><p>theme替换为site.data.navsites</p><pre><code class="line-numbers language-YML"> &lt;!-- e=site.data.navsites.navmenu --&gt; &lt;% for( let e of site.data.navsites.navmenu ) &#123; %&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Obsidian关联图床自动上传图片记录</title>
      <link href="posts/d28b.html"/>
      <url>posts/d28b.html</url>
      
        <content type="html"><![CDATA[<h2 id="Obsidian第三方插件无法加载"><a href="#Obsidian第三方插件无法加载" class="headerlink" title="Obsidian第三方插件无法加载"></a>Obsidian第三方插件无法加载</h2><p>如果无法加载第三方社区插件，需提前在obsidian笔记文件下提前加入一个插件</p><p>下载一个插件：<a href="https://github.com/mgmeyers/obsidian-kanban/releases">obsidian-kanban</a></p><p>下载release中main.js、manifest.json、style.css三个文件</p><p>将以上文件放入至obsidian笔记文件下.obsidian/plugins/文件夹下</p><p>重启软件，打开设置-第三方插件-禁用安全模式，点击浏览社区插件即可正常加载。</p><h2 id="Obsidian实现图片自动上传"><a href="#Obsidian实现图片自动上传" class="headerlink" title="Obsidian实现图片自动上传"></a>Obsidian实现图片自动上传</h2><p>在插件搜索栏搜索，PicGo，选择Image auto upload Plugin，安装。</p><p>开启第三方插件，进入设置选项查看picgo的server：</p><p><a href="http://127.0.0.1:36677/upload">http://127.0.0.1:36677/upload</a></p><p>打开picgo软件，确认设置sever打开，且确认是否与obsidian中一致：</p><p><img src="https://images.xmq.plus/202203311002892.png" alt="确认server"></p><p>粘贴图片测试图片是否自动上传至图床，并生成图床链接。</p>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Obsidian </tag>
            
            <tag> 笔记软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础教程</title>
      <link href="posts/4676094d.html"/>
      <url>posts/4676094d.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScirpt教程"><a href="#JavaScirpt教程" class="headerlink" title="JavaScirpt教程"></a>JavaScirpt教程</h1><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="#%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8">快速入门</a></li><li><a href="#%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95">基本语法</a></li><li><a href="#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%8F%98%E9%87%8F">数据类型和变量</a></li></ul><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><ol><li><strong>如何运行JavaScript代码</strong></li></ol><ul><li>直接嵌入</li></ul><pre><code class="line-numbers language-js">&lt;html&gt;&lt;head&gt;  &lt;script&gt;    alert(&#39;Hello, world&#39;);  &lt;/script&gt;&lt;/head&gt;&lt;body&gt;  ...&lt;/body&gt;&lt;/html&gt;</code></pre><p>&emsp; 由<script>...</script>包含的代码就是JavaScript代码，它将直接被浏览器执行。</p><ul><li>引用<code>.js</code>文件</li></ul><pre><code class="line-numbers language-markdown">&lt;html&gt;&lt;head&gt;  &lt;script src=&quot;/static/js/abc.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;  ...&lt;/body&gt;&lt;/html&gt;</code></pre><p>&emsp; 把JavaScript代码放到一个单独的<code>.js</code>文件，然后在HTML中通过<code>&lt;script src=&quot;...&quot;&gt;&lt;/script&gt;</code>引入这个文件,<code>/static/js/abc.js</code>就会被浏览器执行。</p><ol start="2"><li><strong>如何编写JavaScript代码</strong></li></ol><p>可以用任何文本编辑器来编写JavaScript代码。推荐以下几种文本编辑器：</p><ul><li>Visual Studio Code</li></ul><p>微软出的Visual Studio Code，可以看做迷你版Visual Studio，免费！跨平台！内置JavaScript支持。</p><ul><li>Sublime Text</li></ul><p>Sublime Text是一个好用的文本编辑器，免费。</p><ul><li>Notepad++</li></ul><p>Notepad++也是免费的文本编辑器，但仅限Windows下使用。</p><blockquote><p>注意：不可以用Word或写字板来编写JavaScript或HTML，因为带格式的文本保存后不是纯文本文件，无法被浏览器正常读取。也尽量不要用记事本编写，它会自作聪明地在保存UTF-8格式文本时添加BOM头。</p></blockquote><ol start="3"><li><strong>如何调试JavaScript代码</strong></li></ol><ul><li>使用Google Chrome浏览器调试</li></ul><p>要查看一个变量的内容：</p><p>查看(View)-开发者(Developer)-开发者工具(Developer Tools) 在Console中输入console.log(内容);</p><p>回车后显示的值就是变量的内容。</p><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><ol><li><strong>语法</strong></li></ol><p>&emsp; JavaScript的语法和Java语言类似，每个语句以<code>;</code>结束，语句块用<code>&#123;...&#125;</code>。但是，JavaScript并不强制要求在每个语句的结尾加<code>;</code>，浏览器中负责执行JavaScript代码的引擎会自动在每个语句的结尾补上<code>;</code>。</p><p>&emsp; 花括号<code>&#123;...&#125;</code>内的语句具有缩进，通常是4个空格。缩进不是JavaScript语法要求必须的，但缩进有助于我们理解代码的层次，所以编写代码时要遵守缩进规则。很多文本编辑器具有“自动缩进”的功能，可以帮助整理代码。</p><blockquote><p><code>&#123;...&#125;</code>还可以嵌套，形成层级结构</p></blockquote><ol start="2"><li><strong>注释</strong></li></ol><p>&emsp; 以<code>//</code>开头直到行末的字符被视为行注释，注释是给开发人员看到，JavaScript引擎会自动忽略。</p><p>&emsp; 另一种块注释是用<code>/*...*/</code>把多行字符包裹起来，把一大“块”视为一个注释。</p><ol start="3"><li><strong>大小写</strong></li></ol><p>&emsp; JavaScript严格区分大小写。</p><h3 id="数据类型和变量"><a href="#数据类型和变量" class="headerlink" title="数据类型和变量"></a>数据类型和变量</h3><ol><li><strong>Number</strong></li></ol><p>JavaScript不区分整数和浮点数，统一用Number表示，以下都是合法的Number类型：</p><pre><code>123; // 整数1230.456; // 浮点数0.4561.2345e3; // 科学计数法表示1.2345x1000，等同于1234.5-99; // 负数NaN; // NaN表示Not a Number，当无法计算结果时用NaN表示Infinity; // Infinity表示无限大，当数值超过了JavaScript的Number所能表示的最大值时，就表示为Infinity</code></pre><p>Number可以直接做四则运算，规则和数学一致：</p><pre><code>1 + 2; // 3(1 + 2) * 5 / 2; // 7.52 / 0; // Infinity0 / 0; // NaN10 % 3; // 110.5 % 3; // 1.5</code></pre><p>注意%是求余运算。</p><ol start="2"><li><strong>字符串</strong></li></ol><p>字符串是以单引号<code>&#39;</code>或双引号<code>&quot;</code>括起来的任意文本，比如<code>&#39;abc&#39;</code>，<code>&quot;xyz&quot;</code>等等。</p><ol start="3"><li><strong>布尔值</strong></li></ol><p>布尔值和布尔代数的表示完全一致，一个布尔值只有<code>true</code>、<code>false</code>两种值。</p><pre><code>true; // 这是一个true值false; // 这是一个false值2 &gt; 1; // 这是一个true值2 &gt;= 3; // 这是一个false值</code></pre><p><code>&amp;&amp;</code>运算是与运算，只有所有都为<code>true</code>，<code>&amp;&amp;</code>运算结果才是<code>true</code>:</p><pre><code>true &amp;&amp; true; // 这个&amp;&amp;语句计算结果为truetrue &amp;&amp; false; // 这个&amp;&amp;语句计算结果为falsefalse &amp;&amp; true &amp;&amp; false; // 这个&amp;&amp;语句计算结果为false</code></pre><p><code>||</code>运算是或运算，只要其中有一个为<code>true</code>，<code>||</code>运算结果就是<code>true</code>：</p><pre><code>false || false; // 这个||语句计算结果为falsetrue || false; // 这个||语句计算结果为truefalse || true || false; // 这个||语句计算结果为true</code></pre><p><code>!</code>运算是非运算，它是一个单目运算符，把<code>true</code>变成<code>false</code>，<code>false</code>变成<code>true</code>：</p><pre><code>! true; // 结果为false! false; // 结果为true! (2 &gt; 5); // 结果为true</code></pre><p>布尔值经常用在条件判断中，比如：</p><pre><code>var age = 15;if (age &gt;= 18) &#123;    alert(&#39;adult&#39;);&#125; else &#123;    alert(&#39;teenager&#39;);&#125;</code></pre><ol start="4"><li><strong>比较运算符</strong></li></ol><p>JavaScript允许对任意数据类型做比较：</p><pre><code>false == 0; // truefalse === 0; // false</code></pre><p>要特别注意相等运算符<code>==</code>。JavaScript在设计时，有两种比较运算符：</p><ul><li><p>第一种是<code>==</code>比较，它会自动转换数据类型再比较，很多时候，会得到非常诡异的结果；</p></li><li><p>第二种是<code>===</code>比较，它不会自动转换数据类型，如果数据类型不一致，返回<code>false</code>，如果一致，再比较。</p></li></ul><p>由于JavaScript这个设计缺陷，不要使用<code>==</code>比较，始终坚持使用<code>===</code>比较。</p><p>另一个例外是<code>NaN</code>这个特殊的Number与所有其他值都不相等，包括它自己：</p><p><code>NaN === NaN; // false</code></p><p>唯一能判断<code>NaN</code>的方法是通过<code>isNaN()</code>函数：</p><p><code>isNaN(NaN); // true</code></p><p>最后要注意浮点数的相等比较：</p><p><code>1 / 3 === (1 - 2 / 3); // false</code></p><p>这不是JavaScript的设计缺陷。浮点数在运算过程中会产生误差，因为计算机无法精确表示无限循环小数。要比较两个浮点数是否相等，只能计算它们之差的绝对值，看是否小于某个阈值：</p><p><code>Math.abs(1 / 3 - (1 - 2 / 3)) &lt; 0.0000001; // true</code></p><ol start="5"><li><strong>null和undefined</strong></li></ol><p><code>null</code>表示一个“空”的值，它和0以及空字符串<code>&#39;&#39;</code>不同，<code>0</code>是一个数值，<code>&#39;&#39;</code>表示长度为0的字符串，而<code>null</code>表示“空”。</p><p>在JavaScript中，还有一个和null类似的undefined，它表示“未定义”。</p><blockquote><p>JavaScript的设计者希望用null表示一个空的值，而undefined表示值未定义。事实证明，区分两者的意义不大。大多数情况下，我们都应该用null。undefined仅仅在判断函数参数是否传递的情况下有用。</p></blockquote><ol start="6"><li><strong>数组</strong></li></ol><ul><li>数组用<code>[]</code>表示</li></ul><p>数组是一组按顺序排列的集合，集合的每个值称为元素。JavaScript的数组可以包括==任意数据==类型。例如：</p><pre><code>[1, 2, 3.14, &#39;Hello&#39;, null, true];</code></pre><p>上述数组包含6个元素。数组用<code>[]</code>表示，元素之间用<code>,</code>分隔。</p><ul><li>通过<code>Array()</code>函数实现</li></ul><p>另一种创建数组的方法是通过Array()函数实现：</p><p><code>new Array(1, 2, 3); // 创建了数组[1, 2, 3]</code></p><p>然而，出于代码的可读性考虑，强烈建议直接使用<code>[]</code>。</p><p>数组的元素可以通过索引来访问。请注意，索引的起始值为0：</p><pre><code>var arr = [1, 2, 3.14, &#39;Hello&#39;, null, true];arr[0]; // 返回索引为0的元素，即1arr[5]; // 返回索引为5的元素，即truearr[6]; // 索引超出了范围，返回undefined</code></pre><ol start="7"><li><strong>对象</strong></li></ol><p>JavaScript的对象是一组由键-值组成的无序集合，例如：</p><pre><code>var person = &#123;    name: &#39;Bob&#39;,    age: 20,    tags: [&#39;js&#39;, &#39;web&#39;, &#39;mobile&#39;],    city: &#39;Beijing&#39;,    hasCar: true,    zipcode: null&#125;;</code></pre><p>JavaScript==对象的键都是字符串类型，值可以是任意数据类型==。上述person对象一共定义了6个键值对，其中每个键又称为对象的属性，例如，person的name属性为’Bob’，zipcode属性为null。</p><p>要获取一个对象的属性，我们用对象变量.属性名的方式：</p><pre><code>person.name; // &#39;Bob&#39;person.zipcode; // null</code></pre><ol start="8"><li><strong>变量</strong></li></ol><p>变量在JavaScript中就是用一个变量名表示，变量名是大小写英文、数字、$和_的组合，且==不能用数字==开头。变量名也不能是JavaScript的关键字，如<code>if</code>、<code>while</code>等。申明一个变量用<code>var</code>语句，比如：</p><pre><code>var a; // 申明了变量a，此时a的值为undefinedvar $b = 1; // 申明了变量$b，同时给$b赋值，此时$b的值为1var s_007 = &#39;007&#39;; // s_007是一个字符串var Answer = true; // Answer是一个布尔值truevar t = null; // t的值是null</code></pre><p>在JavaScript中，使用等号<code>=</code>对变量进行赋值。可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量，但是要注意只能用<code>var</code>申明一次，例如：</p><pre><code>var a = 123; // a的值是整数123a = &#39;ABC&#39;; // a变为字符串</code></pre><p>这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。例如Java是静态语言，赋值语句如下：</p><pre><code>int a = 123; // a是整数类型变量，类型用int申明a = &quot;ABC&quot;; // 错误：不能把字符串赋给整型变量</code></pre><p>和静态语言相比，动态语言更灵活，就是这个原因。</p><blockquote><p>要显示变量的内容，可以用<code>console.log(x)</code>，打开Chrome的控制台就可以看到结果。使用<code>console.log()</code>代替<code>alert()</code>的好处是可以避免弹出烦人的对话框。</p></blockquote><ol start="9"><li><strong>strict模式</strong></li></ol><p>JavaScript在设计之初，为了方便初学者学习，并不强制要求用<code>var</code>申明变量。这个设计错误带来了严重的后果：如果一个变量没有通过<code>var</code>申明就被使用，那么该变量就自动被申明为全局变量：</p><pre><code>i = 10; // i现在是全局变量</code></pre><p>在同一个页面的不同的JavaScript文件中，如果都不用<code>var</code>申明，恰好都使用了变量<code>i</code>，将造成变量i互相影响，产生难以调试的错误结果。</p><p>使用<code>var</code>申明的变量则不是全局变量，它的范围被限制在该变量被申明的函数体内（函数的概念将稍后讲解），同名变量在不同的函数体内互不冲突。</p><p>为了修补JavaScript这一严重设计缺陷，ECMA在后续规范中推出了strict模式，在strict模式下运行的JavaScript代码，强制通过var申明变量，未使用var申明变量就使用的，将导致运行错误。</p><p>启用strict模式的方法是在JavaScript代码的第一行写上：</p><p><code>&#39;use strict&#39;;</code></p><p>这是一个字符串，不支持strict模式的浏览器会把它当做一个字符串语句执行，支持strict模式的浏览器将开启strict模式运行JavaScript。</p><h2 id="实用要点"><a href="#实用要点" class="headerlink" title="实用要点"></a>实用要点</h2><h3 id="1-平滑回到顶部按钮"><a href="#1-平滑回到顶部按钮" class="headerlink" title="1.平滑回到顶部按钮"></a>1.平滑回到顶部按钮</h3><p>html中加入：</p><pre><code class="line-numbers language-HTML">&lt;head&gt;    &lt;style&gt;html&#123;scroll-behavior: smooth;&#125;&lt;/style&gt;    &lt;!--平滑滚动实现样式--&gt;      &lt;script&gt;document.getElementById(&quot;logogotop&quot;).scrollIntoView();&lt;/script&gt;    &lt;!--平滑滚动实现脚本--&gt;&lt;/head&gt;</code></pre><p>在需要设置回到顶部的地方加入<code>id=“logogotop”</code>，例如：</p><pre><code class="line-numbers language-HTML">&lt;div id=&quot;logogotop&quot; class=&quot;logo&quot;&gt;&lt;/div&gt;</code></pre><h3 id="2-搜索框实用脚本"><a href="#2-搜索框实用脚本" class="headerlink" title="2.搜索框实用脚本"></a>2.搜索框实用脚本</h3><p>1.光标自动定位到txt（输入栏id=”txt”）中</p><pre><code class="line-numbers language-html">&lt;input type=&quot;text&quot; id=&quot;txt&quot; class=&quot;search-input&quot; autocomplete=&quot;off&quot; placeholder=&quot;搜索&quot;&gt;</code></pre><pre><code class="line-numbers language-JS">&lt;!--光标定位--&gt;&lt;script&gt;document.getElementById(&quot;txt&quot;).focus();&lt;/script&gt;</code></pre><p>2.回车/点击搜索按钮后，清空搜索框内容/全选文本：</p><pre><code class="line-numbers language-HTML">&lt;input type=&quot;text&quot; id=&quot;txt&quot; class=&quot;search-input&quot; autocomplete=&quot;off&quot; placeholder=&quot;搜索&quot;&gt;&lt;button class=&quot;search-btn&quot; id=&quot;search-btn&quot;&gt;&lt;i class=&quot;fas fa-search&quot;&gt;&lt;/i&gt;&lt;/button&gt;</code></pre><pre><code class="line-numbers language-JS">&lt;!--点击search-btn，清空文本内容--&gt;&lt;script&gt;    document.getElementById(&quot;search-btn&quot;).onclick=function()&#123;    document.getElementById(&#39;txt&#39;).value = &quot;&quot;;&#125;&lt;/script&gt;&lt;!--点击search-btn后，全选文本内容--&gt;&lt;script&gt;    document.getElementById(&quot;search-btn&quot;).onclick=function()&#123;    txt.select();&#125;&lt;/script&gt;&lt;!--回车后，清空文本内容--&gt;&lt;script&gt;    $(function()&#123;      $(document).keypress(function (e)&#123;      if(e.keyCode == 13)&#123;          //e只是一个自己定义的名称可随意更改          //keyCode代表不同的按键，更多按键对照值可参考附录          document.getElementById(&#39;txt&#39;).value = &quot;&quot;;          //将id=&quot;txt&quot;所在的input处的值变为空      &#125; 　　&#125;)         &#125;)&lt;/script&gt;&lt;!--回车后，全选文本内容--&gt;&lt;script&gt;    $(function()&#123;      $(document).keypress(function (e)&#123;      if(e.keyCode == 13)&#123;          txt.select();//将id=&quot;txt&quot;所在的输入框内容选中      &#125; 　　&#125;)         &#125;)&lt;/script&gt;</code></pre><h3 id="3-打开网页自动跳转到指定页面"><a href="#3-打开网页自动跳转到指定页面" class="headerlink" title="3.打开网页自动跳转到指定页面"></a>3.打开网页自动跳转到指定页面</h3><p>脚本<code>&lt;script&gt;window.location.href = &quot;跳转页面链接&quot;;&lt;/script&gt;</code>加入即可</p><p>示例：</p><pre><code class="line-numbers language-html">&lt;!doctype html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;自动跳转&lt;/title&gt;          &lt;script&gt;window.location.href = &quot;https://xmq.plus/nav&quot;;&lt;/script&gt;&lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;/html&gt;</code></pre><h3 id="4-IF选择语句"><a href="#4-IF选择语句" class="headerlink" title="4.IF选择语句"></a>4.IF选择语句</h3><p><code>&lt;% if (条件) &#123; %&gt;条件成立执行的内容&lt;% &#125; else &#123; %&gt;条件不成立执行的内容&lt;% &#125; %&gt;</code></p><p>示例：</p><pre><code class="line-numbers language-js">&lt;% if (page.title !== &#39;导航&#39;) &#123; %&gt;内容&lt;% &#125; %&gt;</code></pre><h2 id="附录：Keycode对照表（键码对照表）"><a href="#附录：Keycode对照表（键码对照表）" class="headerlink" title="附录：Keycode对照表（键码对照表）"></a>附录：Keycode对照表（键码对照表）</h2><h4 id="字母和数字键的键码值-keyCode"><a href="#字母和数字键的键码值-keyCode" class="headerlink" title="字母和数字键的键码值(keyCode)"></a>字母和数字键的键码值(keyCode)</h4><table><thead><tr><th>按键</th><th>键码</th><th>按键</th><th>键码</th><th>按键</th><th>键码</th><th>按键</th><th>键码</th></tr></thead><tbody><tr><td>A</td><td>65</td><td>J</td><td>74</td><td>S</td><td>83</td><td>1</td><td>49</td></tr><tr><td>B</td><td>66</td><td>K</td><td>75</td><td>T</td><td>84</td><td>2</td><td>50</td></tr><tr><td>C</td><td>67</td><td>L</td><td>76</td><td>U</td><td>85</td><td>3</td><td>51</td></tr><tr><td>D</td><td>68</td><td>M</td><td>77</td><td>V</td><td>86</td><td>4</td><td>52</td></tr><tr><td>E</td><td>69</td><td>N</td><td>78</td><td>W</td><td>87</td><td>5</td><td>53</td></tr><tr><td>F</td><td>70</td><td>O</td><td>79</td><td>X</td><td>88</td><td>6</td><td>54</td></tr><tr><td>G</td><td>71</td><td>P</td><td>80</td><td>Y</td><td>89</td><td>7</td><td>55</td></tr><tr><td>H</td><td>72</td><td>Q</td><td>81</td><td>Z</td><td>90</td><td>8</td><td>56</td></tr><tr><td>I</td><td>73</td><td>R</td><td>82</td><td>0</td><td>48</td><td>9</td><td>57</td></tr></tbody></table><h4 id="数字键盘上的键的键码值-keyCode"><a href="#数字键盘上的键的键码值-keyCode" class="headerlink" title="数字键盘上的键的键码值(keyCode)"></a>数字键盘上的键的键码值(keyCode)</h4><table><thead><tr><th>按键</th><th>键码</th><th>按键</th><th>键码</th></tr></thead><tbody><tr><td>0</td><td>96</td><td>8</td><td>104</td></tr><tr><td>1</td><td>97</td><td>9</td><td>105</td></tr><tr><td>2</td><td>98</td><td>*</td><td>106</td></tr><tr><td>3</td><td>99</td><td>+</td><td>107</td></tr><tr><td>4</td><td>100</td><td>Enter</td><td>108</td></tr><tr><td>5</td><td>101</td><td>-</td><td>109</td></tr><tr><td>6</td><td>102</td><td>.</td><td>110</td></tr><tr><td>7</td><td>103</td><td>/</td><td>111</td></tr></tbody></table><h4 id="功能键键码值-keyCode"><a href="#功能键键码值-keyCode" class="headerlink" title="功能键键码值(keyCode)"></a>功能键键码值(keyCode)</h4><table><thead><tr><th>按键</th><th>键码</th><th>按键</th><th>键码</th></tr></thead><tbody><tr><td>F1</td><td>112</td><td>F7</td><td>118</td></tr><tr><td>F2</td><td>113</td><td>F8</td><td>119</td></tr><tr><td>F3</td><td>114</td><td>F9</td><td>120</td></tr><tr><td>F4</td><td>115</td><td>F10</td><td>121</td></tr><tr><td>F5</td><td>116</td><td>F11</td><td>122</td></tr><tr><td>F6</td><td>117</td><td>F12</td><td>123</td></tr></tbody></table><h4 id="控制键键码值-keyCode"><a href="#控制键键码值-keyCode" class="headerlink" title="控制键键码值(keyCode)"></a>控制键键码值(keyCode)</h4><table><thead><tr><th>按键</th><th>键码</th><th>按键</th><th>键码</th><th>按键</th><th>键码</th><th>按键</th><th>键码</th></tr></thead><tbody><tr><td>BackSpace</td><td>8</td><td>Esc</td><td>27</td><td>Right Arrow</td><td>39</td><td>-_</td><td>189</td></tr><tr><td>Tab</td><td>9</td><td>Spacebar</td><td>32</td><td>Dw Arrow</td><td>40</td><td>.&gt;</td><td>190</td></tr><tr><td>Clear</td><td>12</td><td>Page Up</td><td>33</td><td>Insert</td><td>45</td><td>/?</td><td>191</td></tr><tr><td>Enter</td><td>13</td><td>Page Down</td><td>34</td><td>Delete</td><td>46</td><td>`~</td><td>192</td></tr><tr><td>Shift</td><td>16</td><td>End</td><td>35</td><td>Num Lock</td><td>144</td><td>[{</td><td>219</td></tr><tr><td>Control</td><td>17</td><td>Home</td><td>36</td><td>;:</td><td>186</td><td>|</td><td>220</td></tr><tr><td>Alt</td><td>18</td><td>Left Arrow</td><td>37</td><td>=+</td><td>187</td><td>]}</td><td>221</td></tr><tr><td>Cape Lock</td><td>20</td><td>Up Arrow</td><td>38</td><td>,&lt;</td><td>188</td><td>‘“</td><td>222</td></tr></tbody></table><h4 id="多媒体键码值-keyCode"><a href="#多媒体键码值-keyCode" class="headerlink" title="多媒体键码值(keyCode)"></a>多媒体键码值(keyCode)</h4><table><thead><tr><th>按键</th><th>键码</th></tr></thead><tbody><tr><td>音量加</td><td>175</td></tr><tr><td>音量减</td><td>174</td></tr><tr><td>停止</td><td>179</td></tr><tr><td>静音</td><td>173</td></tr><tr><td>浏览器</td><td>172</td></tr><tr><td>邮件</td><td>180</td></tr><tr><td>搜索</td><td>170</td></tr><tr><td>收藏</td><td>171</td></tr></tbody></table><h2 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h2><ul><li><a href="https://www.w3school.com.cn/jquery/index.asp">jQuery教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Obsidian笔记实现Windows与Android端同步</title>
      <link href="posts/318b.html"/>
      <url>posts/318b.html</url>
      
        <content type="html"><![CDATA[<p>之前写作工具：Typora+Notion，后面将写作工具全部转移至obsidian。</p><p>想借助转移到obsidian的这一个事情，记录实现同一笔记修改后能够分发到各个平台设备、网盘、服务器的详细过程。</p><h2 id="转移原因"><a href="#转移原因" class="headerlink" title="转移原因"></a>转移原因</h2><h3 id="主要原因"><a href="#主要原因" class="headerlink" title="主要原因"></a>主要原因</h3><ol><li>同步问题</li></ol><p>Typora不支持全平台无缝写作。Typora写笔记，软件不支持多平台，本身typora不能同步，无法在多平台无缝写作。</p><ol start="2"><li>笔记副本过多，繁琐且不便于同步修改</li></ol><p>同一笔记多个副本。使用Typora写笔记既要复制到个人网站博客上传同步，又要导入到Notion，保证Notion笔记同步，同一笔记多次复制，只要有一个修改，其他地方的同一个笔记都得改，很麻烦。</p><ol start="3"><li>兼容性转移性差</li></ol><p>Notion导入导出不友好，不适合笔记转移。用Notion写笔记导出md文件至本地，往往需要调整，md笔记导入Notion一样需要调整，兼容性差。</p><ol start="4"><li>Notion笔记存储不在本地</li></ol><p>打开notion笔记需要加载加载时间，笔记不存储在本地，笔记安全风险大。</p><p>总之，对于需要将一份笔记写完能在本地进行管理，能在各个设备间同步，又要实时上传至博客网站的我来说，相当于能够实现一次写作多次分发至各个设备以及服务器。经过一款筛选，最后选择了以markdown为原材料进行管理的一款笔记软件，obsidian。</p><p>下面记录我如何用obsidian笔记软件写作实现多端同步并且及时上传服务器的过程。</p><h3 id="Obisidian优点"><a href="#Obisidian优点" class="headerlink" title="Obisidian优点"></a>Obisidian优点</h3><ol><li>保留原素材进行管理</li></ol><p>这个软件最大的优点在于，只是对markdown文件，markdown文件夹进行管理的一个写作笔记软件，并没有改变markdown文件。</p><p>2.笔记移动性强</p><p>笔记只对md笔记源文件进行管理，所以源文件可以独立的转移，不受软件、平台限制。</p><ol start="3"><li>所见即所得</li></ol><p>使用Typora的一个重要原因就是markdown语法支持即可渲染，所见即所得这一功能同样可以在obsidian中使用。</p><ol start="4"><li>插件丰富</li></ol><p>拥有丰富的社区插件和官方插件，功能扩展性非常强。其中，图片自动上传插件的插入可以完全做到替换Typora。</p><ol start="5"><li>支持全平台同步</li></ol><p>Obisidian是一个全平台同步的md文件管理器。</p><p>将上传至博客网站的博客路径文件夹博客作为Obisidian的仓库，然后同样将这个文件夹通过云盘设置为同步盘，即可通过obsidian进行写作，保证自己在Obsidian上写作能同时把笔记分发上传同步至服务器，网盘，同步以及自己的各个终端设备中。</p><p>Obsidian上写作能够实现博客、终端、客户端同步，就是完美解决方案。</p><h2 id="多端同步"><a href="#多端同步" class="headerlink" title="多端同步"></a>多端同步</h2><p>Obsidian在各个平台之间自行搭建同步方案，主要原理是通过同步网盘对所在的笔记文件夹进行同步，主要同步方案：<br>Windows端同步：OneDrive、坚果云等；<br>mac端、iPad端、iPhone端同步：iCloud；<br>Android端同步：[坚果云(webdev)、OneDrive]+[Dropsync、Foldersync]；</p><p>实现安卓端与客户端之间的同步需要另外使用同步连接软件(Dropsync、Foldersync)，保证文件能够存储到本地，上传时能够将本地修改文件上传至网盘。从而实现同步。</p><p><a href="https://help.obsidian.md/Getting+started/Sync+your+notes+across+devices">多端同步.帮助文档</a></p><h2 id="我的同步方案"><a href="#我的同步方案" class="headerlink" title="我的同步方案"></a>我的同步方案</h2><h3 id="Foldersync-OneDrive同步Obsidian笔记"><a href="#Foldersync-OneDrive同步Obsidian笔记" class="headerlink" title="Foldersync+OneDrive同步Obsidian笔记"></a>Foldersync+OneDrive同步Obsidian笔记</h3><p>主要实现实现windows多端同步、windows端与android端同步。</p><p>windows与android端同步操作流程：</p><ul><li>Windows端</li></ul><p>Windows端将Obsidian的库定位到自己的博客文件夹_post<br><img src="https://images.xmq.plus/202203301323496.jpg" alt="定位"><br>obsidian基本操作，可以在软件中对笔记文件夹下markdown进行任意管理。</p><p>Obsidian会在_post文件夹下增设配置文件.obsidian文件夹，经过测试，不影响hexo博客对博客文章的渲染</p><p>OneDrive增加同步文件夹_post，如果选定的笔记文件夹不在Onedrive路径下，又不想移动到Onedrive路径下，无法同步。可以按照下文中【Onedrive同步任意文件夹】的操作流程，使用mkline命令实现Onedrive对任意文件夹进行同步。</p><ul><li>Andriod端</li></ul><p>在Android端在谷歌商店进行下载同步工具Foldersync，这里涉及科学上网。或者通过其他方式获取安装包。</p><p>安装完成后，打开软件要求的所有许可权限(permission)</p><p>打开软件<br>在Foderpairs中选择存放笔记的本地文件夹命名为Obsidian_blog（存放位置，网盘中的笔记文件下载同步到此文件夹）</p><p>Accounts中按提示添加OneDrive账号，获取密钥填入即可（或者使用坚果云webdev登录）。</p><p>选择添加文件（+Folderpair），选择Two-way：</p><p>远程仓库（Remote folder）：Windows同步的笔记文件夹，也就是_post</p><p>本地文件夹（Local folder）：Android同步的文件夹，也就是Obsidian_blog</p><p><img src="https://images.xmq.plus/202203301334108.jpg" alt="路径填写"></p><p>设置完成后，进入Onedrive Sync同步中选择Sync进行同步。</p><p>此过程因使用OneDrive进行同步文件，Android端同步时需要打开科学上网。</p><p>显示successful，绿色表示同步成功。<br>即可在Android端打开obsidian进行查看。</p><p>foldersync同步设置<br>笔记中除了md纯文本外，不建议同步其他配置性文件（.obsidian）。<br>应该关闭foldersync中同步隐藏文件选项（sunc hidden files）；<br>为了保证文件删除同步，勾选同步删除选项（sync deletions）</p><p><img src="https://images.xmq.plus/202204041440338.jpg" alt="同步选项"></p><h3 id="Android端同步注意事项"><a href="#Android端同步注意事项" class="headerlink" title="Android端同步注意事项"></a>Android端同步注意事项</h3><ol><li><p>定期备份<br>防止同步过程中更新文件可能出现问题，应该对文件定时备份。不管是不是用同步方案，都应该定期对文件进行备份。</p></li><li><p>Android端使用前后都需要同步<br>Foldersync并不能实时自动同步文件至本地文件夹，因此每次在Android端使用前同步一次，修改文件后手动同步至onedrive一次。</p></li><li><p>修改文件前确认文件同步及时<br>桌面端Onedrive同步可能不及时，所有文件做出的变动，都应该在onedrive文件更新记录中能一一对应，才能使用foldersync进行同步。<br>只有保证在修改前各平台文件更新已经同步完成，才能开始对文件进行改动。</p></li></ol><p>如果发现Onedrive同步不及时，可以选择暂停同步再开启，刷新一下，即可解决同步不及时的问题。</p><p>在Android端修改文件前确认同步没有问题才能进行修改，修改完成后，切记同步文件至onedrive，才能下次在Windows端进行修改编辑，否则容易信息更新不及时。</p><p><strong>总而言之，Windows端更新文件后，确认文件更新记录一一对应；Android端修改文件前同步文件，修改文件后同步文件。</strong></p><h3 id="Onedrive同步任意文件夹"><a href="#Onedrive同步任意文件夹" class="headerlink" title="Onedrive同步任意文件夹"></a>Onedrive同步任意文件夹</h3><p>一般OneDrive只能同步定义的Onedrive文件夹下的所有文件</p><p>如果笔记文件直接存放在OneDrive路径下则直接跳过此步骤。</p><p>另外OneDrive还能同步特定的三个文件夹，可在设置中管理备份中看到，即桌面、文档、图片</p><p>那么如何实现Onedrive同步任意文件夹？<br>使用mkline将文件夹关联到Onedrive同步网盘路径下。<br>实现原理：在OneDrive目录路径下，使用mkline命令，关联你需要同步的文件夹。保证你的选择文件夹与OneDrive下的文件实时同步。</p><p>操作流程<br>参考地址：<a href="https://jingyan.baidu.com/article/4665065836e951f549e5f822.html">https://jingyan.baidu.com/article/4665065836e951f549e5f822.html</a></p><ul><li>在OneDrive文件夹下记录文档路径，得到地址一：<br>地址一<br>C:\Users\Sumsung\OneDrive\文档</li></ul><p>我的用户名为Sumsung</p><ul><li>在需要进行同步的文件夹下记录路径，得到地址二：<br>地址二<br>C:\Users\Sumsung\matery\source_posts</li></ul><p>我要对_posts进行同步，路径如上</p><ul><li>Windows+s搜索命令提示符，以<strong>管理员身份运行</strong>：</li></ul><p><img src="https://images.xmq.plus/202203301258742.jpg" alt="命令提示符"></p><ul><li>运行命令，命令格式为：<pre><code class="line-numbers language-cmd">mklink/d  地址一_post  地址二</code></pre></li></ul><p>管理员身份运行，否则会报错；<br>所有空格都是两个空格！</p><p>所以我的命令如下 ：</p><pre><code class="line-numbers language-cmd">mklink/d  C:\Users\Sumsung\OneDrive\文档_post  C:\Users\Sumsung\matery\source\_posts</code></pre><p>如果出现以下命令报告，则表示执行成功：</p><p><img src="https://images.xmq.plus/202203301259774.jpg" alt="运行成功"></p><p>可以回到OneDrive下，有个文档_post文件夹已经完成了同步。<br>只要_post文件内文件发生变动（文件增添、修改、删除），在OneDrive下文档_post会同样发生变动，文件同步成功。</p><p>软件下载：<br><a href="https://obsidian.md/">Obsidian</a>、<a href="https://play.google.com/store/apps/details?id=dk.tacit.android.foldersync.lite">Foldersync</a></p><h3 id="缺点与不足"><a href="#缺点与不足" class="headerlink" title="缺点与不足"></a>缺点与不足</h3><ol><li>OneDrive不支持手动同步</li></ol><p>OneDrive同步不及时，看不到OneDrive中同步的更新信息时，需要手动暂停再打开同步功能来促使更新同步。这似乎是一个常见问题，也并不受影响，只要知道怎么操作，基本可以接受。</p><ol start="2"><li>OneDrive同步需科学上网</li></ol><p>没有长期科学上网条件的用户不适合使用OneDrive进行同步更新。</p><ol start="3"><li>Android端无法连接图床</li></ol><p>这也是一个常见问题，因为插件只能连接桌面端picgo，无法实现手机端图片自动上传至图床，从而生成图片链接。</p><h2 id="我的备份方案"><a href="#我的备份方案" class="headerlink" title="我的备份方案"></a>我的备份方案</h2><p>实现笔记能够一次写作修改，能够多端同步，服务器更新以后，应该对文件定期进行备份。</p><ul><li>备份至github</li></ul><p>将笔记文件做备份管理，使用git上传到自己的github上，随时推送做备份。如果文件出现误删，可以通过GitHub文件历史版本找回</p><p>具体操作见:</p><p>[[Git学习笔记#添加远程仓库]]</p><h2 id="命令脚本快速备份笔记及上传博客"><a href="#命令脚本快速备份笔记及上传博客" class="headerlink" title="命令脚本快速备份笔记及上传博客"></a>命令脚本快速备份笔记及上传博客</h2><p>每次做完笔记都需要上传个人网站，备份至github，命令相对较长，通过写一个脚本的方式对命令简化。</p><p>使用shell脚本新建命令简化上传过程</p><p>新建命令<code>gitbackup</code>上传笔记至github，新建命令<code>uploadblog</code>更新笔记至个人网站。</p><p>每次笔记写完之后只需</p><pre><code class="line-numbers language-BASH">uploadblog &amp;&amp; gitbackup</code></pre><p>即可实现快速上传更新及备份</p><p>命令简化过程具体设置教程见:</p><p>[[使用Shell脚本自定义命令#上传Github做笔记备份]]</p><p>到最后</p><p>会发现，每次写完笔记</p><p>Android端:同步！写完，同步一下！</p><p>windows端:写完，<code>uploadblog &amp;&amp; gitbackup</code>，确认同步！</p><p>完美做到同步更新备份！</p>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Obsidian </tag>
            
            <tag> 笔记软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>沉浸式写作Zen网页嵌入博客记录</title>
      <link href="posts/ccf6.html"/>
      <url>posts/ccf6.html</url>
      
        <content type="html"><![CDATA[<p>网上看到一个很简单纯粹的写作页面，觉得很不错，想摘下来做成一个单独的源码包，既可以上传到仓库做成一个项目，供其他人搭建一个单独的写作页面，也用来给自己嵌入到博客网站。</p><p>网页地址：<a href="https://zen.unit.ms/">Zen</a></p><h2 id="网页下载及修改"><a href="#网页下载及修改" class="headerlink" title="网页下载及修改"></a>网页下载及修改</h2><p>进入页面<a href="https://zen.unit.ms,查看源码(ctrl+u)把代码给全部下载至本地,zen.html./">https://zen.unit.ms，查看源码(ctrl+U)把代码给全部下载至本地，Zen.html。</a></p><p>VS code打开Zen.html，删除谷歌统计的无用脚本，将其他Css、Js、音频文件、图片Logo等网页路径资源全部下载到本地，并按代码中的路径存放，保证代码中的路径与文件一致。</p><p>里面的音频文件在html页面找不到，记录在js/bundle.js里面，而这个文件被压缩了，不便于查找；</p><p>我使用手机浏览器Via进入页面使用资源嗅探，找到三个音频文件路径：</p><pre><code>https://zen.unit.ms/sfx/manual_key.ogghttps://zen.unit.ms/sfx/manual_return.ogghttps://zen.unit.ms/sfx/manual_space.ogg</code></pre><p>同样，把这三个文件下载下来，并保存在根目录下的sfx文件下即可正常听到打字的声音。</p><p>文件目录结构如下：</p><p><img src="https://images.xmq.plus/202203290934494.png" alt="目录结构"></p><p>修改代码如下：</p><pre><code class="line-numbers language-HTML">&lt;!DOCTYPE html&gt;&lt;html&gt;    &lt;head&gt;        &lt;!-- MISC/META --&gt;        &lt;title&gt;Zen - Online Text Editor&lt;/title&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;        &lt;meta name=&quot;description&quot; content=&quot;Zen by Unit is a free, minimal, fast, private writing app. Just open and use.&quot;&gt;        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, minimum-scale=1.0, maximum-scale=1.0, initial-scale=1.0&quot; /&gt;        &lt;!-- CSS --&gt;        &lt;link href=&quot;css/zencss.css&quot; rel=&quot;stylesheet&quot;&gt;        &lt;link href=&quot;css/style.css&quot; rel=&quot;stylesheet&quot; media=&quot;all&quot;&gt;        &lt;!-- Icon --&gt;        &lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;180x180&quot; href=&quot;apple-touch-icon.png&quot;&gt;        &lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; sizes=&quot;32x32&quot; href=&quot;favicon-32x32.png&quot;&gt;        &lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; sizes=&quot;16x16&quot; href=&quot;favicon-16x16.png&quot;&gt;        &lt;link rel=&quot;manifest&quot; href=&quot;site.webmanifest&quot;&gt;        &lt;link rel=&quot;mask-icon&quot; href=&quot;safari-pinned-tab.svg&quot; color=&quot;#5bbad5&quot;&gt;        &lt;meta name=&quot;msapplication-TileColor&quot; content=&quot;#da532c&quot;&gt;        &lt;meta name=&quot;theme-color&quot; content=&quot;#ffffff&quot;&gt;  &lt;/head&gt;    &lt;body class=&quot;scheme-light&quot; style=&quot;display: none&quot;&gt;        &lt;div class=&quot;overlay&quot;&gt;            &lt;div class=&quot;description modal&quot;&gt;                &lt;h1&gt;About Zen&lt;/h1&gt;                &lt;p&gt;                    Zen is clean and simple web text editor modified by &lt;a href=&quot;http://xmq.plus/&quot; target=&quot;_blank&quot;&gt;肆零肆&lt;/a&gt; Individual.                    &lt;br /&gt;It&#39;s 100% private and stores all the data only locally in your browser.                    &lt;br /&gt;&lt;br /&gt;                    &lt;a href=&quot;https://xmq.plus&quot; target=&quot;_blank&quot;&gt;Blog&lt;/a&gt;                     | &lt;a href=&quot;https://github.com/Sumsung524&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt;                     | &lt;a href=&quot;mailto:me@xmq.plus&quot;&gt;Email&lt;/a&gt;                    &lt;br /&gt;&lt;br /&gt;                    Support Zen:                    &lt;br /&gt;&lt;a href=&quot;https://forms.gle/bFebcfkb7D4qwcY9A&quot; target=&quot;_blank&quot;&gt;Help improve Zen&lt;/a&gt;                    &lt;br /&gt;&lt;a href=&quot;https://www.producthunt.com/posts/zen-by-unit&quot; target=&quot;_blank&quot;&gt;Vote on Product Hunt&lt;/a&gt;                    &lt;br /&gt;&lt;br /&gt;                    说明:                    &lt;br /&gt;本页面经过修改，嵌入博客网站，方便个人，随时记录                    &lt;br /&gt;沉浸式纯文本写作，支持Markdown预览                    &lt;br /&gt;写下的内容，会在下一次打开时与你邂逅                    &lt;br /&gt;具体操作查看快捷键                    &lt;br /&gt;写作全英文界面，说明有疑问自行翻译                    &lt;br /&gt;页面没有问题，可能只是你不会用                    &lt;br /&gt;东西很简单，希望你能喜欢                    &lt;br /&gt;如果你也想拥有一个属于自己的，Github有源码                    &lt;br /&gt;Nothing to type...over                    &lt;!-- &lt;br /&gt;&lt;a href=&quot;https://fonts.google.com/&quot; target=&quot;_blank&quot;&gt;Google Fonts&lt;/a&gt; --&gt;                    &lt;!-- &lt;br /&gt;&lt;a href=&quot;https://fontawesome.com/&quot; target=&quot;_blank&quot;&gt;Font Awesome icons&lt;/a&gt; --&gt;                    &lt;!-- &lt;br /&gt;&lt;a href=&quot;https://freesound.org/people/juskiddink/sounds/75105/&quot; target=&quot;_blank&quot;&gt;Manual typewriter sounds&lt;/a&gt; --&gt;                    &lt;!-- &lt;br /&gt;&lt;a href=&quot;http://www.showdownjs.com/&quot; target=&quot;_blank&quot;&gt;ShowdownJS&lt;/a&gt; --&gt;                    &lt;!-- &lt;br /&gt;&lt;a href=&quot;https://github.com/tholman&quot; target=&quot;_blank&quot;&gt;Tim Holman&lt;/a&gt; for &lt;a href=&quot;https://github.com/tholman/zenpen&quot; target=&quot;_blank&quot;&gt;Zenpen&lt;/a&gt; --&gt;                    &lt;!-- &lt;br /&gt;&lt;br /&gt;Copyright © &lt;script&gt;document.write(new Date().getFullYear())&lt;/script&gt; Unit --&gt;                &lt;/p&gt;            &lt;/div&gt;            &lt;div class=&quot;help-modal modal&quot;&gt;                &lt;h1&gt;Help&lt;/h1&gt;                &lt;p&gt;                        &lt;h2&gt;Features&lt;/h2&gt;                        &lt;table class=&quot;shortcuts-table&quot;&gt;                            &lt;tr&gt;&lt;td&gt;Fullscreen&lt;/td&gt;&lt;td&gt;&lt;code&gt;Ctrl/Cmd + Shift + F&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;                            &lt;tr&gt;&lt;td&gt;Change font&lt;/td&gt;&lt;td&gt;&lt;code&gt;Ctrl/Cmd + Shift + A&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;                            &lt;tr&gt;&lt;td&gt;Change theme&lt;/td&gt;&lt;td&gt;&lt;code&gt;Ctrl/Cmd + Shift + E&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;                            &lt;tr&gt;&lt;td&gt;Typewriter sounds&lt;/td&gt;&lt;td&gt;&lt;code&gt;Ctrl/Cmd + Shift + Y&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;                            &lt;tr&gt;&lt;td&gt;Markdown mode&lt;/td&gt;&lt;td&gt;&lt;code&gt;Ctrl/Cmd + Shift + M&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;                            &lt;tr&gt;&lt;td&gt;Print&lt;/td&gt;&lt;td&gt;&lt;code&gt;Ctrl/Cmd + Shift + P&lt;/code&gt;&lt;br&gt;&lt;code&gt;Ctrl/Cmd + P&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;                            &lt;tr&gt;&lt;td&gt;Download&lt;/td&gt;&lt;td&gt;&lt;code&gt;Ctrl/Cmd + Shift + S&lt;/code&gt;&lt;br&gt;&lt;code&gt;Ctrl/Cmd + S&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;                        &lt;/table&gt;                        &lt;br /&gt;&lt;h2&gt;Markdown&lt;/h2&gt;                        &lt;table class=&quot;shortcuts-table&quot;&gt;                            &lt;tr&gt;&lt;td&gt;Bold&lt;/td&gt;&lt;td&gt;&lt;code&gt;Ctrl/Cmd + B&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;                            &lt;tr&gt;&lt;td&gt;Italic&lt;/td&gt;&lt;td&gt;&lt;code&gt;Ctrl/Cmd + I&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;                            &lt;tr&gt;&lt;td&gt;Insert link&lt;/td&gt;&lt;td&gt;&lt;code&gt;Ctrl/Cmd + K&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;                            &lt;tr&gt;&lt;td&gt;Code block&lt;/td&gt;&lt;td&gt;&lt;code&gt;Ctrl/Cmd + Shift + C&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;                        &lt;/table&gt;                &lt;/p&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&quot;ui&quot;&gt;            &lt;div class=&quot;wrapper&quot;&gt;                &lt;div class=&quot;top editing icons&quot;&gt;                    &lt;button class=&quot;fullscreen&quot; title=&quot;Toggle fullscreen&quot;&gt;&lt;i class=&quot;fa fa-expand-arrows-alt&quot;&gt;&lt;/i&gt;&lt;/button&gt;                    &lt;button class=&quot;font-flip&quot; title=&quot;Change font&quot;&gt;&lt;i class=&quot;fa fa-font&quot;&gt;&lt;/i&gt;&lt;/button&gt;                    &lt;button class=&quot;color-flip&quot; title=&quot;Change color scheme&quot;&gt;&lt;i class=&quot;fa fa-tint&quot;&gt;&lt;/i&gt;&lt;/button&gt;                    &lt;button class=&quot;sfx-mute&quot; title=&quot;Typewriter sounds&quot;&gt;&lt;i class=&quot;fa fa-volume-off&quot;&gt;&lt;/i&gt;&lt;/button&gt;                    &lt;button class=&quot;markdown&quot; title=&quot;Markdown&quot;&gt;&lt;i class=&quot;fab fa-markdown&quot;&gt;&lt;/i&gt;&lt;/button&gt;                    &lt;button class=&quot;print&quot; title=&quot;Print&quot;&gt;&lt;i class=&quot;fas fa-print&quot;&gt;&lt;/i&gt;&lt;/button&gt;                    &lt;button class=&quot;download&quot; title=&quot;Download text&quot;&gt;&lt;i class=&quot;fa fa-download&quot;&gt;&lt;/i&gt;&lt;/button&gt;                    &lt;!-- &lt;button class=&quot;send&quot; title=&quot;Send to Unit&quot;&gt;&lt;i class=&quot;fa fa-send&quot;&gt;&lt;/i&gt;&lt;/button&gt; --&gt;                &lt;/div&gt;                &lt;div class=&quot;bottom icons&quot;&gt;                    &lt;button class=&quot;Site&quot; title=&quot;Site on 肆零肆&quot; onclick=&quot;window.open(&#39;https://xmq.plus&#39;, &#39;_blank&#39;)&quot;&gt;&lt;i class=&quot;fab fa-product-hunt&quot;&gt;&lt;/i&gt;&lt;/button&gt;                    &lt;button class=&quot;help&quot; title=&quot;Help&quot;&gt;&lt;i class=&quot;fa fa-question&quot;&gt;&lt;/i&gt;&lt;/button&gt;                    &lt;button class=&quot;about&quot; title=&quot;About&quot;&gt;&lt;i class=&quot;fa fa-info&quot;&gt;&lt;/i&gt;&lt;/button&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&quot;statistic-container&quot;&gt;            &lt;div class=&quot;wrapper&quot;&gt;                &lt;div class=&quot;bottom statistic&quot;&gt;&lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;section&gt;            &lt;article                contenteditable=&quot;true&quot;                class=&quot;content&quot;                data-placeholder=&quot;Type your text. When you return it will be still here.&quot;&gt;&lt;/article&gt;            &lt;div class=&quot;markdown-showcase&quot; style=&quot;display: none&quot;&gt;&lt;/div&gt;        &lt;/section&gt;        &lt;!-- JS --&gt;        &lt;script src=&quot;js/fc47806bb4.js&quot;&gt;&lt;/script&gt;        &lt;script src=&quot;js/bundle.js&quot;&gt;&lt;/script&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre><p>只是把一些没用的内容或者信息进行删除或者修改，将路径对应到本地文件；</p><p>VScode F5调试一下，测试和原网页完全一致，表示都齐全了；</p><h2 id="打包上传Github"><a href="#打包上传Github" class="headerlink" title="打包上传Github"></a>打包上传Github</h2><p>使用说明手册<a href="https://docs.github.com/cn">Github_docs</a></p><p>登录Github，创建新仓库Sumsung524/Zen，不设置readme等文件。</p><p>使用Git bash定位到将本地网页文件夹Zen，连接Github中新建仓库并推送：</p><pre><code class="line-numbers language-bash">cd ~/desktop/zen/git initgit remote add origin git@github.com:Sumsung524/zen.gitgit add *git commit -m &quot;first submit&quot;git push -u origin master</code></pre><h2 id="嵌入Hexo博客"><a href="#嵌入Hexo博客" class="headerlink" title="嵌入Hexo博客"></a>嵌入Hexo博客</h2><p>新建页面</p><pre><code class="line-numbers language-bash">hexo new page &quot;zen&quot;    </code></pre><p>根目录下source/zen/index.md文件下编辑：</p><pre><code class="line-numbers language-markdown">---title: zendate: 2022-03-29 13:32:13type: &quot;zen&quot;layout: &quot;zen&quot;---</code></pre><p>主题文件下layout/新建zen.ejs文件，复制Zen.html代码内容到文件中，并在最前方加入，阻止hexo主题渲染：</p><pre><code class="line-numbers language-ejs">---layout: false---</code></pre><p>html已经嵌入了，接下来放入其所需的js、css、音频、logo等文件</p><p>为了保证后期区分zen文件，在原有的js、css、音频文件上修改名称，加入前缀Zen_css</p><p>文件都存放在主题目录下source/css、source/js、source/sfx、source/images/Zen_logo（新建）</p><p>因为文件路径发生变化，在zen.ejs文件中修改移动路径，确保文件与路径一一对应。</p><p>具体路径修改如下：</p><p><strong>CSS</strong></p><p>style.css改zen_style.css，zencss.css改zen_css.css,保证格式统一，防止重复文件名称：</p><pre><code class="line-numbers language-html">        &lt;!-- CSS --&gt;        &lt;link href=&quot;/css/zencss.css&quot; rel=&quot;stylesheet&quot;&gt;        &lt;link href=&quot;/css/zenstyle.css&quot; rel=&quot;stylesheet&quot; media=&quot;all&quot;&gt;</code></pre><p><strong>images/Zen_logo</strong></p><pre><code class="line-numbers language-HTML">        &lt;!-- Icon --&gt;        &lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;180x180&quot; href=&quot;/images/Zen_logo/apple-touch-icon.png&quot;&gt;        &lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; sizes=&quot;32x32&quot; href=&quot;/images/Zen_logo/favicon-32x32.png&quot;&gt;        &lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; sizes=&quot;16x16&quot; href=&quot;/images/Zen_logo/favicon-16x16.png&quot;&gt;        &lt;link rel=&quot;manifest&quot; href=&quot;/images/Zen_logo/site.webmanifest&quot;&gt;        &lt;link rel=&quot;mask-icon&quot; href=&quot;/images/Zen_logo/safari-pinned-tab.svg&quot; color=&quot;#5bbad5&quot;&gt;</code></pre><p><strong>JS</strong></p><p>对应文件同样改名</p><pre><code class="line-numbers language-JS">        &lt;script src=&quot;/js/zen_fc47806bb4.js&quot;&gt;&lt;/script&gt;        &lt;script src=&quot;/js/zen_bundle.js&quot;&gt;&lt;/script&gt;</code></pre><p>js、logo、css都移入了，最后将音频文件的sfx文件夹移入source/文件下，路径没有发生改变，所以不需要改。</p><p>如果为了辨别sfx文件夹是属于zen页面，想命名sfx文件夹为zen_sfx，则需要在zen_bundle.js文件中查找sfx/文件夹关内容，全部替换为/zen_sfx（只需要替换6个，最后一个sfx.mute不替换）</p><p>到这里挂本地服务器测试一下</p><p>hexo s 进入页面如果功能都正常使用，则测试成功。</p><h2 id="选项栏添加Zen按钮"><a href="#选项栏添加Zen按钮" class="headerlink" title="选项栏添加Zen按钮"></a>选项栏添加Zen按钮</h2><p>页面嵌入成功后，需要设置一个进入按钮，决定在首页顶栏、和导航页右上角添加，方便自己随时能够进行记录。</p><h3 id="首页栏添加按钮"><a href="#首页栏添加按钮" class="headerlink" title="首页栏添加按钮"></a>首页栏添加按钮</h3><p>主题目录下_config.yml文件下menu下添加：</p><pre><code class="line-numbers language-yml">  Zen:    url: /zen    icon: fas fa-solid fa-keyboard</code></pre><h2 id="导航页添加按钮"><a href="#导航页添加按钮" class="headerlink" title="导航页添加按钮"></a>导航页添加按钮</h2><p>在右侧栏windows软件下面添加</p><p>nav.ejs添加</p><pre><code class="line-numbers language-EJS">      &lt;!--关于页面--&gt;      &lt;% if (theme.navabout) &#123; %&gt;      &lt;li class=&quot;submit-tag&quot;&gt;        &lt;a href=&quot;&lt;%= url_for(theme.navabout.url1) %&gt;&quot;&gt;          &lt;i class=&quot;&lt;%= theme.navabout.icon1 %&gt;&quot;&gt;&lt;/i&gt;          &lt;span class=&quot;tooltip-blue&quot;&gt;&lt;%= theme.navabout.name1 %&gt;&lt;/span&gt;        &lt;/a&gt;        &lt;a href=&quot;&lt;%= url_for(theme.navabout.url2) %&gt;&quot;&gt;          &lt;i class=&quot;&lt;%= theme.navabout.icon2 %&gt;&quot;&gt;&lt;/i&gt;          &lt;span class=&quot;tooltip-blue&quot;&gt;&lt;%= theme.navabout.name2 %&gt;&lt;/span&gt;        &lt;/a&gt;        &lt;a href=&quot;&lt;%= url_for(theme.navabout.url3) %&gt;&quot;&gt;          &lt;i class=&quot;&lt;%= theme.navabout.icon3 %&gt;&quot;&gt;&lt;/i&gt;          &lt;span class=&quot;tooltip-blue&quot;&gt;&lt;%= theme.navabout.name3 %&gt;&lt;/span&gt;        &lt;/a&gt;      &lt;/li&gt;      &lt;% &#125; %&gt;</code></pre><p>主题目录下_config.yml文件下navabout下添加：</p><pre><code class="line-numbers language-yml">navabout:  url1: /windows/  icon1: fab fa-windows  name1: Windows软件  url2: /zen  icon2: fas fa-solid fa-keyboard  name2: Zen  name3: 关于  icon3: fas fa-info-circle  url3: /aboutnav</code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitee图床转移记录</title>
      <link href="posts/8eef.html"/>
      <url>posts/8eef.html</url>
      
        <content type="html"><![CDATA[<p>2022年3月25日 gitee图床仓库被封，图片失效，进行图床转移。</p><p>计划把Gitee仓库的图片转移到千牛云，并把图床链接绑定自己网站域名。</p><p>第一次转移过程中使用的是主域名(xmq.plus)对图床进行绑定，因主域名(xmq.plus)已经用来绑定个人网站，导致域名绑定失败，后面将主域名(xmq.plus)改为二级域名(images.xmq.plus)，所以文章按转移过程分为主域名、二级域名进行记录</p><h2 id="主域名"><a href="#主域名" class="headerlink" title="主域名"></a>主域名</h2><h3 id="下载gitee仓库图床包zip"><a href="#下载gitee仓库图床包zip" class="headerlink" title="下载gitee仓库图床包zip"></a>下载gitee仓库图床包zip</h3><p>将下载文件全部解压，规整所有图片，准备把所有图片放在根目录下</p><p>原本图片有的在根目录下，有的是在/img/目录下，把所有的图片放到根目录下。</p><h3 id="上传七牛云"><a href="#上传七牛云" class="headerlink" title="上传七牛云"></a>上传七牛云</h3><p>七牛云注册账号，选择对象存储创建一个空间，地区选择华东区域（不选浙江，PicGo连接图床时无法配置）</p><p>直接在根目录下，上传整理好的图床所有图片</p><p>绑定主域名xmq.plus后图片路径格式为：<a href="https://xmq.plus/%E5%9B%BE%E7%89%87%E5%90%8D%E7%A7%B0.%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F">https://xmq.plus/图片名称.图片格式</a></p><h3 id="上传证书"><a href="#上传证书" class="headerlink" title="上传证书"></a>上传证书</h3><ul><li>绑定http及https区别</li></ul><p>域名申请SSL证书可实现https，https的好处在于保证所有图片信息安全，图片正常访问。</p><p>没有SSL证书的http访问可能无法在https网页下显示，不适用于博客网站，做做笔记用的图片可能不受影响。</p><p>将自己已有的SSL证书（xmq.plus）下载，下载地址<a href="https://www.dnspod.cn/">DNSpod</a></p><p>选择其他格式，即含有PEM格式的证书文件</p><p><img src="https://images.xmq.plus/202203281527029.jpeg" alt="证书下载"></p><p>打开千牛云证书管理：<a href="https://portal.qiniu.com/certificate/ssl">https://portal.qiniu.com/certificate/ssl</a>，选择上传自有证书。</p><p><img src="https://images.xmq.plus/202203281530843.jpg" alt="证书密钥"></p><p>解压证书下载文件，把目录下key和pem文件内容放入到对应的选项中，填入后选择确定上传。</p><p><img src="https://images.xmq.plus/202203281531410.jpg" alt="目录"></p><p>进入图床的存储空间页面管理绑定刚刚上传证书的域名，绑定域名选择域名管理-自定义CDN加速域名-添加域名，设置选项如下，缓存配置选择推挤配置：</p><p><img src="https://images.xmq.plus/202203281531749.jpg" alt="域名配置"></p><p><img src="https://images.xmq.plus/202203281531996.jpg" alt="域名配置2"></p><p>开启Https会在CDN加速上有一定费用，但是考虑个人博客网站xmq.plus已经使用Https协议，为保证图片正常浏览的情况下，开启Https。</p><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>上传证书到千牛云后，进入存储对象-空间管理-域名管理，复制提供的CNAME：</p><p><img src="https://images.xmq.plus//202203281531297.png" alt="Untitled"></p><p>然后进入自己购买域名的解析网站，比如DNSpod：<a href="https://www.dnspod.cn/">https://www.dnspod.cn/</a></p><p>在DNS解析中找到对应域名，添加记录：</p><p>千牛云CNAME配置官方说明：<a href="https://developer.qiniu.com/fusion/kb/1322/how-to-configure-cname-domain-name">https://developer.qiniu.com/fusion/kb/1322/how-to-configure-cname-domain-name</a></p><p><img src="https://images.xmq.plus//202203281531503.png" alt="Untitled"></p><p>重新回到千牛云，等待刷新，状态成功即绑定成功。</p><p>这样就相当于域名与存放图片的储存空间进行绑定了。</p><p>绑定完成后所有的图床格式为：<a href="https://xmq.plus/xxx.xxx">https://xmq.plus/xxx.xxx</a></p><p>这样即使储存商出现问题，只需要换个存储商就可以了，因为图片绑定的是自己的域名地址，所以图片链接不会发生变化，这样免去了后期替换图片链接路径的繁琐过程。</p><h2 id="二级域名"><a href="#二级域名" class="headerlink" title="二级域名"></a>二级域名</h2><p>最开始绑定的是自己的主域名xmq.plus进行转移的，考虑到千牛云域名是通过CNAME记录进行域名绑定，DNS解析记录中A记录和CNAME记录只能使用一次；</p><p>所以做了如下规划：</p><p>主域名xmq.plus，用来做个人网站；</p><p>计划重新解析一个二级域名，images.xmq.plus，用来做图床链接，图床图片链接格式：<a href="https://images.xmq.plus/%E5%9B%BE%E7%89%87%E5%90%8D%E7%A7%B0.%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F%E3%80%82">https://images.xmq.plus/图片名称.图片格式。</a></p><h3 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h3><p>绑定千牛云域名是通过CNAME记录进行域名绑定。</p><p>因自己域名xmq.plus用来绑定个人网站，DNS解析记录中A记录和CNAME记录只能使用一次，所以设置一个二级域名images.xmq.plus设置CNAME记录。</p><p>设置完成后，在对应的记录中免费申请二级域名的SSL证书。</p><p><img src="https://images.xmq.plus//202203281534115.png" alt="Untitled"></p><p>重新按照上述方法上传证书，配置CNAME即可完成更换域名链接。</p><p>绑定好证书之后，在域名配置中将Http升级为Https</p><h3 id="防盗链设置"><a href="#防盗链设置" class="headerlink" title="防盗链设置"></a>防盗链设置</h3><p>防止图片资源被其他网站使用，消耗自己的使用资源。可以设置防盗链，在白名单内加入你自己网站的域名即可；或者不想将自己的图片在哪个网站使用，也可以在黑名单中加入该网站域名。</p><h2 id="批量替换"><a href="#批量替换" class="headerlink" title="批量替换"></a>批量替换</h2><p>gitee仓库图床路径：<a href="https://gitee.com/Sumsung/Blogimage/raw/master/">https://gitee.com/Sumsung/Blogimage/raw/master/</a></p><p>七牛云图床路径：<a href="https://images.xmq.plus/">https://images.xmq.plus/</a></p><p>替换过程</p><p><a href="https://gitee.com/Sumsung/Blogimage/raw/master/img/%E2%86%92https://images.xmq.plus/">https://gitee.com/Sumsung/Blogimage/raw/master/img/→https://images.xmq.plus/</a></p><p><a href="https://gitee.com/Sumsung/Blogimage/raw/master/%E2%86%92https://images.xmq.plus/">https://gitee.com/Sumsung/Blogimage/raw/master/→https://images.xmq.plus/</a></p><p>因为把原来img文件夹下的图片已经放到了图床根目录，所以进行两次替换</p><p>使用Vscode打开需要替换链接的文件夹，matery文件夹下都是我的博客文件，所以我打开matery。</p><ul><li>Flie（文件）-Open Folder（打开文件夹）-选择matery文件夹</li><li>Edit（编辑）-Replace in Files（文件中替换）</li></ul><p>查找内容输入：</p><p><a href="https://gitee.com/Sumsung/Blogimage/raw/master/img/">https://gitee.com/Sumsung/Blogimage/raw/master/img/</a></p><p>替换内容输入：</p><p><a href="https://images.xmq.plus/">https://images.xmq.plus/</a></p><p>查找内容输入：</p><p><a href="https://gitee.com/Sumsung/Blogimage/raw/master/">https://gitee.com/Sumsung/Blogimage/raw/master/</a></p><p>替换内容输入：</p><p><a href="https://images.xmq.plus/">https://images.xmq.plus/</a></p><p>确认后，点击右侧替换所有，即完成了多文件内容批量替换。</p><p><img src="https://images.xmq.plus//202203281532790.jpg" alt="多文件内容替换"></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>一个域名只能解析一次 A 记录或者 CNAME</li></ul><h2 id="七牛云费用说明"><a href="#七牛云费用说明" class="headerlink" title="七牛云费用说明"></a>七牛云费用说明</h2><h3 id="对象存储服务费用"><a href="#对象存储服务费用" class="headerlink" title="对象存储服务费用"></a>对象存储服务费用</h3><p>参考来源<a href="https://developer.qiniu.com/kodo/6379/metering-and-billing">https://developer.qiniu.com/kodo/6379/metering-and-billing</a></p><ul><li>按量计费</li></ul><p>对象存储服务的计费项类型有：存储费用+流量费用+请求费用+数据处理费用。</p><p>存储费用，免费10G/月。</p><p>流量费用=外网流出流量+CDN回源流量（免费10GB/月）+跨区域同步流量</p><p>请求费用，PUT/DELETE 请求次数（免费10万次/月）+GET 请求次数（免费100万次/月）+类型转换次数+数据取回请求次数</p><p>数据处理费用，不涉及。</p><p><img src="https://images.xmq.plus//202203281532076.jpg" alt="免费额度"></p><p><img src="https://images.xmq.plus//202203281532487.jpg" alt="费用组成"></p><p>也就是下行流量需要收费，没有免费额度，0.29G/月</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单网页内嵌入多个Echarts图表实例注意事项</title>
      <link href="posts/c717.html"/>
      <url>posts/c717.html</url>
      
        <content type="html"><![CDATA[<p>文中所提到的Echarts图表实例是指：并非一个容器（dom）内组合的多个图表，而是各自独立容器，独立的配置脚本，且可以独立放置在网页的任意位置。</p><p>如何在网页内嵌入多个Echarts图表实例？</p><h2 id="注意要点"><a href="#注意要点" class="headerlink" title="注意要点"></a>注意要点</h2><ol><li><strong>变量名称不能重复</strong><br>整个页面存在多个echarts图表实例，各个图表实例中的变量名称不能重复，否则无法正常显示图表</li><li><strong>实现多个图表实例窗口自适应</strong></li></ol><ul><li>window.onresize只适用一个图表尺寸大小自适应</li></ul><pre><code class="line-numbers language-jsx">window.onresize = function() &#123;      myChart.resize();      &#125;;//图表随窗口大小而变化的自适应代码</code></pre><ul><li>window.addEventListener适用多个图表尺寸大小自适应</li></ul><p>如果需要设置多个图表自适应，则应在需要设置自适应的实例图表中配置如下代码，以替代上述代码：</p><pre><code class="line-numbers language-jsx">window.addEventListener(&quot;resize&quot;,function()&#123;    taskChart.resize();&#125;);</code></pre><p>且需保证图表名称不重复，如第一个echarts图表实例命名为myChart，则第二个图表应更改名称，例如taskChart。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置Echarts图表要点记录</title>
      <link href="posts/6564.html"/>
      <url>posts/6564.html</url>
      
        <content type="html"><![CDATA[<p>所有配置项说明可查阅官方文档：<a href="https://echarts.apache.org/zh/option.html">Documentation - Apache ECharts</a></p><p>样式参考配置：<a href="http://analysis.datains.cn/finance-admin/index.html#/chartLib/all">http://analysis.datains.cn/finance-admin/index.html#/chartLib/all</a></p><h3 id="设置暗黑主题"><a href="#设置暗黑主题" class="headerlink" title="设置暗黑主题"></a>设置暗黑主题</h3><pre><code class="line-numbers language-jsx">var myChart = echarts.init(dom, &#39;dark&#39;);</code></pre><p>定义容器的后面加入dark属性即可</p><h3 id="柱状图设置为渐变色"><a href="#柱状图设置为渐变色" class="headerlink" title="柱状图设置为渐变色"></a>柱状图设置为渐变色</h3><pre><code class="line-numbers language-JSX">series: [    &#123;      name: &#39;月支出&#39;,      type: &#39;bar&#39;,      barWidth: &#39;60%&#39;,      itemStyle: &#123;//设置选项如下        normal: &#123;            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [&#123;            offset: 0,            color: &#39;#29acff&#39;        &#125;, &#123;            offset: 1,            color: &#39;#4bdfff&#39;            &#125;]),            barBorderRadius: 6,                &#125;,                  &#125;,      data: [10, 52, 200, 334, 390, 330, 220]    &#125;  ],</code></pre><h3 id="折线图改平滑曲线图"><a href="#折线图改平滑曲线图" class="headerlink" title="折线图改平滑曲线图"></a>折线图改平滑曲线图</h3><p>只要在 series中加上属性: smooth: true（true为曲线。flase为直线）</p><pre><code class="line-numbers language-jsx">series: [&#123;name: &#39;邮件营销&#39;,type: &#39;line&#39;,stack: &#39;总量&#39;,areaStyle: &#123;&#125;,smooth:true,data: [120, 132, 101, 134, 90, 230, 210]&#125;]</code></pre><h3 id="echarts配置平均线"><a href="#echarts配置平均线" class="headerlink" title="echarts配置平均线"></a>echarts配置平均线</h3><p>然后在Y轴series区域设置平均线markLine</p><pre><code class="line-numbers language-jsx">series : [    &#123;        name:&#39;直接访问&#39;,                markLine:&#123;                symbol:&quot;none&quot;,//隐藏开始和结束标记                data: [&#123;                        name: &#39;平均线&#39;,                  type: &#39;average&#39;,// 支持 &#39;average&#39;, &#39;min&#39;, &#39;max&#39;                lineStyle:&#123;                  normal:&#123;                color:&quot;orange&quot;,//设置横线颜色                width:2,//设置横线线宽                type:&quot;solid&quot;,//设置为实线，默认虚线（dashed）                            opacity:0.5&#125;&#125;&#125;]&#125;,//设置透明度        type:&#39;bar&#39;,        barWidth: &#39;60%&#39;,        data:data    &#125;]</code></pre><h3 id="配置标线legend图例控件（自定义图例控件示例）"><a href="#配置标线legend图例控件（自定义图例控件示例）" class="headerlink" title="配置标线legend图例控件（自定义图例控件示例）"></a>配置标线legend图例控件（自定义图例控件示例）</h3><p>如遇到一个Echarts图表实例内出现多个标线，会显得图表杂乱无章，通过设置标线开启与关闭控件，在不需要时对标线进行隐藏。</p><p>以增设一个图表平均线为例</p><p>先对图表需要设置平均线的数据组求和，在配置开始对数组进行求和：</p><pre><code class="line-numbers language-jsx">let data = [10,52,200,334,390,330,220];//定义取平均数的数组let sum = 0;//定义总和sum；for (let i = 0; i &lt; data.length;i++)&#123;        sum += data[i];//累加数组所有值得到总和，并将值赋予sum；&#125;;</code></pre><p>定义平均线legend图例</p><pre><code class="line-numbers language-jsx">option = &#123;    legend:&#123;data:[&quot;平均线&quot;,&quot;本月销量&quot;]&#125;,//显示平均线、本月销量图例，即设置开关    yAxis: &#123;        type: &#39;value&#39;    &#125;,    series: [        &#123;               name:&#39;本月销量&#39;,            data: data,            type: &#39;bar&#39;        &#125;,        &#123; //这两组数据用来模拟markLine线段开关,data可以为空            name:&#39;平均线&#39;,            type:&#39;line&#39;,            markLine:&#123;//设置标线，平均线                data:[                    &#123;                        name:&#39;平均线&#39;,                        yAxis:sum/data.length//总和除以数据长度得到平均数                    &#125;                ]            &#125;        &#125;    ]&#125;;</code></pre><h3 id="添加图表工具栏"><a href="#添加图表工具栏" class="headerlink" title="添加图表工具栏"></a>添加图表工具栏</h3><pre><code class="line-numbers language-jsx">toolbox: &#123;    show: true,    feature: &#123;      dataZoom: &#123;        yAxisIndex: &#39;none&#39;//指定哪些 yAxis 被控制。如果缺省则控制所有的y轴。如果设置为 false 则不控制任何y轴。如果设置成 3 则控制 axisIndex 为 3 的y轴。如果设置为 [0, 3] 则控制 axisIndex 为 0 和 3 的y轴。      &#125;,      dataView: &#123; readOnly: false &#125;,//数据视图工具，可以展现当前图表所用的数据，编辑后可以动态更新      magicType: &#123; type: [&#39;line&#39;, &#39;bar&#39;, &#39;stack&#39;] &#125;,//动态类型切换，可切换图表类型      restore: &#123;&#125;,//配置项还原      saveAsImage: &#123;&#125;//保存为图片    &#125;  &#125;,</code></pre><h3 id="添加坐标轴名称并设置位置"><a href="#添加坐标轴名称并设置位置" class="headerlink" title="添加坐标轴名称并设置位置"></a>添加坐标轴名称并设置位置</h3><pre><code class="line-numbers language-jsx">yAxis: [    &#123;      name: &#39;RMB&#39;,//添加Y轴坐标轴名称      nameGap: &#39;40&#39;,//坐标轴名称与Y轴的相对距离，防止名称与坐标系重合      nameLocation: &#39;center&#39;,//名称的位置      type: &#39;value&#39;,            splitLine: &#123;lineStyle:&#123;color: &#39;#D1D9EB&#39;,type:&#39;dashed&#39;&#125;&#125;//设置y坐标轴线为虚线样式    &#125;  ],</code></pre><h3 id="在图表中加入缩放互动组件"><a href="#在图表中加入缩放互动组件" class="headerlink" title="在图表中加入缩放互动组件"></a>在图表中加入缩放互动组件</h3><p>在配置项最后加入dataZoom组件可设置数据区域互动组件：</p><pre><code class="line-numbers language-jsx">//加入dataZoom组件，使数据区域缩放进行互动。dataZoom: [&#123;  type: &#39;slider&#39;,//增加下边缩放栏进行缩放  bottom: &#39;auto&#39;,//离容器的距离，可以为top/right/bottom/left，选项可以为数值也可以为百分比。  start: 0,//初始状态开始位置在0%的区域  end: 100//初始状态结束位置在100%的区域,即打开页面即展示全部数据区域&#125;,&#123;  type: &#39;inside&#39;,//增加在坐标系中滑动拖拽对数据区域平移  start: 0,  end: 100&#125;]</code></pre><h3 id="调整图表与容器之间的距离"><a href="#调整图表与容器之间的距离" class="headerlink" title="调整图表与容器之间的距离"></a>调整图表与容器之间的距离</h3><p>例如如何防止与坐标重合而导致的遮挡问题，可以调整grid组件离容器的距离</p><pre><code class="line-numbers language-jsx">grid: &#123;    left: &#39;3%&#39;,//缩放栏在哪一侧，则在所在一侧调整grid组件离容器的距离参数    right: &#39;4%&#39;,    bottom: &#39;8%&#39;  &#125;,</code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Echarts图表嵌入网页的代码组成</title>
      <link href="posts/3512.html"/>
      <url>posts/3512.html</url>
      
        <content type="html"><![CDATA[<p>在网页中插入echarts图表需要由哪几部分代码组成？</p><p>下面是一个echarts简单折线图表的示例</p><p>示例图</p><p><img src="https://images.xmq.plus/echartsline-simple.png" alt="示例"></p><p><a href="https://echarts.apache.org/examples/zh/editor.html?c=line-simple">https://echarts.apache.org/examples/zh/editor.html?c=line-simple</a></p><p>将以上图表插入至网页中，html文件示例代码如下</p><pre><code class="line-numbers language-css">&lt;!DOCTYPE html&gt;&lt;html style=&quot;height: 100%&quot;&gt;    &lt;head&gt;        &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;/head&gt;    &lt;body style=&quot;height: 100%; margin: 0&quot;&gt;        &lt;div id=&quot;container&quot; style=&quot;height: 100%&quot;&gt;&lt;/div&gt;        &lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.jsdelivr.net/npm/echarts@5.3.0/dist/echarts.min.js&quot;&gt;&lt;/script&gt;        &lt;script type=&quot;text/javascript&quot;&gt;var dom = document.getElementById(&quot;container&quot;);var myChart = echarts.init(dom);var app = &#123;&#125;;var option;option = &#123;  xAxis: &#123;    type: &#39;category&#39;,    data: [&#39;Mon&#39;, &#39;Tue&#39;, &#39;Wed&#39;, &#39;Thu&#39;, &#39;Fri&#39;, &#39;Sat&#39;, &#39;Sun&#39;]  &#125;,  yAxis: &#123;    type: &#39;value&#39;  &#125;,  series: [    &#123;      data: [150, 230, 224, 218, 135, 147, 260],      type: &#39;line&#39;    &#125;  ]&#125;;if (option &amp;&amp; typeof option === &#39;object&#39;) &#123;    myChart.setOption(option);&#125;        &lt;/script&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre><p>总结以上示例代码，可以发现，echarts插入到网页中，由以下四部分组成：</p><ul><li><strong>echarts图表库</strong></li></ul><pre><code class="line-numbers language-jsx">&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.jsdelivr.net/npm/echarts@5.3.0/dist/echarts.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;echarts.min.js&quot;&gt;&lt;/script&gt;</code></pre><p>构建图表的基础，引用echarts图表库脚本文件；</p><p>可以是网页地址(如Line1)，也可以是本地路径(如Line2,引用根目录下echarts. min.js文件)</p><p>如需使用本地路径，图表库脚本文件下载：<a href="https://www.jsdelivr.com/package/npm/echarts">https://www.jsdelivr.com/package/npm/echarts</a> 选择 dist/echarts.js</p><ul><li><strong>样式代码</strong></li></ul><pre><code class="line-numbers language-css">&lt;style&gt;    #echarts1 &#123;      width: 92%;      height: 500px;      margin: 0.5rem auto;      padding: 0.5rem;    &#125;&lt;/style&gt;</code></pre><p>用于定义echarts图标的尺寸大小；</p><p>在<style></style>或者css样式文件中定义图表尺寸位置，也可以在下列引用代码中直接定义图表尺寸位置。</p><ul><li><strong>引用代码</strong></li></ul><pre><code class="line-numbers language-css">&lt;div id=&quot;echarts1&quot; class=&quot;echarts1&quot;&gt;&lt;/div&gt;</code></pre><p>定义将图表具体放置在网页的具体位置（代码在哪，图表就在哪）；</p><p>class关联图表确定的尺寸（图表多大），id关联配置图表的脚本（图表画成什么样子）；</p><p>另外，名称保持上下一致。</p><ul><li><strong>ehcarts配置脚本，自定义绘制图表区域</strong></li></ul><pre><code class="line-numbers language-jsx">&lt;script type=&quot;text/javascript&quot;&gt;// 基于准备好的dom，初始化echarts实例var dom = document.getElementById(&quot;echarts1&quot;);var myChart = echarts.init(dom);var app = &#123;&#125;;// 指定图表的配置项和数据var option;option = &#123;xAxis: &#123;type: &#39;category&#39;,data: [&#39;Mon&#39;, &#39;Tue&#39;, &#39;Wed&#39;, &#39;Thu&#39;, &#39;Fri&#39;, &#39;Sat&#39;, &#39;Sun&#39;]&#125;,yAxis: &#123;type: &#39;value&#39;&#125;,series: [&#123;data: [150, 230, 224, 218, 135, 147, 260],type: &#39;line&#39;&#125;]&#125;;// 使用刚指定的配置项和数据显示图表。if (option &amp;&amp; typeof option === &#39;object&#39;) &#123;myChart.setOption(option);&#125;&lt;/script&gt;</code></pre><p>用于配置自定义图表，也就是你想将图表具体做成什么样子</p><p>此配置脚本为基础折线图配置代码，也就是在此代码中可以任意定制你的图表</p><p>具体如何配置，相关参数对照官方配置手册即可：<a href="https://echarts.apache.org/zh/option.html">https://echarts.apache.org/zh/option.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件批量重命名的万能方法</title>
      <link href="posts/61ae.html"/>
      <url>posts/61ae.html</url>
      
        <content type="html"><![CDATA[<p>Everything一直都是Windows端搜索神器的代名词，但是Everything的功能还有很多可以挖掘的地方，你可能想想不到它可以批量文件重命名，它可以实现你所有对批量文件重命名的想法。</p><p>使用方法如下</p><ul><li>1、将所有需要重命名的文件夹全部放在一个文件夹中，例如我将所有需要重命名的文件全部放入至测试文件夹中。</li></ul><p><img src="https://images.xmq.plus/image-20211104104740655.png" alt="测试文件夹"></p><ul><li>2、打开软件，打开搜索，选择高级搜索，点击浏览，找到需要重命名的文件夹，点击确定：</li></ul><p><img src="https://images.xmq.plus/image-20211104104535423.png" alt="定位文件夹"></p><ul><li>3、选中全部文件（文件过多可使用快捷键ctrl+a全部选中），右键重命名：</li></ul><p><img src="https://images.xmq.plus/image-20211104105218860.png" alt="重命名"></p><ul><li>4、将需要更改的文件名以行为单位粘贴至新文件名方框内，点击确定即可：</li></ul><p><img src="https://images.xmq.plus/image-20211104110153649.png" alt="重命名"></p><ul><li>最终效果：</li></ul><p><img src="https://images.xmq.plus/image-20211104110418025.png" alt="批量生成"></p><p>因此 只需要将你文件名按行排好粘贴至新文件名框即可完成。</p><p>如果不会使用表达式生成，或者没有你想要的表达式可以直接替换文件名，你可以使用excel批量生成文件名，然后将它粘贴至新文件名框即可。</p><p>之所以说它是万能的批量重命名方法，是因为它可以像word一样随意操作和修改各个文件名。</p>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>导航页面添加天气插件</title>
      <link href="posts/161a.html"/>
      <url>posts/161a.html</url>
      
        <content type="html"><![CDATA[<h2 id="配置天气插件代码"><a href="#配置天气插件代码" class="headerlink" title="配置天气插件代码"></a>配置天气插件代码</h2><p>配置天气用的是<a href="https://www.qweather.com/">和风天气</a></p><p>首先需要在它提供好的网页上按照自己的需求配置插件，配置地址：<a href="https://widget.qweather.com/">https://widget.qweather.com/</a></p><p>选择自己喜欢的天气插件</p><p>我选了简约的，点击创建，按照自己的需求自定义自己的样式，最后将生成代码复制下来。</p><pre><code class="line-numbers language-ejs">&lt;div id=&quot;he-plugin-simple&quot;&gt;&lt;/div&gt;&lt;script&gt;    WIDGET = &#123;        &quot;CONFIG&quot;: &#123;            &quot;modules&quot;: &quot;02&quot;,            &quot;background&quot;: &quot;4&quot;,            &quot;backgroundColor&quot;: &quot;E2E7F5&quot;,            &quot;tmpColor&quot;: &quot;000000&quot;,            &quot;tmpSize&quot;: &quot;16&quot;,            &quot;cityColor&quot;: &quot;000000&quot;,            &quot;citySize&quot;: &quot;16&quot;,            &quot;aqiColor&quot;: &quot;FFFFFF&quot;,            &quot;aqiSize&quot;: &quot;16&quot;,            &quot;weatherIconSize&quot;: &quot;24&quot;,            &quot;alertIconSize&quot;: &quot;18&quot;,            &quot;padding&quot;: &quot;10px 10px 10px 10px&quot;,            &quot;shadow&quot;: &quot;10&quot;,            &quot;language&quot;: &quot;auto&quot;,            &quot;borderRadius&quot;: &quot;5&quot;,            &quot;fixed&quot;: &quot;true&quot;,            &quot;vertical&quot;: &quot;top&quot;,            &quot;horizontal&quot;: &quot;left&quot;,            &quot;left&quot;: &quot;20&quot;,            &quot;top&quot;: &quot;27&quot;,            &quot;key&quot;: &quot;4925002e4708416c938bac2fe7bd95da&quot;        &#125;    &#125;&lt;/script&gt;&lt;script src=&quot;https://widget.qweather.net/simple/static/js/he-simple-common.js?v=2.0&quot;&gt;&lt;/script&gt;</code></pre><h2 id="插入代码"><a href="#插入代码" class="headerlink" title="插入代码"></a>插入代码</h2><p>我需要将天气插件放入到我的导航网站页面的左上角</p><p>所以找到导航页面的代码文件（nav.ejs），在需要显示的位置插入复制下来的第一行代码<code>&lt;div id=&quot;he-plugin-simple&quot;&gt;&lt;/div&gt;</code></p><p>为了防止影响页面整体的加载速度，将剩下的两个脚本<code>&lt;script&gt;&lt;/script&gt;</code>代码放入到nav.ejs代码最后</p><p>然后自行调试相应的参数值，适应网站即可。</p><p>最后上传到服务器，完成。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客封面增加视频背景及纹理</title>
      <link href="posts/f70d.html"/>
      <url>posts/f70d.html</url>
      
        <content type="html"><![CDATA[<p>先看一下背景视频封面效果截图：</p><p><img src="https://images.xmq.plus/image-20211005100452098.png" alt="效果展示"></p><h2 id="增加视频背景"><a href="#增加视频背景" class="headerlink" title="增加视频背景"></a>增加视频背景</h2><p>在需要加入视频的链接插入代码。例如在我博客的首页封面改为视频背景，则找到主题下的/layout/_partial/index-cover.ejs,然后将下列代码插入文件最前方保存即可生成视频背景页面。</p><pre><code class="line-numbers language-ejs">&lt;!-- 如果需要切换为图片背景，将此段注释即可 --&gt;    &lt;style&gt;        #index-video &#123; z-index: -1; position: absolute; top: 0; left: 0; height: 100vh; width: 100%; object-fit: cover;&#125;        @media only screen and (max-width: 760px) &#123; #index-video &#123; display: none;&#125;&#125;        @media only screen and (min-width: 760px) &#123; .bg-cover &#123; background-image: none!important;&#125;&#125;    &lt;/style&gt;    &lt;video id=&quot;index-video&quot; autoplay loop muted&gt;        &lt;source src=&quot;https://txmov2.a.yximgs.com/upic/2021/09/30/15/BMjAyMTA5MzAxNTE5MDhfMTg1ODk2MDg4N181ODA5MjQ1NDkyMV8xXzM=_b_Bef514871cf947c46c11bc54a3ed3faa9.mp4?pkey=AAWo-kOQESq9j_AMCO-BT6jTPS090PuVHWtyuSQ8cddkgMmI3V-P9uWMDY13QrPuCjtWVbch_01wRcj6Rtm5w0AkLhgVTMSceLLiRYjlWUfLDNNLX3jISKEscl9uNXUnYcM&amp;tag=1-1632986688-xpcwebprofile-0-ongrobirtl-58c917acab52d13f&amp;clientCacheKey=3xajcj9u8fubzm4_b.mp4&quot;&gt;    &lt;/video&gt;&lt;!-- src后面接入你的视频链接 --&gt;&lt;!-- 如果需要切换为图片背景，将此段注释即可 --&gt;</code></pre><p>如需要恢复之前的图片背景，则将则段代码删除即可。</p><h2 id="增加线条纹理遮罩"><a href="#增加线条纹理遮罩" class="headerlink" title="增加线条纹理遮罩"></a>增加线条纹理遮罩</h2><p>光加一个视频封面背景看起来效果可能还差点意思，再在视频封面上层加一个线条遮罩。</p><p><img src="https://images.xmq.plus/image-20211005100341290.png" alt="线条遮罩"></p><p>下载线条效果元素，将线条效果元素放入到网页目录中（主题目录下/source/medias）。</p><p>下载地址：<a href="https://xmq.plus/medias/bggrid.png">https://xmq.plus/medias/bggrid.png</a></p><p>就matery博客而言，只需要找到主题/source/css/matery.css样式文件，打开搜索定位到.bg-cover:before,<br>.bg-cover:after（即视频封面区域的样式设置），在其中加入背景代码：<code>background-image: url(/medias/bggrid.png);</code></p><pre><code class="line-numbers language-css">.bg-cover:before,.bg-cover:after &#123;    position: absolute;    z-index: 1;    width: 100%;    height: 100%;    display: block;    left: 0;    top: 0;    content: &quot;&quot;;    background-image: url(/medias/bggrid.png);&#125;</code></pre><p>若不是hexo页面，则自己找到视频封面所在的div 在其中加入background-image: url(图片地址);即可。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页加密</title>
      <link href="posts/4781.html"/>
      <url>posts/4781.html</url>
      
        <content type="html"><![CDATA[<h2 id="设置SHA256加密密码"><a href="#设置SHA256加密密码" class="headerlink" title="设置SHA256加密密码"></a>设置SHA256加密密码</h2><p>如果本身博客中没有安装加密脚本，提前安装即可。</p><p>因为hexo-matery博客中已经安装有文章加密功能（/libs/cryptojs/crypto-js.min.js），所以博客中hexo可以实现加密功能，加密使用<code>SHA256</code>加密，所以在加密前需要先将你的密码转换成<code>SHA256格式</code>，至于SHA256加密，请自行网上搜索在线生成，例如: <a href="http://www.ttmd5.com/hash.php?type=9">http://www.ttmd5.com/hash.php?type=9</a></p><p>输入你设置的密码，生成后复制下来。</p><h2 id="指定页面开启密码功能"><a href="#指定页面开启密码功能" class="headerlink" title="指定页面开启密码功能"></a>指定页面开启密码功能</h2><p>比如在工资清单页面设置密码，则找到根目录下工资清单文件夹下的index.md页面添加password选项。</p><pre><code class="line-numbers language-markdown">---title: 工资清单date: 2021-10-03 20:04:51type: &quot;salarylist&quot;layout: &quot;salarylist&quot;password: &quot;&quot;---</code></pre><p>将刚刚生成的密钥粘贴到PASSWORD中。</p><h2 id="增加配置项"><a href="#增加配置项" class="headerlink" title="增加配置项"></a>增加配置项</h2><p>在主题配置文件中加入密码配置项,方便以后设置开启或关闭</p><pre><code class="line-numbers language-yml"># 工资单加密，以后不需要则将enable选为falseSalaryVerifyPassword:   enable: true   promptMessage: 该工资清单已加密，请输入密码访问   errorMessage: 密码错误，将返回主页！</code></pre><h2 id="插入加密代码"><a href="#插入加密代码" class="headerlink" title="插入加密代码"></a>插入加密代码</h2><p>在需要设置的页面（主体目录下/layout/salarylist.ejs，我的工资页面对应的ejs是salarylist.ejs 所以是找到它）中最前面插入代码：</p><pre><code class="line-numbers language-js">&lt;% if (theme.SalaryVerifyPassword.enable) &#123; %&gt; &lt;script src=&quot;&lt;%- theme.libs.js.crypto %&gt;&quot;&gt;&lt;/script&gt; &lt;script&gt; (function() &#123; let pwd = &#39;&lt;%- page.password %&gt;&#39;; if (pwd &amp;&amp; pwd.length &gt; 0) &#123; if (pwd !== CryptoJS.SHA256(prompt(&#39;&lt;%- theme.SalaryVerifyPassword.promptMessage %&gt;&#39;)).toString(CryptoJS.enc.Hex)) &#123; alert(&#39;&lt;%- theme.SalaryVerifyPassword.errorMessage %&gt;&#39;); location.href = &#39;&lt;%- url_for(&quot;/&quot;) %&gt;&#39;; &#125; &#125; &#125;)(); &lt;/script&gt; &lt;% &#125; %&gt;</code></pre><p>切记，如果需要改动里面的变量名称，配置项中的相应名称需保持一致，否则不生效。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Echarts实践之网页工资清单</title>
      <link href="posts/454.html"/>
      <url>posts/454.html</url>
      
        <content type="html"><![CDATA[<p>先看一下做成是效果</p><p><img src="https://images.xmq.plus/echarts.gif" alt="echarts"></p><p>在网页上生成数据可视化图表，并且达到自适应各类设备屏幕大小。</p><p>独立性较强，不需要依赖，直接下载一个js脚本，对着手册按照自己的需求改好代码就可以完美实现。</p><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><ul><li>使用的是<a href="https://echarts.apache.org/zh/index.html">Apache ECharts</a>图表库，里面有许多经典的示例图表，挑选自己喜欢的下下来就可以直接使用。</li></ul><p>Apache ECharts官网：<a href="https://echarts.apache.org/zh/index.html">https://echarts.apache.org/zh/index.html</a></p><ul><li>下载好示例图表html文件之后，按照自己的需求改动里面的配置项。</li></ul><p>具体如何修改设置，可以按着官网提供的配置手册、使用手册进行设置。</p><ul><li>设置自适应配置，保证嵌入到自己网页后能完美融入。</li><li>将改好的html文件嵌入到自己的网页（hexo博客等）中。</li></ul><p>这一篇用于记录如何使用Apache ECharts做一个工资统计表页面。</p><h2 id="1、下载脚本"><a href="#1、下载脚本" class="headerlink" title="1、下载脚本"></a>1、下载脚本</h2><p>光下载示例文档你可能会发现打不开。或者它使用的是网页链接脚本，你使用代码编辑器打开html代码就能看到：</p><pre><code class="line-numbers language-JS">&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.jsdelivr.net/npm/echarts@&#123;&#123;version&#125;&#125;/dist/echarts.min.js&quot;&gt;&lt;/script&gt;</code></pre><p>所以如果代码中的链接失效，那么你的图表也将失效。图表的生成就是基于这个脚本实现的，echarts.js是图表的基础。</p><p>所以把脚本下下来，放到自己的网页目录中就不会失效了。</p><p>进入<a href="https://echarts.apache.org/zh/index.html">Apache ECharts</a>官网-文档的<a href="https://echarts.apache.org/handbook/zh/get-started/">使用手册</a>中，快速入门就可以找到脚本；</p><p>在 <a href="https://www.jsdelivr.com/package/npm/echarts">https://www.jsdelivr.com/package/npm/echarts</a> 选择 <code>dist/echarts.js</code>，点击并保存为 <code>echarts.js</code> 文件。</p><h2 id="2、创建页面，引入脚本"><a href="#2、创建页面，引入脚本" class="headerlink" title="2、创建页面，引入脚本"></a>2、创建页面，引入脚本</h2><p>新建一个新目录（根目录），在目录下把刚刚下载好的js文件放到根目录下，再把你选好的示例文件下载下来，一起放到这个文件夹中，使用记事本或者vs code打开示例html，将脚本链接地址改成引入本地脚本，内容如下：</p><pre><code class="line-numbers language-HTML">&lt;!DOCTYPE html&gt;&lt;html&gt;  &lt;head&gt;    &lt;meta charset=&quot;utf-8&quot; /&gt;    &lt;!-- 引入刚刚下载的 ECharts 文件 --&gt;    &lt;script src=&quot;echarts.js&quot;&gt;&lt;/script&gt;  &lt;/head&gt;&lt;/html&gt;</code></pre><h2 id="3、自适应"><a href="#3、自适应" class="headerlink" title="3、自适应"></a>3、自适应</h2><p>刚下下来的图表你会发现在网页上查看示例图表的时候，图表可以根据浏览器窗口大小变化图表也会跟着变化，而下载下来就没有变化了。</p><p>所以需要自己添加代码进行自适应。</p><p>详情使用手册说明：<a href="https://echarts.apache.org/handbook/zh/concepts/chart-size">https://echarts.apache.org/handbook/zh/concepts/chart-size</a></p><p>在有些场景下，我们希望当容器大小改变时，图表的大小也相应地改变。</p><p>比如，图表容器是一个高度为 800px、宽度为页面 100% 的节点，你希望在浏览器宽度改变的时候，始终保持图表宽度是页面的 100%。</p><p>这种情况下，可以监听页面的 <code>window.onresize</code> 事件获取浏览器大小改变的事件，然后调用 <a href="https://echarts.apache.org/api.html#echartsInstance.resize"><code>echartsInstance.resize</code></a> 改变图表的大小。</p><pre><code class="line-numbers language-HTML">&lt;!DOCTYPE html&gt;&lt;style&gt;  #main,  html,  body &#123;    width: 100%; /*宽度设置成百分比，才能实现宽度自适应屏幕，不可设置为固定的px*/  &#125;  #main &#123;    height: 800px;  &#125;&lt;/style&gt;&lt;html&gt;  &lt;head&gt;    &lt;meta charset=&quot;utf-8&quot; /&gt;    &lt;!-- 引入根目录下的 ECharts 文件 --&gt;    &lt;script src=&quot;echarts.js&quot;&gt;&lt;/script&gt;  &lt;/head&gt;&lt;/html&gt;&lt;body&gt;  &lt;!-- 为 ECharts 准备一个定义了宽高的 DOM --&gt;  &lt;div id=&quot;main&quot;&gt;&lt;/div&gt;    &lt;script type=&quot;text/javascript&quot;&gt;      // 基于准备好的dom，初始化echarts实例，使用main关联到dom容器中        var myChart = echarts.init(document.getElementById(&#39;main&#39;));        window.onresize = function() &#123;        myChart.resize();        &#125;;      // 指定图表的配置项和数据      var option;      option = &#123;          //图表参数，此处不展示&#125;;option &amp;&amp; myChart.setOption(option);    &lt;/script&gt;&lt;/body&gt;</code></pre><p>也就是在你下好的示例html文件中的type=”text/javascript”位置下方插入代码：</p><pre><code class="line-numbers language-JS">        var myChart = echarts.init(document.getElementById(&#39;main&#39;));        window.onresize = function() &#123;        myChart.resize();        &#125;;</code></pre><p>就可以实现屏幕大小自适应了。</p><h2 id="4、自定义图表"><a href="#4、自定义图表" class="headerlink" title="4、自定义图表"></a>4、自定义图表</h2><p>下好的文件图表根据官网提供的配置手册和使用手册进行自定义设置。</p><p>即设置<code>Var option；</code>区域的配置项</p><p>官网配置手册：<a href="https://echarts.apache.org/zh/option.html#title">https://echarts.apache.org/zh/option.html#title</a></p><ul><li>例如我修改好的堆叠柱状图代码如下：</li></ul><pre><code class="line-numbers language-html">&lt;!DOCTYPE html&gt;&lt;style&gt;  #main,  html,  body &#123;    width:99%;  &#125;  #main &#123;    height: 750px;  &#125;&lt;/style&gt;&lt;html&gt;  &lt;head&gt;    &lt;meta charset=&quot;utf-8&quot; /&gt;    &lt;!-- 引入根目录下的 ECharts 文件 --&gt;    &lt;script src=&quot;echarts.js&quot;&gt;&lt;/script&gt;  &lt;/head&gt;&lt;/html&gt;&lt;body&gt;  &lt;!-- 为 ECharts 准备一个定义了宽高的 DOM --&gt;  &lt;div id=&quot;main&quot;&gt;&lt;/div&gt;    &lt;script type=&quot;text/javascript&quot;&gt;      // 基于准备好的dom，初始化echarts实例，使用main关联到dom容器中        var myChart = echarts.init(document.getElementById(&#39;main&#39;));        window.onresize = function() &#123;        myChart.resize();        &#125;;      // 指定图表的配置项和数据      var option;      let data1 = [&#39;2020年08月&#39;,&#39;2020年09月&#39;,&#39;2020年10月&#39;,&#39;2020年11月&#39;,&#39;2020年12月&#39;,&#39;2021年01月&#39;,&#39;2021年02月&#39;,&#39;2021年03月&#39;,&#39;2021年04月&#39;,&#39;2021年05月&#39;,&#39;2021年06月&#39;,&#39;2021年07月&#39;,&#39;2021年08月&#39;,&#39;2021年09月&#39;];      let data2 = [&#39;3490.76&#39;,&#39;2231.76&#39;,&#39;2231&#39;,&#39;2231.76&#39;,&#39;2189&#39;,&#39;2151&#39;,&#39;2250&#39;,&#39;2180&#39;,&#39;2082&#39;,&#39;2238&#39;,&#39;4510.51&#39;,&#39;3248.01&#39;,&#39;2724.01&#39;,&#39;0&#39;];      let data3 = [&#39;3589&#39;,&#39;2639&#39;,&#39;2059&#39;,&#39;2639&#39;,&#39;2569&#39;,&#39;2639&#39;,&#39;1729&#39;,&#39;2429&#39;,&#39;2639&#39;,&#39;2569&#39;,&#39;2639&#39;,&#39;2569&#39;,&#39;0&#39;,&#39;0&#39;];      let data4 = [&#39;-&#39;,&#39;-&#39;,&#39;-&#39;,&#39;3500&#39;,&#39;3640&#39;,&#39;2380&#39;,&#39;882&#39;,&#39;2800&#39;,&#39;2970&#39;,&#39;2970&#39;,&#39;2970&#39;,&#39;2860&#39;,&#39;50&#39;,&#39;0&#39;];      let data5 = [&#39;-&#39;,&#39;-&#39;,&#39;-&#39;,&#39;-&#39;,&#39;960&#39;,&#39;2043.31&#39;,&#39;-&#39;,&#39;1028&#39;,&#39;-&#39;,&#39;1000&#39;,&#39;545&#39;,&#39;700&#39;,&#39;0&#39;,&#39;1000&#39;];      let data6 = [&#39;7079.76&#39;,&#39;4870.76&#39;,&#39;4290&#39;,&#39;8370.76&#39;,&#39;9358&#39;,&#39;9213.31&#39;,&#39;4861&#39;,&#39;8437&#39;,&#39;7691&#39;,&#39;8777&#39;,&#39;10664.51&#39;,&#39;9377.01&#39;,&#39;2774.01&#39;,&#39;1000&#39;];      option = &#123;  //背景颜色backgroundColor: &#39;#000&#39;,  //图表标题及副标题  title: &#123;  text: &#39;统计表&#39;,  subtext: &#39;滚动滚轮及鼠标拖拽可进行缩放&#39;  &#125;,  //标签移动显示图例情况    tooltip: &#123;    trigger: &#39;axis&#39;,    axisPointer: &#123;      type: &#39;shadow&#39;    &#125;  &#125;,  //显示图例  legend:&#123;    orient: &#39;horizontal&#39;,    right: &#39;left&#39;  &#125;,  //控制在容器中的相对位置  grid: &#123;    left: &#39;3%&#39;,    right: &#39;4%&#39;,    bottom: &#39;8%&#39;,    containLabel: true  &#125;,  yAxis: &#123;    type: &#39;value&#39;,    name: &#39;薪资：元&#39;,    nameLocation: &#39;middle&#39;,    nameGap: &#39;55&#39;  &#125;,  xAxis: &#123;    type: &#39;category&#39;,    name: &#39;月份&#39;,    nameLocation: &#39;start&#39;,    nameGap: &#39;35&#39;,    data: data1  &#125;,  series: [    &#123;      name: &#39;工资&#39;,      type: &#39;bar&#39;,      stack: &#39;total&#39;,      label: &#123;        show: false      &#125;,      data: data2    &#125;,    &#123;      name: &#39;补贴&#39;,      type: &#39;bar&#39;,      stack: &#39;total&#39;,      label: &#123;        show: false      &#125;,      data: data3    &#125;,    &#123;      name: &#39;绩效&#39;,      type: &#39;bar&#39;,      stack: &#39;total&#39;,      label: &#123;        show: false      &#125;,      data: data4    &#125;,    &#123;      name: &#39;奖金&#39;,      type: &#39;bar&#39;,      stack: &#39;total&#39;,      label: &#123;        show: false      &#125;,      data: data5    &#125;,    &#123;      name: &#39;总数&#39;,      type: &#39;bar&#39;,      barGap: &#39;-100%&#39;,// -100%，柱子之间重合。      label: &#123;        show: true,// 显示数值        position: &#39;top&#39;,        textStyle: &#123; color: &#39;#000&#39; &#125;//设置数值颜色      &#125;,      itemStyle: &#123;      normal: &#123;      color: &#39;rgba(128, 128, 128, 0)&#39;// 设置背景颜色为透明，即隐藏颜色      &#125;      &#125;,      data: data6    &#125;  ],    //加入dataZoom组件，使数据区域缩放进行互动。  dataZoom: [  &#123;    type: &#39;slider&#39;,//增加下边缩放栏进行缩放    bottom: &#39;auto&#39;,//离容器的距离，可以为top/right/bottom/left，选项可以为数值也可以为百分比。    start: 0,//初始状态开始位置在0%的区域    end: 100//初始状态结束位置在100%的区域,即打开页面即展示全部数据区域  &#125;,  &#123;    type: &#39;inside&#39;,//增加在坐标系中滑动拖拽对数据区域平移    start: 0,    end: 100  &#125;]&#125;;option &amp;&amp; myChart.setOption(option);    &lt;/script&gt;&lt;/body&gt;</code></pre><p>其中，示例的堆叠图无法展示所有分类的总量的数值，即总数。所以总数柱是里面做了一个透明重叠的柱子，看不到柱子，只显示柱子的总值。所以可以看到生成的图表数据只显示了总数的值，透明隐藏了总数的数值，隐藏了各个颜色板块的数值，显示了各个颜色块的值。做成的效果如上图。</p><p>如果像上述示例图表，x抽数据可能随着时间的增长数据以后会越加越多，一张图可能不放不下，可以在x轴插入缩放组件（datazoom）进行交互，达到一个自由缩放，容纳大量数据的目的，能看到整体情况的同时，也能很好的展现所有详细数据。</p><ul><li>还做了一个组合图。即将多种多个图表做成一个图表。效果如下：</li></ul><p><img src="https://images.xmq.plus/image-20211005110800492.png" alt="组合图"></p><p>我修改好的柱状及扇形组合图代码如下：</p><pre><code class="line-numbers language-html">&lt;!DOCTYPE html&gt;&lt;html style=&quot;height: 100%&quot;&gt;    &lt;head&gt;        &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;/head&gt;    &lt;body style=&quot;height: 100%; margin: 0&quot;&gt;        &lt;div id=&quot;container&quot; style=&quot;height: 100%&quot;&gt;&lt;/div&gt;        &lt;script type=&quot;text/javascript&quot; src=&quot;echarts.js&quot;&gt;&lt;/script&gt;        &lt;script type=&quot;text/javascript&quot;&gt;var dom = document.getElementById(&quot;container&quot;);var myChart = echarts.init(dom);var app = &#123;&#125;;// 自适应var myChart = echarts.init(document.getElementById(&#39;container&#39;));window.onresize = function() &#123;myChart.resize();&#125;;var option;const builderJson = &#123;  charts: &#123;    &#39;2021.07&#39;: 9377.01,    &#39;2021.06&#39;: 10664.51,    &#39;2021.05&#39;: 8777,    &#39;2021.04&#39;: 7691,    &#39;2021.03&#39;: 8437,    &#39;2021.02&#39;: 4861,    &#39;2021.01&#39;: 9213.31,    &#39;2020.12&#39;: 9358,    &#39;2020.11&#39;: 8370.76,    &#39;2020.10&#39;: 4290,    &#39;2020.09&#39;: 4870.76,    &#39;2020.08&#39;: 7079.76  &#125;,&#125;;const downloadJson = &#123;  &#39;实际年入账&#39;: 92990.11,  &#39;公积金年入账&#39;: 8671.58,  &#39;养老金保险扣除&#39;: 3468.48,  &#39;医疗保险扣除&#39;: 1286.4,  &#39;其他费用扣除&#39;: 36&#125;;//设置水印const waterMarkText = &#39;ECHARTS&#39;;const canvas = document.createElement(&#39;canvas&#39;);const ctx = canvas.getContext(&#39;2d&#39;);canvas.width = canvas.height = 100;ctx.textAlign = &#39;center&#39;;ctx.textBaseline = &#39;middle&#39;;ctx.globalAlpha = 0.08;ctx.font = &#39;20px Microsoft Yahei&#39;;ctx.translate(50, 50);ctx.rotate(-Math.PI / 4);ctx.fillText(waterMarkText, 0, 0);option = &#123;  backgroundColor: &#123;    type: &#39;pattern&#39;,    image: canvas,    repeat: &#39;repeat&#39;  &#125;,  tooltip: &#123;&#125;,  title: [    &#123;      text: &#39;月度实发工资统计（2020.08-2021.07）&#39;,      subtext: &#39;总计 92990.11&#39;,      left: &#39;25%&#39;,      textAlign: &#39;center&#39;    &#125;,    &#123;      text: &#39;薪资年统计（2020.08-2021.07）&#39;,      subtext:        &#39;总计 &#39; +        Object.keys(downloadJson).reduce(function (all, key) &#123;          return all + downloadJson[key];        &#125;, 0),      left: &#39;75%&#39;,      textAlign: &#39;center&#39;    &#125;  ],  grid: [    &#123;      width: &#39;50%&#39;,//柱状图表占一半宽度      left: 10,//居左      containLabel: true    &#125;  ],  xAxis: [    &#123;      type: &#39;value&#39;,      splitLine: &#123;        show: true      &#125;    &#125;  ],  yAxis: [    &#123;      type: &#39;category&#39;,      data: Object.keys(builderJson.charts),      axisLabel: &#123;        interval: 0,        rotate: 30//水印旋转角度      &#125;,      splitLine: &#123;        show: false      &#125;    &#125;  ],  series: [    &#123;      type: &#39;bar&#39;,      stack: &#39;chart&#39;,      z: 3,      label: &#123;        position: &#39;right&#39;,        show: true      &#125;,      data: Object.keys(builderJson.charts).map(function (key) &#123;        return builderJson.charts[key];      &#125;)    &#125;,    &#123;      type: &#39;bar&#39;,      stack: &#39;chart&#39;,      silent: true,      itemStyle: &#123;        color: &#39;#eee&#39;      &#125;,      data: Object.keys(builderJson.charts).map(function (key) &#123;        return builderJson.all - builderJson.charts[key];      &#125;)    &#125;,    &#123;      type: &#39;pie&#39;,      radius: [0, &#39;50%&#39;],//扇形图大小      center: [&#39;75%&#39;, &#39;50%&#39;],      data: Object.keys(downloadJson).map(function (key) &#123;        return &#123;          name: key.replace(&#39;.js&#39;, &#39;&#39;),          value: downloadJson[key]        &#125;;      &#125;)    &#125;  ]&#125;;if (option &amp;&amp; typeof option === &#39;object&#39;) &#123;    myChart.setOption(option);&#125;        &lt;/script&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="5、嵌入网页"><a href="#5、嵌入网页" class="headerlink" title="5、嵌入网页"></a>5、嵌入网页</h2><p>做好之后还只是一个独立的组件，需要把它嵌入到自己的网页中。</p><p>其实很简单，只需要把两步就好了：</p><ul><li>插入位置加入<code>&lt;div&gt;&lt;/div&gt;</code>定义宽度和id</li></ul><p>例如修改好的示例文件html中，我的图表放在了一个叫id=”main”的div中，那么插入到新的页面为了防止重复ID，在新的页面中设置图表id为id=salarylist，则在页面插入位置增加一个：</p><pre><code class="line-numbers language-html">&lt;div id= &quot;salarylist&quot;&gt;&lt;/div&gt;</code></pre><p>需要注意，脚本中的id同样需要改了，否则图表找不到放在哪个位置，也就无法显示图表了。</p><pre><code class="line-numbers language-js">var myChart = echarts.init(document.getElementById(&#39;salarylist&#39;));//id改成一致</code></pre><p>然后将示例文件中的高宽设置等放入页面中</p><pre><code class="line-numbers language-html">&lt;div id=&quot;container&quot; style=&quot;width:99%;height=750px;&quot;&gt;&lt;/div&gt;</code></pre><p>也可以样式和html分开，把样式设置到CSS文件中。</p><ul><li>复制基础脚本和配置项脚本放入到页面<code>&lt;body&gt;</code>中</li></ul><p>设置好图表插入页面图表高度和位置之后，把图表配置脚本和基础脚本放入<code>&lt;body&gt;</code>中即可。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费使用腾讯云每天定时签到京东领取京豆</title>
      <link href="posts/784b.html"/>
      <url>posts/784b.html</url>
      
        <content type="html"><![CDATA[<p>之前分享过用脚本结合腾讯云函数签到网易云、B站、有道云的签到脚本，不了解的可以先参考：</p><p><a href="https://xmq.plus/posts/e146.html">使用腾讯云函数，实现多平台自动签到</a></p><p>这次使用另外一个脚本同样借助腾讯云函数自动京东签到获取京豆</p><h2 id="一、脚本获取"><a href="#一、脚本获取" class="headerlink" title="一、脚本获取"></a>一、脚本获取</h2><p>京东自动签到领取京豆仓库脚本 </p><p><a href="https://github.com/forecho/scripts-JD">https://github.com/forecho/scripts-JD</a>  </p><p><a href="https://github.com/Sitoi/dailycheckin">https://github.com/Sitoi/dailycheckin</a></p><p>用腾讯云每天自动签到京东脚本 </p><p><a href="https://github.com/lukesyy/jd_yun">https://github.com/lukesyy/jd_yun</a></p><p><a href="https://wwi.lanzoui.com/ixhjnsglrcj">https://wwi.lanzoui.com/ixhjnsglrcj</a> </p><p>上面中选一个就好！把它下载下来。</p><p>可以选<a href="https://github.com/lukesyy/jd_yun%E8%BF%99%E4%B8%AA%E5%A5%BD%E4%B8%80%E7%82%B9%EF%BC%8C%E6%9B%B4%E6%96%B0%E9%A2%91%E7%8E%87%E7%9B%B8%E5%AF%B9%E9%AB%98%E4%B8%80%E7%82%B9%E3%80%82">https://github.com/lukesyy/jd_yun这个好一点，更新频率相对高一点。</a></p><p>我这个使用<a href="https://wwi.lanzoui.com/ixhjnsglrcj">https://wwi.lanzoui.com/ixhjnsglrcj</a> 这个脚本做示范，其实都一样，找到相似的文件、相似的两个数值输入进去，其他方法、原理和步骤都是一致的。</p><h2 id="二、获取cookie"><a href="#二、获取cookie" class="headerlink" title="二、获取cookie"></a>二、获取cookie</h2><ul><li>先登录京东账号获取cookie</li></ul><p>使用谷歌浏览器登录网址<a href="https://home.m.jd.com/myJd/newhome.action?sceneval=2&amp;ufc=&amp;">https://home.m.jd.com/myJd/newhome.action?sceneval=2&amp;ufc=&amp;</a> ，</p><ul><li><p>登录自己京东账号之后，按下F12打开开发者模式</p></li><li><p>复制application里pt_key和pt_pin的cookies值。</p></li></ul><p><img src="https://images.xmq.plus/jingdonghuoqucookie.png" alt="获取cookie"></p><p>格式写成：</p><pre><code>pt_key=XXX;pt_pin=XXX;</code></pre><h2 id="三、解压脚本并填入信息"><a href="#三、解压脚本并填入信息" class="headerlink" title="三、解压脚本并填入信息"></a>三、解压脚本并填入信息</h2><ul><li>把复制的cookie填到文件<code>jdCookie.js</code>，支持支持多账号，每行填一个账号的cookie值。</li><li>设置公众号消息接收通知，支持server酱，钉钉机器人，企业微信机器人和pushplus，我是用的企业微信机器人（文件中附带使用方法），复制信息按格式粘贴到<code>sendNotify.js</code>文件对应位置中的let QYWX_AM = ‘xxx’中，当然这步可以省略，具体企业微信应用消息推送设置教程详情：<a href="https://note.youdao.com/ynoteshare1/index.html?id=351e08a72378206f9dd64d2281e9b83b&type=note">企业微信消息推送设置</a>。</li></ul><h2 id="四、新建云函数执行文件"><a href="#四、新建云函数执行文件" class="headerlink" title="四、新建云函数执行文件"></a>四、新建云函数执行文件</h2><p>新建index.js文件（已经新建好了）：</p><pre><code class="line-numbers language-JS">&#39;use strict&#39;;exports.main_handler =  (event, context, callback) =&gt; &#123;    require(&#39;./jd_bean_sign.js&#39;)&#125;</code></pre><h2 id="五、上传腾讯云"><a href="#五、上传腾讯云" class="headerlink" title="五、上传腾讯云"></a>五、上传腾讯云</h2><p>打开腾讯云网站<a href="https://console.cloud.tencent.com/scf">https://console.cloud.tencent.com/scf</a> 新建云函数，本地上传文件夹（就是我提供压缩包解压后的目录）</p><p><img src="https://images.xmq.plus/shangchuanyunhanshu1.png" alt="设置方法"></p><p>然后部署测试执行下，测试成功。</p><p>如果测试不成功，多半是因为任务超时自动结束了。可以在此函数配置中设置执行超市时间设置时间长一点。</p><p><img src="https://images.xmq.plus/image-20210811174119560.png" alt="超时时间设置"></p><p>测试成功后即可在日志中查看到相关签到信息了。</p><p>最后设置一下每天触发这个脚本的时间，即设置触发器：</p><p>选择自定义触发，cron的表达式填入<code>0 10 8 * * * *</code>(每天8点10分触发签到)。</p><p><img src="https://images.xmq.plus/image-20210811174314278.png" alt="定时触发"></p><p>这样就完成了！</p>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用腾讯云函数，实现多平台自动签到</title>
      <link href="posts/e146.html"/>
      <url>posts/e146.html</url>
      
        <content type="html"><![CDATA[<p>目的是想设置腾讯视频自动签到领成长值、网易云自动签到领云贝、B站自动签到刷经验值。</p><h2 id="1、建立腾讯云函数"><a href="#1、建立腾讯云函数" class="headerlink" title="1、建立腾讯云函数"></a>1、建立腾讯云函数</h2><ul><li>自动签到仓库代码地址：<a href="https://sitoi.gitee.io/dailycheckin/">每日签到聚合</a></li></ul><p>这个大佬聚合了爱奇艺、全民K歌、腾讯视频、有道云笔记、网易云音乐、一加手机论坛、百度贴吧、BiliBili、V2EX、咔叽网单、什么值得买、天翼云盘、吾爱破解、MEIZU社区、智友邦、CSDN、AcFun的签到</p><p>大多数能用腾讯云函数来实现的自动签到项目基本都包含了。</p><p>另外还支持：Fa米家、芒果TV、微博、多看阅读、王者营地、联通沃邮箱公众号这些的签到，不过这些需要进行数据抓包，过程相对复杂，本文就不涉及了</p><ul><li>具体部署的方法，打开你的腾讯云：<a href="https://console.cloud.tencent.com/">https://console.cloud.tencent.com/</a></li></ul><p>打开以上网页自行扫码登录，登录后找到网页左上角<strong>云产品 » 云函数</strong></p><p><img src="https://images.xmq.plus/image-20210720124155156.png" alt="云函数"></p><p>然后如果是第一次开通云函数功能，会弹出一个「服务授权」，点击前往访问管理，点击确定授权，然后微信扫码确认即可</p><ul><li>创建云函数</li></ul><p>然后点击新建，我们来创建一个函数，地域选哪里都可以</p><p><img src="https://sitoi.gitee.io/dailycheckin/img/scf_create.png" alt="创建云函数"></p><pre><code class="line-numbers language-python"># -*- coding: utf-8 -*-from dailycheckin.main import checkindef main_handler(event, context):    checkin()</code></pre><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>短暂等待函数创建完成，我们现在需要给函数安装运行依赖</p><p>在「函数管理」中切换到「函数代码」标签，再找到终端 » 新终端</p><p><img src="https://images.xmq.plus/scf_install.png" alt="安装依赖"></p><pre><code class="line-numbers language-bash">cd srcpip3 install dailycheckin --upgrade -t .</code></pre><h2 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h2><p>最后一步就是进行参数配置了，这是唯一比较复杂的步骤</p><p>在src目录下创建config文件夹</p><p>接着在config文件夹下面创建config.json文件</p><p>然后打开此网址：<a href="https://sitoi.gitee.io/dailycheckin/settings/">https://sitoi.gitee.io/dailyche</a></p><p><img src="https://images.xmq.plus/scf_config.png" alt="添加配置文件"></p><p>翻到网页底部，可以看到作者给出的配置模板代码：</p><pre><code>&#123;  &quot;DINGTALK_SECRET&quot;: &quot;&quot;,  &quot;DINGTALK_ACCESS_TOKEN&quot;: &quot;&quot;,  &quot;SCKEY&quot;: &quot;&quot;,  &quot;SENDKEY&quot;: &quot;&quot;,  &quot;BARK_URL&quot;: &quot;&quot;,  &quot;QMSG_KEY&quot;: &quot;&quot;,  &quot;QMSG_TYPE&quot;: &quot;&quot;,  &quot;TG_BOT_TOKEN&quot;: &quot;&quot;,  &quot;TG_USER_ID&quot;: &quot;&quot;,  &quot;TG_API_HOST&quot;: &quot;&quot;,  &quot;TG_PROXY&quot;: &quot;&quot;,  &quot;COOLPUSHSKEY&quot;: &quot;&quot;,  &quot;COOLPUSHQQ&quot;: true,  &quot;COOLPUSHWX&quot;: true,  &quot;COOLPUSHEMAIL&quot;: true,  &quot;QYWX_KEY&quot;: &quot;&quot;,  &quot;QYWX_CORPID&quot;: &quot;&quot;,  &quot;QYWX_AGENTID&quot;: &quot;&quot;,  &quot;QYWX_CORPSECRET&quot;: &quot;&quot;,  &quot;QYWX_TOUSER&quot;: &quot;&quot;,  &quot;PUSHPLUS_TOKEN&quot;: &quot;&quot;,  &quot;PUSHPLUS_TOPIC&quot;: &quot;&quot;,  &quot;CITY_NAME_LIST&quot;: [    &quot;上海&quot;  ],  &quot;MOTTO&quot;: true,  &quot;IQIYI_COOKIE_LIST&quot;: [    &#123;      &quot;iqiyi_cookie&quot;: &quot;__dfp=xxxxxx; QP0013=xxxxxx; QP0022=xxxxxx; QYABEX=xxxxxx; P00001=xxxxxx; P00002=xxxxxx; P00003=xxxxxx; P00007=xxxxxx; QC163=xxxxxx; QC175=xxxxxx; QC179=xxxxxx; QC170=xxxxxx; P00010=xxxxxx; P00PRU=xxxxxx; P01010=xxxxxx; QC173=xxxxxx; QC180=xxxxxx; P00004=xxxxxx; QP0030=xxxxxx; QC006=xxxxxx; QC007=xxxxxx; QC008=xxxxxx; QC010=xxxxxx; nu=xxxxxx; __uuid=xxxxxx; QC005=xxxxxx;&quot;    &#125;,    &#123;      &quot;iqiyi_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;VQQ_COOKIE_LIST&quot;: [    &#123;      &quot;auth_refresh&quot;: &quot;https://access.video.qq.com/user/auth_refresh?vappid=xxxxxx&amp;vsecret=xxxxxx&amp;type=qq&amp;g_tk=&amp;g_vstk=xxxxxx&amp;g_actk=xxxxxx&amp;callback=xxxxxx&amp;_=xxxxxx&quot;,      &quot;vqq_cookie&quot;: &quot;pgv_pvid=xxxxxx; pac_uid=xxxxxx; RK=xxxxxx; ptcz=xxxxxx; tvfe_boss_uuid=xxxxxx; video_guid=xxxxxx; video_platform=xxxxxx; pgv_info=xxxxxx; main_login=xxxxxx; vqq_access_token=xxxxxx; vqq_appid=xxxxxx; vqq_openid=xxxxxx; vqq_vuserid=xxxxxx; vqq_refresh_token=xxxxxx; login_time_init=xxxxxx; uid=xxxxxx; vqq_vusession=xxxxxx; vqq_next_refresh_time=xxxxxx; vqq_login_time_init=xxxxxx; login_time_last=xxxxxx;&quot;    &#125;,    &#123;      &quot;auth_refresh&quot;: &quot;多账号 refresh url，请参考上面，以实际获取为准&quot;,      &quot;vqq_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;YOUDAO_COOKIE_LIST&quot;: [    &#123;      &quot;youdao_cookie&quot;: &quot;JSESSIONID=xxxxxx; __yadk_uid=xxxxxx; OUTFOX_SEARCH_USER_ID_NCOO=xxxxxx; YNOTE_SESS=xxxxxx; YNOTE_PERS=xxxxxx; YNOTE_LOGIN=xxxxxx; YNOTE_CSTK=xxxxxx; _ga=xxxxxx; _gid=xxxxxx; _gat=xxxxxx; PUBLIC_SHARE_18a9dde3de846b6a69e24431764270c4=xxxxxx;&quot;    &#125;,    &#123;      &quot;youdao_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;KGQQ_COOKIE_LIST&quot;: [    &#123;      &quot;kgqq_cookie&quot;: &quot;muid=xxxxxx; uid=xxxxxx; userlevel=xxxxxx; openid=xxxxxx; openkey=xxxxxx; opentype=xxxxxx; qrsig=xxxxxx; pgv_pvid=xxxxxx;&quot;    &#125;,    &#123;      &quot;kgqq_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;MUSIC163_ACCOUNT_LIST&quot;: [    &#123;      &quot;music163_phone&quot;: &quot;18888xxxxxx&quot;,      &quot;music163_password&quot;: &quot;Sitoi&quot;    &#125;,    &#123;      &quot;music163_phone&quot;: &quot;多账号 手机号&quot;,      &quot;music163_password&quot;: &quot;多账号 密码&quot;    &#125;  ],  &quot;ONEPLUSBBS_COOKIE_LIST&quot;: [    &#123;      &quot;oneplusbbs_cookie&quot;: &quot;acw_tc=xxxxxx; qKc3_0e8d_saltkey=xxxxxx; qKc3_0e8d_lastvisit=xxxxxx; bbs_avatar=xxxxxx; qKc3_0e8d_sendmail=xxxxxx; opcid=xxxxxx; opcct=xxxxxx; oppt=xxxxxx; opsid=xxxxxx; opsct=xxxxxx; opbct=xxxxxx; UM_distinctid=xxxxxx; CNZZDATA1277373783=xxxxxx; www_clear=xxxxxx; ONEPLUSID=xxxxxx; qKc3_0e8d_sid=xxxxxx; bbs_uid=xxxxxx; bbs_uname=xxxxxx; bbs_grouptitle=xxxxxx; opuserid=xxxxxx; bbs_sign=xxxxxx; bbs_formhash=xxxxxx; qKc3_0e8d_ulastactivity=xxxxxx; opsertime=xxxxxx; qKc3_0e8d_lastact=xxxxxx; qKc3_0e8d_checkpm=xxxxxx; qKc3_0e8d_noticeTitle=xxxxxx; optime_browser=xxxxxx; opnt=xxxxxx; opstep=xxxxxx; opstep_event=xxxxxx; fp=xxxxxx;&quot;    &#125;,    &#123;      &quot;oneplusbbs_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;BAIDU_URL_SUBMIT_LIST&quot;: [    &#123;      &quot;data_url&quot;: &quot;https://cdn.jsdelivr.net/gh/Sitoi/Sitoi.github.io/baidu_urls.txt&quot;,      &quot;submit_url&quot;: &quot;http://data.zz.baidu.com/urls?site=https://sitoi.cn&amp;token=xxxxxx&quot;,      &quot;times&quot;: 10    &#125;,    &#123;      &quot;data_url&quot;: &quot;多账号 data_url 链接地址，以实际获取为准&quot;,      &quot;submit_url&quot;: &quot;多账号 submit_url 链接地址，以实际获取为准&quot;,      &quot;times&quot;: 10    &#125;  ],  &quot;FMAPP_ACCOUNT_LIST&quot;: [    &#123;      &quot;fmapp_token&quot;: &quot;xxxxxx.xxxxxx-xxxxxx-xxxxxx.xxxxxx-xxxxxx&quot;,      &quot;fmapp_cookie&quot;: &quot;sensorsdata2015jssdkcross=xxxxxx&quot;,      &quot;fmapp_blackbox&quot;: &quot;eyJlcnJxxxxxx&quot;,      &quot;fmapp_device_id&quot;: &quot;xxxxxx-xxxx-xxxx-xxxx-xxxxxx&quot;,      &quot;fmapp_fmversion&quot;: &quot;xxxxxx&quot;,      &quot;fmapp_os&quot;: &quot;xxxxxx&quot;,      &quot;fmapp_useragent&quot;: &quot;xxxxxx&quot;    &#125;,    &#123;      &quot;fmapp_token&quot;: &quot;多账号 token 填写，请参考上面，以实际获取为准&quot;,      &quot;fmapp_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;,      &quot;fmapp_blackbox&quot;: &quot;多账号 blackbox 填写，请参考上面，blackbox 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;,      &quot;fmapp_device_id&quot;: &quot;多账号 device_id 填写，请参考上面，以实际获取为准&quot;,      &quot;fmapp_fmversion&quot;: &quot;多账号 fmVersion 填写，请参考上面，以实际获取为准&quot;,      &quot;fmapp_os&quot;: &quot;多账号 os 填写，请参考上面，以实际获取为准&quot;,      &quot;fmapp_useragent&quot;: &quot;多账号 User-Agent 填写，请参考上面，以实际获取为准&quot;    &#125;  ],  &quot;TIEBA_COOKIE_LIST&quot;: [    &#123;      &quot;tieba_cookie&quot;: &quot;BIDUPSID=xxxxxx; PSTM=xxxxxx; BAIDUID=xxxxxx; BAIDUID_BFESS=xxxxxx; delPer=xxxxxx; PSINO=xxxxxx; H_PS_PSSID=xxxxxx; BA_HECTOR=xxxxxx; BDORZ=xxxxxx; TIEBA_USERTYPE=xxxxxx; st_key_id=xxxxxx; BDUSS=xxxxxx; BDUSS_BFESS=xxxxxx; STOKEN=xxxxxx; TIEBAUID=xxxxxx; ab_sr=xxxxxx; st_data=xxxxxx; st_sign=xxxxxx;&quot;    &#125;,    &#123;      &quot;tieba_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;BILIBILI_COOKIE_LIST&quot;: [    &#123;      &quot;bilibili_cookie&quot;: &quot;_uuid=xxxxxx; rpdid=xxxxxx; LIVE_BUVID=xxxxxx; PVID=xxxxxx; blackside_state=xxxxxx; CURRENT_FNVAL=xxxxxx; buvid3=xxxxxx; fingerprint3=xxxxxx; fingerprint=xxxxxx; buivd_fp=xxxxxx; buvid_fp_plain=xxxxxx; DedeUserID=xxxxxx; DedeUserID__ckMd5=xxxxxx; SESSDATA=xxxxxx; bili_jct=xxxxxx; bsource=xxxxxx; finger=xxxxxx; fingerprint_s=xxxxxx;&quot;,      &quot;coin_num&quot;: 0,      &quot;coin_type&quot;: 1,      &quot;silver2coin&quot;: true    &#125;,    &#123;      &quot;bilibili_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;,      &quot;coin_num&quot;: 0,      &quot;coin_type&quot;: 1,      &quot;silver2coin&quot;: true    &#125;  ],  &quot;V2EX_COOKIE_LIST&quot;: [    &#123;      &quot;v2ex_cookie&quot;: &quot;_ga=xxxxxx; __cfduid=xxxxxx; PB3_SESSION=xxxxxx; A2=xxxxxx; V2EXSETTINGS=xxxxxx; V2EX_REFERRER=xxxxxx; V2EX_LANG=xxxxxx; _gid=xxxxxx; V2EX_TAB=xxxxxx;&quot;,      &quot;v2ex_proxy&quot;: &quot;使用代理的信息，无密码例子: http://127.0.0.1:1080 有密码例子: http://username:password@127.0.0.1:1080&quot;    &#125;,    &#123;      &quot;v2ex_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;,      &quot;v2ex_proxy&quot;: &quot;使用代理的信息，无密码例子: http://127.0.0.1:1080 有密码例子: http://username:password@127.0.0.1:1080&quot;    &#125;  ],  &quot;WWW2NZZ_COOKIE_LIST&quot;: [    &#123;      &quot;www2nzz_cookie&quot;: &quot;YPx9_2132_saltkey=xxxxxx; YPx9_2132_lastvisit=xxxxxx; YPx9_2132_sendmail=xxxxxx; YPx9_2132_con_request_uri=xxxxxx; YPx9_2132_sid=xxxxxx; YPx9_2132_client_created=xxxxxx; YPx9_2132_client_token=xxxxxx; YPx9_2132_ulastactivity=xxxxxx; YPx9_2132_auth=xxxxxx; YPx9_2132_connect_login=xxxxxx; YPx9_2132_connect_is_bind=xxxxxx; YPx9_2132_connect_uin=xxxxxx; YPx9_2132_stats_qc_login=xxxxxx; YPx9_2132_checkpm=xxxxxx; YPx9_2132_noticeTitle=xxxxxx; YPx9_2132_nofavfid=xxxxxx; YPx9_2132_lastact=xxxxxx;&quot;    &#125;,    &#123;      &quot;www2nzz_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;SMZDM_COOKIE_LIST&quot;: [    &#123;      &quot;smzdm_cookie&quot;: &quot;__jsluid_s=xxxxxx; __ckguid=xxxxxx; device_id=xxxxxx; homepage_sug=xxxxxx; r_sort_type=xxxxxx; _zdmA.vid=xxxxxx; sajssdk_2015_cross_new_user=xxxxxx; sensorsdata2015jssdkcross=xxxxxx; footer_floating_layer=xxxxxx; ad_date=xxxxxx; ad_json_feed=xxxxxx; zdm_qd=xxxxxx; sess=xxxxxx; user=xxxxxx; _zdmA.uid=xxxxxx; smzdm_id=xxxxxx; userId=xxxxxx; bannerCounter=xxxxxx; _zdmA.time=xxxxxx;&quot;    &#125;,    &#123;      &quot;smzdm_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;MIMOTION_ACCOUNT_LIST&quot;: [    &#123;      &quot;mimotion_phone&quot;: &quot;18888xxxxxx&quot;,      &quot;mimotion_password&quot;: &quot;Sitoi&quot;,      &quot;mimotion_min_step&quot;: &quot;10000&quot;,      &quot;mimotion_max_step&quot;: &quot;20000&quot;    &#125;,    &#123;      &quot;mimotion_phone&quot;: &quot;多账号 手机号填写，请参考上面&quot;,      &quot;mimotion_password&quot;: &quot;多账号 密码填写，请参考上面&quot;,      &quot;mimotion_min_step&quot;: &quot;多账号 最小步数填写，请参考上面&quot;,      &quot;mimotion_max_step&quot;: &quot;多账号 最大步数填写，请参考上面&quot;    &#125;  ],  &quot;ACFUN_ACCOUNT_LIST&quot;: [    &#123;      &quot;acfun_phone&quot;: &quot;18888xxxxxx&quot;,      &quot;acfun_password&quot;: &quot;Sitoi&quot;    &#125;,    &#123;      &quot;acfun_phone&quot;: &quot;多账号 手机号填写，请参考上面&quot;,      &quot;acfun_password&quot;: &quot;多账号 密码填写，请参考上面&quot;    &#125;  ],  &quot;CLOUD189_ACCOUNT_LIST&quot;: [    &#123;      &quot;cloud189_phone&quot;: &quot;18888xxxxxx&quot;,      &quot;cloud189_password&quot;: &quot;Sitoi&quot;    &#125;,    &#123;      &quot;cloud189_phone&quot;: &quot;多账号 手机号填写，请参考上面&quot;,      &quot;cloud189_password&quot;: &quot;多账号 密码填写，请参考上面&quot;    &#125;  ],  &quot;POJIE_COOKIE_LIST&quot;: [    &#123;      &quot;pojie_cookie&quot;: &quot;htVD_2132_client_token=xxxxxx; htVD_2132_connect_is_bind=xxxxxx; htVD_2132_connect_uin=xxxxxx; htVD_2132_nofavfid=xxxxxx; htVD_2132_smile=xxxxxx; Hm_lvt_46d556462595ed05e05f009cdafff31a=xxxxxx; htVD_2132_saltkey=xxxxxx; htVD_2132_lastvisit=xxxxxx; htVD_2132_client_created=xxxxxx; htVD_2132_auth=xxxxxx; htVD_2132_connect_login=xxxxxx; htVD_2132_home_diymode=xxxxxx; htVD_2132_visitedfid=xxxxxx; htVD_2132_viewid=xxxxxx; KF4=xxxxxx; htVD_2132_st_p=xxxxxx; htVD_2132_lastcheckfeed=xxxxxx; htVD_2132_sid=xxxxxx; htVD_2132_ulastactivity=xxxxxx; htVD_2132_noticeTitle=xxxxxx;&quot;    &#125;,    &#123;      &quot;pojie_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;MGTV_PARAMS_LIST&quot;: [    &#123;      &quot;mgtv_params&quot;: &quot;uuid=xxxxxx&amp;uid=xxxxxx&amp;ticket=xxxxxx&amp;token=xxxxxx&amp;device=iPhone&amp;did=xxxxxx&amp;deviceId=xxxxxx&amp;appVersion=6.8.2&amp;osType=ios&amp;platform=iphone&amp;abroad=0&amp;aid=xxxxxx&amp;nonce=xxxxxx&amp;timestamp=xxxxxx&amp;appid=xxxxxx&amp;type=1&amp;sign=xxxxxx&amp;callback=xxxxxx&quot;    &#125;,    &#123;      &quot;mgtv_params&quot;: &quot;多账号 请求参数填写，请参考上面&quot;    &#125;  ],  &quot;PICACOMIC_ACCOUNT_LIST&quot;: [    &#123;      &quot;picacomic_email&quot;: &quot;Sitoi&quot;,      &quot;picacomic_password&quot;: &quot;xxxxxx&quot;    &#125;,    &#123;      &quot;picacomic_email&quot;: &quot;多账号 账号填写，请参考上面&quot;,      &quot;picacomic_password&quot;: &quot;多账号 密码填写，请参考上面&quot;    &#125;  ],  &quot;MEIZU_COOKIE_LIST&quot;: [    &#123;      &quot;meizu_cookie&quot;: &quot;aliyungf_tc=xxxxxx; logined_uid=xxxxxx; acw_tc=xxxxxx; LT=xxxxxx; MZBBS_2132_saltkey=xxxxxx; MZBBS_2132_lastvisit=xxxxxx; MZBBSUC_2132_auth=xxxxxx; MZBBSUC_2132_loginmember=xxxxxx; MZBBSUC_2132_ticket=xxxxxx; MZBBS_2132_sid=xxxxxx; MZBBS_2132_ulastactivity=xxxxxx; MZBBS_2132_auth=xxxxxx; MZBBS_2132_loginmember=xxxxxx; MZBBS_2132_lastcheckfeed=xxxxxx; MZBBS_2132_checkfollow=xxxxxx; MZBBS_2132_lastact=xxxxxx;&quot;,      &quot;draw_count&quot;: &quot;1&quot;    &#125;,    &#123;      &quot;meizu_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;,      &quot;draw_count&quot;: &quot;多账号 抽奖次数设置&quot;    &#125;  ],  &quot;ZHIYOO_COOKIE_LIST&quot;: [    &#123;      &quot;zhiyoo_cookie&quot;: &quot;ikdQ_9242_saltkey=xxxxxx; ikdQ_9242_lastvisit=xxxxxx; ikdQ_9242_onlineusernum=xxxxxx; ikdQ_9242_sendmail=1; ikdQ_9242_seccode=xxxxxx; ikdQ_9242_ulastactivity=xxxxxx; ikdQ_9242_auth=xxxxxx; ikdQ_9242_connect_is_bind=xxxxxx; ikdQ_9242_nofavfid=xxxxxx; ikdQ_9242_checkpm=xxxxxx; ikdQ_9242_noticeTitle=1; ikdQ_9242_sid=xxxxxx; ikdQ_9242_lip=xxxxxx; ikdQ_9242_lastact=xxxxxx&quot;    &#125;,    &#123;      &quot;zhiyoo_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;WEIBO_COOKIE_LIST&quot;: [    &#123;      &quot;weibo_show_url&quot;: &quot;https://api.weibo.cn/2/users/show?wm=xxxxxx&amp;launchid=xxxxxx&amp;b=xxxxxx&amp;from=xxxxxx&amp;c=xxxxxx&amp;networktype=xxxxxx&amp;v_p=xxxxxx&amp;skin=xxxxxx&amp;v_f=xxxxxx&amp;lang=xxxxxx&amp;sflag=xxxxxx&amp;ua=xxxxxx&amp;ft=xxxxxx&amp;aid=xxxxxx&amp;has_extend=xxxxxx&amp;uid=xxxxxx&amp;gsid=xxxxxx&amp;sourcetype=&amp;get_teenager=xxxxxx&amp;s=xxxxxx&amp;has_profile=xxxxxx&quot;    &#125;,    &#123;      &quot;weibo_show_url&quot;: &quot;多账号 show_url 填写，请参考上面，show_url 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;DUOKAN_COOKIE_LIST&quot;: [    &#123;      &quot;duokan_cookie&quot;: &quot;user_id=xxxxxx; token=xxxxxx; user_gender=xxxxxx; device_id=xxxxxx; app_id=xxxxxx; build=xxxxxx; short_version=xxxxxx&quot;    &#125;,    &#123;      &quot;duokan_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;CSDN_COOKIE_LIST&quot;: [    &#123;      &quot;csdn_cookie&quot;: &quot;uuid_tt_dd=xxxxxx; _ga=xxxxxx; UserName=xxxxxx; UserInfo=xxxxxx; UserToken=xxxxxx; UserNick=xxxxxx; AU=768; UN=xxxxxx; BT=xxxxxx; p_uid=xxxxxx; Hm_up_6bcd52f51e9b3dce32bec4a3997715ac=xxxxxx; Hm_ct_6bcd52f51e9b3dce32bec4a3997715ac=xxxxxx; Hm_lvt_6bcd52f51e9b3dce32bec4a3997715ac=xxxxxx dc_sid=xxxxxx; c_segment=xxxxxx; dc_session_id=xxxxxx; csrfToken=xxxxxx; c_first_ref=xxxxxx; c_first_page=xxxxxx; c_page_id=xxxxxx; announcement-new=xxxxxx; log_Id_click=xxxxxx; c_pref=xxxxxx; c_ref=xxxxxx; dc_tos=xxxxxx; log_Id_pv=xxxxxx; log_Id_view=xxxxxx&quot;    &#125;,    &#123;      &quot;csdn_cookie&quot;: &quot;多账号 cookie 填写，请参考上面，cookie 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;WZYD_DATA_LIST&quot;: [    &#123;      &quot;wzyd_data&quot;: &quot;areaId=xxxxxx&amp;roleId=xxxxxx&amp;gameId=xxxxxx&amp;serverId=xxxxxx&amp;gameOpenid=xxxxxx&amp;userId=xxxxxx&amp;appVersion=xxxxxx&amp;cClientVersionName=xxxxxx&amp;platid=xxxxxx&amp;source=xxxxxx&amp;algorithm=xxxxxx&amp;version=xxxxxx&amp;timestamp=xxxxxx&amp;appid=xxxxxx&amp;openid=xxxxxx&amp;sig=xxxxxx&amp;encode=2&amp;msdkEncodeParam=xxxxxx&amp;cSystem=xxxxxx&amp;h5Get=xxxxxx&amp;msdkToken=&amp;appOpenid=xxxxxx&quot;    &#125;,    &#123;      &quot;wzyd_data&quot;: &quot;多账号 data 填写，请参考上面，data 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ],  &quot;WOMAIL_URL_LIST&quot;: [    &#123;      &quot;womail_url&quot;: &quot;https://nyan.mail.wo.cn/cn/sign/index/index?mobile=xxxxxx&amp;userName=&amp;openId=xxxxxx&quot;    &#125;,    &#123;      &quot;womail_url&quot;: &quot;多账号 url 填写，请参考上面，url 以实际获取为准（遇到特殊字符如双引号\&quot; 请加反斜杠转义）&quot;    &#125;  ]&#125;</code></pre><p>然后翻到网页顶部，你可以看到每个参数需要填入的具体内容是什么</p><p>你可以选择将上面那部分代码<strong>全部复制并粘贴到config.json</strong>，然后仅填写自己需要的部分</p><p>实际执行的时候会自动跳过你没填参数的签到项目</p><p>不过如果你追求代码简介，也可以像我这样，仅保留你需要签到项目部分的代码</p><p><img src="https://images.xmq.plus/image-20210720130147937.png" alt="config.json"></p><p>接下来介绍怎么找到这些信息，一个一个填入：</p><h3 id="推送信息"><a href="#推送信息" class="headerlink" title="推送信息"></a>推送信息</h3><ul><li>企业微信</li></ul><p>配置信息中需要填入这些参数：</p><pre><code>  &quot;QYWX_CORPID&quot;: &quot;需要填入的内容&quot;,   &quot;QYWX_AGENTID&quot;: &quot;需要填入的内容&quot;,  &quot;QYWX_CORPSECRET&quot;: &quot;需要填入的内容&quot;,  &quot;QYWX_TOUSER&quot;: &quot;@all&quot;,</code></pre><p>没有企业微信的需要先注册一个企业微信，不会自行百度</p><p>第一个<code>QYWX_CORPID</code>是企业id，网页登录企业微信，进入企业微信后台</p><p><img src="https://images.xmq.plus/37" alt="企业微信后台"></p><p>最下面企业ID就是<code>QYWX_CORPID</code>,把它复制下来填入到双引号中。</p><p>接下来找QYWX_AGENTID和QYWX_CORPSECRET：</p><p>依次进入应用管理-应用-自建-创建应用，自己创建完成后获取secret和AgentID和成员id</p><p><img src="https://images.xmq.plus/45" alt="自建推送应用"></p><p>把AgentID填入到QYWX_AGENTID、secret填入到QYWX_CORPSECRET</p><p>这样微信推送消息设置就设置完成了</p><ul><li>QQ群推送</li></ul><p>选择QQ推送可以用Qmsg酱,相当于QQ的机器人一样，用一个专门的QQ给你发消息。</p><p>对应的配置信息中需要填入这些参数：</p><pre><code>  &quot;QMSG_KEY&quot;: &quot;需要填入的内容&quot;,  &quot;QMSG_TYPE&quot;: &quot;需要填入的内容（看配置文件自定义选择）&quot;,</code></pre><p>首先去Qmsg酱注册一个账号，跟着里面的文档操作：<a href="https://qmsg.zendee.cn/index.html">https://qmsg.zendee.cn/index.html</a></p><p>然后你会得到它提供给你的key，把它复制下来，填入到配置文件中：</p><p><img src="https://images.xmq.plus/image-20210720131720822.png" alt="key"></p><p>填完推送信息之后就是填你需要自动签到的软件的cooke信息，其实就是账号的登录信息</p><h3 id="签到网址信息"><a href="#签到网址信息" class="headerlink" title="签到网址信息"></a>签到网址信息</h3><p>那么这些cookie信息怎么找到呢，我用下面三种软件做示范：</p><ul><li>网易云</li></ul><p>我们可以看到网易云自动签到需要填入以下配置信息:</p><pre><code>  &quot;MUSIC163_ACCOUNT_LIST&quot;: [    &#123;      &quot;music163_phone&quot;: &quot;18888xxxxxx&quot;,      &quot;music163_password&quot;: &quot;xxx&quot;    &#125;</code></pre><p>也就是手机号和登录密码，所以直接输入进去即可。</p><ul><li>B站</li></ul><p>B站自动签到需要填入以下配置信息：</p><pre><code>  &quot;BILIBILI_COOKIE_LIST&quot;: [    &#123;      &quot;bilibili_cookie&quot;: &quot;_uuid=xxxxxx; rpdid=xxxxxx; LIVE_BUVID=xxxxxx; PVID=xxxxxx; blackside_state=xxxxxx; CURRENT_FNVAL=xxxxxx; buvid3=xxxxxx; fingerprint3=xxxxxx; fingerprint=xxxxxx; buivd_fp=xxxxxx; buvid_fp_plain=xxxxxx; DedeUserID=xxxxxx; DedeUserID__ckMd5=xxxxxx; SESSDATA=xxxxxx; bili_jct=xxxxxx; bsource=xxxxxx; finger=xxxxxx; fingerprint_s=xxxxxx;&quot;,      &quot;coin_num&quot;: 0,      &quot;coin_type&quot;: 1,      &quot;silver2coin&quot;: true    &#125;</code></pre><p>也就是只要我们找到cookie，然后填入到bilibili_cookie中即可，那么怎么找到B站的cookie：</p><p>首先登录网页版B站，按下F12，会弹出一个对话框点击网络，再按下F5刷新，点击第一个文件。</p><p>在打开的文件中下滑，找到cookie，右键复制下来</p><p><img src="https://images.xmq.plus/image-20210720133643189.png" alt="cookie"></p><p>把复制的值粘贴到配置文件对应位置中。</p><ul><li>腾讯视频</li></ul><p>腾讯视频自动签到需要填入以下配置信息：</p><pre><code>  &quot;VQQ_COOKIE_LIST&quot;: [    &#123;      &quot;auth_refresh&quot;: &quot;https://access.video.qq.com/user/auth_refresh?vappid=xxxxxx&amp;vsecret=xxxxxx&amp;type=qq&amp;g_tk=&amp;g_vstk=xxxxxx&amp;g_actk=xxxxxx&amp;callback=xxxxxx&amp;_=xxxxxx&quot;,      &quot;vqq_cookie&quot;: &quot;pgv_pvid=xxxxxx; pac_uid=xxxxxx; RK=xxxxxx; ptcz=xxxxxx; tvfe_boss_uuid=xxxxxx; video_guid=xxxxxx; video_platform=xxxxxx; pgv_info=xxxxxx; main_login=xxxxxx; vqq_access_token=xxxxxx; vqq_appid=xxxxxx; vqq_openid=xxxxxx; vqq_vuserid=xxxxxx; vqq_refresh_token=xxxxxx; login_time_init=xxxxxx; uid=xxxxxx; vqq_vusession=xxxxxx; vqq_next_refresh_time=xxxxxx; vqq_login_time_init=xxxxxx; login_time_last=xxxxxx;&quot;    &#125;</code></pre><p>腾讯视频需要找两个参数，auth_refresh、vqq_cookie</p><p>和B站一样 登录腾讯视频官网，登录账号，按下F12，点击网络，在左上角搜索auth，打开文件：</p><p><img src="https://images.xmq.plus/image-20210720134213177.png" alt="URL"></p><p>将第一个文件中的Request URL链接复制下来，拷贝到auth_refresh参数中，接着往下滑，找到cookie，复制下来：</p><p><img src="https://images.xmq.plus/image-20210720134346714.png" alt="cookie"></p><p>填入到vqq_cookie对应的参数中。</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>填写好之后，点击左下角的测试，会提示你是否进行部署并测试，点击「是」</p><p>耐心等待返回结果，如果显示<strong>测试成功</strong>，那就可以确定你以上的操作都是正常的。</p><p><img src="https://images.xmq.plus/scf_test.png" alt="部署"></p><p>下面展示出我自己的模板，可以按照文章找到下面对应的参数就可以实现微信＋qq群签到信息推送，对网易云、腾讯视频、B站自动签到：</p><pre><code>&#123;  &quot;DINGTALK_SECRET&quot;: &quot;&quot;,  &quot;DINGTALK_ACCESS_TOKEN&quot;: &quot;&quot;,  &quot;SCKEY&quot;: &quot;&quot;,  &quot;SENDKEY&quot;: &quot;&quot;,  &quot;BARK_URL&quot;: &quot;&quot;,  &quot;QMSG_KEY&quot;: &quot;Qmsg生成的key&quot;,  &quot;QMSG_TYPE&quot;: &quot;group&quot;,  &quot;TG_BOT_TOKEN&quot;: &quot;&quot;,  &quot;TG_USER_ID&quot;: &quot;&quot;,  &quot;TG_API_HOST&quot;: &quot;&quot;,  &quot;TG_PROXY&quot;: &quot;&quot;,  &quot;COOLPUSHSKEY&quot;: &quot;&quot;,  &quot;COOLPUSHQQ&quot;: true,  &quot;COOLPUSHWX&quot;: true,  &quot;COOLPUSHEMAIL&quot;: true,  &quot;QYWX_KEY&quot;: &quot;&quot;,  &quot;QYWX_CORPID&quot;: &quot;企业微信ID&quot;,  &quot;QYWX_AGENTID&quot;: &quot;企业微信自建应用的AgentID&quot;,  &quot;QYWX_CORPSECRET&quot;: &quot;企业自建应用的secret&quot;,  &quot;QYWX_TOUSER&quot;: &quot;@all&quot;,  &quot;PUSHPLUS_TOKEN&quot;: &quot;&quot;,  &quot;PUSHPLUS_TOPIC&quot;: &quot;&quot;,  &quot;CITY_NAME_LIST&quot;: [    &quot;城市名&quot;  ],  &quot;BILIBILI_COOKIE_LIST&quot;: [    &#123;      &quot;bilibili_cookie&quot;: &quot;B站cookie&quot;,      &quot;coin_num&quot;: 1,      &quot;coin_type&quot;: 0,      &quot;silver2coin&quot;: true    &#125;  ],  &quot;VQQ_COOKIE_LIST&quot;: [    &#123;      &quot;auth_refresh&quot;: &quot;腾讯视频refresh_URL&quot;,      &quot;vqq_cookie&quot;: &quot;腾讯视频cookie&quot;    &#125;  ],  &quot;MUSIC163_ACCOUNT_LIST&quot;: [    &#123;      &quot;music163_phone&quot;: &quot;网易云手机号&quot;,      &quot;music163_password&quot;: &quot;网易云登录密码&quot;    &#125;  ]&#125;</code></pre><p>当然你也可以直接不删减，直接实用参考文档中提供的模板，将对应的参数填入进去即可。</p><h2 id="其他同类签到项目"><a href="#其他同类签到项目" class="headerlink" title="其他同类签到项目"></a>其他同类签到项目</h2><p>最后再顺便整理了一下Github上基于腾讯云函数的其他的一些签到项目：</p><p>不过以下这些项目并不一定完全能参考本文所述的部署方式，一些作者也另外专门写了部署方式，这里就留给觉得有需要的粉丝自行研究了</p><p>超星学习通：<a href="https://github.com/yuban10703/chaoxingsign">https://github.com/yuban10703/chaoxingsign</a><br>BiliBili抽奖／葫芦侠／吾爱破解／EduCoder／学习通－健康上报&amp;课堂签到／小One易统计打卡：<a href="https://github.com/mkdir700/sign_in">https://github.com/mkdir700/sign_in</a><br>京东签到合集：<a href="https://github.com/lukesyy/jd_yun">https://github.com/lukesyy/jd_yun</a><br>和彩云：<a href="https://github.com/lukesyy/jd_yun">https://github.com/lukesyy/jd_yun</a><br>爱奇艺／腾讯视频／芒果TV／网易云音乐／天翼云盘／52破解论坛／精易论坛／乐易论坛：<a href="https://github.com/Dingugu/SCF_Sign">https://github.com/Dingugu/SCF_Sign</a><br>天翼云盘／最终幻想14／什么值得买／52破解论坛／网易云音乐／有道云笔记／V2EX／恩山论坛／智友邦：<a href="https://github.com/mengshouer/CheckinBox">https://github.com/mengshouer/CheckinBox</a><br>完美校园每日定时自动打卡：<a href="https://github.com/FNDHSTD/WanxiaoHealthyCheckOnTencentCloud">https://github.com/FNDHSTD/WanxiaoHealthyCheckOnTencentCloud</a><br>米游社原神签到：<a href="https://github.com/rainerosion/">https://github.com/rainerosion/</a></p>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>见习期考核个人总结</title>
      <link href="posts/4691.html"/>
      <url>posts/4691.html</url>
      
        <content type="html"><![CDATA[<p>  见习期结束之时，也正是我项目部正线轨道主体工程即将完成之时，从入职到目前也是我工作的第一年满期的时期，我们可以说得上是在这一年的时间里走过了一个较为完整的工程。见证了很多，让我对轨道工程的整个轨道工程多方面都有了一个较为完整的了解，从施工前期准备、前期施工、抢工期、到即将竣工完成，每一个阶段我们都积极参与其中，可以说这一年辛勤的努力换来的是我们硕果累累的收获，是我们打下坚实基础的一年，能够在以后的新工程中更快更好的融入其中，更加熟悉，更加了解我们的工作。</p><p>  这一年的工作，我们忙于施工生产，为保证完成施工生产顺利进行，不分黑白昼夜，不分节假日，积极投入到施工生产之中，在这期间我们也在不断的成长，这一年从懵懵懂懂的新手到每个人独立负责一块自己的责任田，这一转变的确是一个质的飞跃。我们工程部三个实习同事从刚入职连图纸都不能整体把握到如今每个人都能独立做好自己职责范围内的工作，用到了工程需要的地方，这一转变，是我们最直接的成长变化的结果。</p><p>  就我个人而言，这一年在工程部部门我主要工作负责如下：</p><p>1、 向公司、业主、监理、局指挥部、运营等汇报各类周、月报及产值完成情况。</p><p>2、 做工程量计量、混凝土方量等工程算量工作。</p><p>3、 向公司及业主汇报每日施工生产进度情况。</p><p>4、 收集项目各工点每日施工进度，绘制每日施工进度图，必要时绘制工期计划。</p><p>5、 给各个正线轨道施工作业面编制轨排组装技术交底。</p><p>6、检查检验批、编制及整理部门验收资料。</p><p>7、 完成领导或现场技术交办的其他工作等。</p><p>  我最主要、最重要的工作是作正线长达38km的轨排组装技术交底，也是我这一年探索最深的地方，也是学到东西最多的地方，截止正线轨道施工完成，轨排组装技术交底累计超1500张，这一数量的增长，也是我这一年的学习成长和经验累加的过程。在我的理解层次上，编制轨排组装技术交底的目的和作用主要在于三个方面：</p><p><strong>一、</strong> <strong>结合规范、设计要求和现场实际情况对道床板块、扣件、轨枕摆放、钢轨长度进行设计</strong></p><p>对即将需要施工的作业面，根据现场实际情况，结合规范及设计要求进行配轨，对每一组轨排做详细的技术交底，发放至各个基地提前预组轨排、加工钢筋，保证每一根钢轨长度、每一根轨枕、每一套扣件、每一块道床的布置、每一根钢筋放到正确的位置上，相当于是一个施工前的建模工作，确保符合轨道施工规范及设计要求，保证施工生产顺利进行。</p><p><strong>二、</strong> <strong>提前做好轨排组装、钢筋摆放，为施工现场提高施工生产效率</strong></p><p>配轨工作对施工生产最重要的一个目的就是在基地提前预判好轨排布置，提前加工好各类钢筋，将加工好的钢筋提前提前穿入组好的轨排中，对于特殊的曲线地段提前预算好钢轨缩短量，提前对钢轨进行锯轨，保证轨排对接合拢，减少现场施工工序，减少现场施工时间，极大提高施工生产效率。</p><p><strong>三、</strong> <strong>在设计要求许可前提下，控制物资用料，节约成本</strong></p><p>配轨还有一个重要的作用就是可以通过科学地结合现场桥梁、变形缝等结构实际情况，通过设计道床块布置、设计轨枕间距等方法节省轨枕、扣件甚至钢筋的用量，条件允许状态下，将短道床块合成一个长道床块，减少道床分块时间，减少扁铁及连接端子用量、控制物资用料，达到降低材料损耗率、节约成本的目的。</p><p>这一段配轨路程，也是我这一年最自豪最愿意总结的地方，从工程部实习期刚来的三个人一周时间共同完成300米配轨到我一个人在工期最紧张时期一天配出40组的最高记录，心里的的确确有很多感想和经验总结。最紧张的时期，是最考验我耐力和工作能力的时候，项目进入抢工期阶段，一个人最多同时负责过最多七八个工作面的轨排组装交底，又无法一时间找到其他人辅助的情况下，在保证轨排不出现技术问题的情况下，顺利地保证了施工现场的轨排供应，是我这一年里是我自己心中最引以为豪的地方。正线轨道全线39km，几乎我走过的每一根轨枕，每一块道床块都是有我在CAD图纸上触摸过的痕迹，这一长长的轨道都有我无形的参与，看到这些其实早已散去最艰难时期的憔悴，迎来的只有心中最充实的满足和成就感。如今正线抢工阶段即将接近尾声，但那些给我带来的回忆却让我记忆犹新，在抢工期阶段，如何保证量产又要保证质量，不仅仅需要超额的工作时间，还要保证在这么紧张的工作上不能出现差错，在这种情况下，不论现场如何紧张，最重要的是要确保自己内心的细心还在，心态要稳，不能慌张，确保不出现错误是最为重要的，因为在时间紧张的阶段出现错误代价是双倍的，不仅仅错了重新调整需要时间，后续的工作也会相应顺延。赶工期阶段，要确保任务按时完成，保证现场施工顺利进行，永远在和时间赛跑，这不仅仅是需要汗水和细心，就我而言也需要很多方法和操作技巧，把时间争取用到刀刃上，在这里不得不说，项目部领导用人的明智，根据个人特点和特长发配到各个不同种类的工作岗位中，正如自己，入职前钻研电脑的爱好被领导察觉，相对来说各类软件使用相对熟练，因此部长分配我进行配轨工作，项目部各类工程图绘制工作基本上都由我来绘制。也正是这些爱好，在抢工期时期，通过对各类软件、命令的应用，将繁琐的工作自动化，将争取的时间用到刀刃上，专注在轨道轨枕设计、道床块设计、扣件布置上，很好地做到了量产的同时，错误率压到极小值。</p><p>从图纸模板的设计、土建桥梁、地下线各类数据框架构建到CAD图上、配轨、导图出图、审核、做成网页电子版这一系列流程，最后形成1500张标准的技术交底图，在这上面花费了一年的心血，结合自己不断的经验积累和学习成果，尽求完美、尽力做好每一张技术交底图，做最实际、最详细、最通俗易懂、清晰明了的轨节表是我的目标。在这期间，起初我也遇到很多问题需要自己和部门领导提前沟通和解决，遇到许多可能存在的问题需要提前去现场实际测量，正是这些遇到各式各样的问题就是我学习的最好时期，不懂就问，不懂就思考，不懂就要去自己钻研，不懂就要多花时间，力求做到最好。最开始虽然配轨工作是我一个人编制，但是依旧少不了部门部长和主管的细心照顾，需要他们把控我做的每一处，每一张节表都需要他们的审核签字，遇到问题都需要寻求他们的帮助和指导，同时一些没有理解透彻的细节也需要自己研究，问问专业的同事，在这期间我也在测量这一方面寻求了许多帮助，理解测量专业，理解长短链、理解曲线各类要素、理解里程深层次的意义等等，这些对我配轨都有很重要的作用。当然还有一个重要的学习途径来源于现场，理论推断的正确有时候和现场实际的轨排铺设情况出现偏差，这一偏差的出现肯定是有原因的，这就需要实时跟进现场实际轨排架设的情况进行分析，向现场索取一些配轨需要的数据，做后面新出轨排的调整，必要时需要自己去现场实际丈量，这一个过程我认为是非常重要的，也是我能发现问题、能配合好现场最直接的手段。因为受轨排架设时天气温度、轨排架设时轨缝误差、钢轨精确长度参差不一、桥梁坡度等不可控的多方面因素影响，理论和实际轨排架设情况会难免存在偏差，有时同一批轨排长度过长，偏差也会出现较大误差的可能，这就需要每一次配轨前询问现场实际铺设情况，对下一批新轨排做适当调整，力求每一批轨排架设上不需要任何调整，保证同一批轨排长度过长时产生偏差时，偏差在可调节范围内。同时在情况允许的情况下同一批次轨排长度不宜出太长。因此我这一年下来总结出一句话，理论永远需要结合实际情况，用实际情况做理论判断。最令我满意的是，能在工期紧张的时期将全标段最困难的配轨区域，也就是三四线桥区域，在该地段不仅仅处于曲线地段，而且桥梁变形缝需要现场实际丈量，且梁缝倾斜，架上梁缝过度区域有特殊道床布置，配轨就是一个很困难的事情。最终能通过以往自己的积累和现场多次实际丈量进行配轨，左线全部顺利通过三四线桥区域，基本完全吻合现场实际情况。虽然在右线轨道铺设时中间由于测量问题出现一点偏差，后面经过及时重新调整，也同样顺利度过三四线桥区域。这一区域可以说得上是给我来了一个期末考试。由于时间紧张，这一过程也非常感谢现场技术的同事相互配合，提供现场实际准确数据，才让艰难的三四线桥区域顺利通过。</p><p> 虽是个人总结，但却无法简单通过一篇几千字的总结来写出我这一年的学习所得，很多东西更细节、更多的感悟、更多的学习心得我想有时间把它写成一篇经验总结。将自己这一年体会到的知识总结起来，更好的利用到以后的施工生产之中，把自己的经验和学习成果帮助到自己以后或者帮助到以后的同事中去。</p><p> 一路走来，能顺利地完成自己工作的这些时间里，能在短短的一年时间里学习和积累到这么多知识，离不开公司提供一个这么好的平台给我们发展的机会，给我们一个这么好的展示自己的平台，离不开项目部领导班子的细心照顾和指导，离不开部门部长、主管、同事的细心栽培，把我从一个懵懂的萌新快速地用到工作中去。忙忙碌碌的一年走过来，为施工生产顺利进行做贡献，花了很多时间，也学到很多东西，但很多时候会发现这一年下来学到很多，但还有很多需要继续去学习，学习成长的空间很大，这一年对我来说是打好基础的一年，以后的工作中也会将自己所学所得用到实际工作当中去。</p><ul><li>附件</li></ul><p>轨排组装技术交底图</p><p>金塘右线：<a href="https://sumsu.gitee.io/web/viewer.html?file=TJY.pdf">https://sumsu.gitee.io/web/viewer.html?file=TJY.pdf</a><br>金塘左线：<a href="https://sumsu.gitee.io/web/viewer.html?file=TJZ.pdf">https://sumsu.gitee.io/web/viewer.html?file=TJZ.pdf</a><br>塘综区间右线：<a href="https://sumsu.gitee.io/web/viewer.html?file=ZTY.pdf">https://sumsu.gitee.io/web/viewer.html?file=ZTY.pdf</a><br>塘综区间左线：<a href="https://sumsu.gitee.io/web/viewer.html?file=ZTZ.pdf">https://sumsu.gitee.io/web/viewer.html?file=ZTZ.pdf</a><br>综新区间右线：<a href="https://sumsu.gitee.io/web/viewer.html?file=ZXY.pdf">https://sumsu.gitee.io/web/viewer.html?file=ZXY.pdf</a><br>综新区间左线：<a href="https://sumsu.gitee.io/web/viewer.html?file=ZXZ.pdf">https://sumsu.gitee.io/web/viewer.html?file=ZXZ.pdf</a><br>新东区间右线：<a href="https://sumsu.gitee.io/web/viewer.html?file=XDY.pdf">https://sumsu.gitee.io/web/viewer.html?file=XDY.pdf</a><br>新东区间左线：<a href="https://sumsu.gitee.io/web/viewer.html?file=XDZ.pdf">https://sumsu.gitee.io/web/viewer.html?file=XDZ.pdf</a><br>东义区间右线：<a href="https://sumsu.gitee.io/web/viewer.html?file=DYY.pdf">https://sumsu.gitee.io/web/viewer.html?file=DYY.pdf</a><br>东义区间左线：<a href="https://sumsu.gitee.io/web/viewer.html?file=DYZ.pdf">https://sumsu.gitee.io/web/viewer.html?file=DYZ.pdf</a><br>东西出入段线：<a href="https://sumsu.gitee.io/web/viewer.html?file=CRX.pdf">https://sumsu.gitee.io/web/viewer.html?file=CRX.pdf</a><br>东华街岔区及站线：<a href="https://sumsu.gitee.io/web/viewer.html?file=DHJ.pdf">https://sumsu.gitee.io/web/viewer.html?file=DHJ.pdf</a></p>]]></content>
      
      
      <categories>
          
          <category> 土木工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Autohotkey应用之创建窗口最小最大化快捷键</title>
      <link href="posts/30dd.html"/>
      <url>posts/30dd.html</url>
      
        <content type="html"><![CDATA[<p>​        自己使用电脑，一般情况下都是通过快捷键快速呼出软件、切换软件的，通过快捷键操作电脑很大程度上可以提高工作效率。而电脑绝大多数功能都是有着自带的快捷键的，但是往往会有某些功能没有统一的快捷键，或者自带的快捷键方式操作不方便，这个时候Autohotkey软件就是解决这个问题的，简单地说，这款软件可以自定义任意你想设置的快捷键定制各类的功能，然后使用这一款软件需要一定的门槛。</p><p>​        本篇文章将制作一个最大最小化当前窗口功能的快捷键作为一个简单的入门演示。</p><h2 id="一、安装Autohotkey软件"><a href="#一、安装Autohotkey软件" class="headerlink" title="一、安装Autohotkey软件"></a>一、安装Autohotkey软件</h2><p>​        从<a href="https://www.autohotkey.com/">autohotkey官网下载</a> 安装包。双击安装。安装过程很简单,一直点下一步就好了(放心，不会给你什么全家桶)。安装好后就可以关闭安装窗口。</p><h2 id="二、创建脚本"><a href="#二、创建脚本" class="headerlink" title="二、创建脚本"></a>二、创建脚本</h2><p>随便找个目录,鼠标右键新建一个autohotkey的脚本。</p><p><img src="https://images.xmq.plus/image-20210702111218065.png" alt="image-20210702111218065"></p><p>右键选择编辑脚本（Edit Script），将里面的文本全部删除。然后将下列代码输入，保存。</p><pre><code class="line-numbers language-markdown">!Escape::    send, &#123;lwin down&#125;&#123;down&#125;    sleep 50    send, &#123;lwin up&#125;return;按下ALT + ESC ，将窗口最小化!`::    send, &#123;lwin down&#125;&#123;up&#125;    sleep 50    send, &#123;lwin up&#125;return;按下ALT + ` ，将窗口最大化</code></pre><p>然后右键Run Script运行，那么设置的快捷键就可以生效了。</p><h2 id="三、设置脚本开机自启动"><a href="#三、设置脚本开机自启动" class="headerlink" title="三、设置脚本开机自启动"></a>三、设置脚本开机自启动</h2><p>为了保证下次开机这个快捷键能生效，需要将这个脚本设置开机自启动。</p><p>win10中的这个文件夹可以在<code>C:\Users\用户名\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code>找到，创建AHK文件的快捷方式，然后把快捷方式剪切到这就行了。</p><h2 id="四、其他快捷键映射关系"><a href="#四、其他快捷键映射关系" class="headerlink" title="四、其他快捷键映射关系"></a>四、其他快捷键映射关系</h2><p>下面列出一些特殊键的映射关系,更多的请参考<a href="http://ahkcn.sourceforge.net/docs/Hotkeys.htm">官方文档</a>:</p><p><img src="https://images.xmq.plus/image-20210702112620646.png" alt="image-20210702112620646"></p><ul><li>参考应用</li></ul><p>1.<a href="https://blog.csdn.net/u013332124/article/details/80680038">autohotkey-windows快捷键设置神器</a></p><p>2.<a href="https://www.autohotkey.com/">autohotkey</a></p><p>3.<a href="https://www.autohotkey.com/docs/AutoHotkey.htm">autohotkey官方教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何实现PDF文件在线预览？</title>
      <link href="posts/c5a2.html"/>
      <url>posts/c5a2.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>平时办公或工作中，你是否会遇到一种情况？需要将自己做好的文件发给同事或工作群，而且每段时间这个文件内容都会更新一次，每一次更新，文件就需要重新发送一次。而人们需要用到你文件时可能需要从你之前发的很多文件里一个一个的去找。你会不会想到一个好的办法，将文件做成一个链接，每次内容更新，只需要打开这个链接就能在线浏览到包括之前的所有信息和并且下载。</p><p>将文件实现在线预览，这样的最大的好处在于：只需要一个固定的链接，不需要下载就能实时地看到包括之前的所有信息内容。能将平时每段时间更新的文件做一个整合，却不用因为每次更新积累而产生文件体积变大的烦恼。</p><h2 id="实现途径"><a href="#实现途径" class="headerlink" title="实现途径"></a>实现途径</h2><p>那么如何将自己的文件实现在线预览？对不同的情况其实有很多种方法，对同一种情况其实也有很多途径。关键在于自己的需求。</p><p>如需将WORD、EXCEL类文件实现在线预览甚至协同办公，可以使用石墨文档。这个不多说，操作也简单。</p><p>如仅需将自己的文件实现在线预览功能，可将转成PDF格式，可以使用现成的在线网站服务，如maiPDF，白鸽电子书直接上传自己的文件简单快速实现文件快速预览。</p><h2 id="gitee和PDF-js快速搭建PDF文件在线浏览功能"><a href="#gitee和PDF-js快速搭建PDF文件在线浏览功能" class="headerlink" title="gitee和PDF.js快速搭建PDF文件在线浏览功能"></a>gitee和PDF.js快速搭建PDF文件在线浏览功能</h2><p>今天我们介绍一种方法，借助网络资源，利用gitee和PDF.js自行制作一个网站链接，实现PDF文件在线预览，并且支持同步更新。至于为什么使用gitee和PDF.js搭配，是因为gitee在国内访问网站速度快且免费，pdf.js 是一个技术原型主要用于在 HTML5 平台上展示 PDF 文档，是功能比较成熟，功能齐全的PDF查看器代码资源，直接拿来就能使用的资源，直接利用起来就好了，不需要太懂，不需要太大黑匣子，只需要会用就好了对吧。就好比开车，你不需要了解车辆的内部结构，你只要会开它就好了，一样的道理。</p><p>自己制作的过程可能会相对其他方法来说稍微多一点步骤。但好处也是比较明显的：</p><ul><li>访问速度快。这一点是比较重要的，如果别人打开你链接需要的时间越长，使用舒适度就会很明显的降低。这就是为什么选用gitee做网络存储的重要选择，相比服务器，你也不需要自己维护，省事省money。</li><li>傻瓜式管理。一次配置好就可以直接使用。除了每次更新需要使用重复的几个命令外，其他都不需要管理。</li><li>能够保证文件安全，不易泄露。比较常常提供浏览的文件很多方面只限于内部查看，自行搭建，相对来说文件是自己能控制的，传输对象也是自己可控制的。相对来说是比较安全的。</li><li>无限制无广告。使用现有的网站或者链接提供的在线服务往往需要付费或者带有广告等内容，使用感受不是很好，通过自己搭建就不需要考虑这个问题了。自己想怎样就怎样！</li><li>自定义程度高。虽然自带的默认样式就已经中规中矩，功能也比较齐全了，看起来比较舒适，不需要修改就可以直接使用。同样，你要想做成自己想做成的样子，只要你愿意折腾，完全都可以做成你想要的样子。</li></ul><p>接下来教你如何快速搭建PDF文件在线预览。</p><h3 id="注册gitee账号并创建仓库"><a href="#注册gitee账号并创建仓库" class="headerlink" title="注册gitee账号并创建仓库"></a>注册gitee账号并创建仓库</h3><p>登录码云 <a href="https://gitee.com/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%8E%E8%87%AA%E5%B7%B1%E7%94%A8%E6%88%B7%E5%90%8D%E5%90%8C%E5%90%8D%E7%9A%84%E4%BB%93%E5%BA%93%EF%BC%8C%E6%AF%94%E5%A6%82%E6%88%91%E7%9A%84gitee%E8%B4%A6%E6%88%B7%E5%90%8D%E6%98%AFsumsu%EF%BC%8C%E9%82%A3%E4%B9%88%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAsumsu%E7%9A%84%E9%A1%B9%E7%9B%AE%EF%BC%8C%E8%BF%99%E6%A0%B7%E7%9A%84%E7%9B%AE%E7%9A%84%E6%98%AF%E4%B8%BA%E4%BA%86%E4%BD%BF%E7%94%A8giteepages%E6%9C%8D%E5%8A%A1%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF%E6%8B%BF%E8%BF%99%E4%B8%AA%E4%BB%93%E5%BA%93%E6%9D%A5%E5%81%9A%E7%BD%91%E9%A1%B5%E3%80%82">https://gitee.com/创建一个与自己用户名同名的仓库，比如我的gitee账户名是sumsu，那么创建一个sumsu的项目，这样的目的是为了使用giteepages服务，也就是拿这个仓库来做网页。</a></p><p>如果不会使用，可自行百度，方法简单，不过多叙述。</p><h3 id="生成SSH密钥"><a href="#生成SSH密钥" class="headerlink" title="生成SSH密钥"></a>生成SSH密钥</h3><p>在此之前，需要使用一个命令编辑器和git程序，如果没有的可以下载安装：<a href="https://visualstudio.microsoft.com/zh-hans/">visual studio code</a>、<a href="https://git-scm.com/">git</a></p><img src="https://images.xmq.plus/20201213221620.png" alt="VS code" style="zoom:50%;" /><p>下载中间这个蓝色的就好了。git点download就好了，下载完成后安装。</p><p>打开软件VS code，<kbd>ctrl</kbd>+<kbd>~</kbd>打开命令框，</p><pre><code class="line-numbers language-bash">$ ssh-keygen -t rsa -C &#39;你的邮箱&#39; -f ~/.ssh/gitee_id_rsa #邮箱使用gitee注册的邮箱</code></pre><p>三次回车，这里什么也不用填</p><p>在C:\Users\你的用户名.ssh目录下可以看见以.pub结尾的文件，在VS code中将此文件打开。复制所有内容，回到刚刚注册好的gitee账号页面，点击右上角头像-个人主页-SSH公钥-将内容粘贴到gitee公钥中。</p><img src="https://images.xmq.plus/20201213223721.png" alt="SSH" style="zoom:50%;" /><p>点击确定，完成。</p><p>最后可以使用命令测试是否连接成功：</p><pre><code class="line-numbers language-bash">$ ssh -T git@gitee.com    </code></pre><p><img src="https://images.xmq.plus/20201213223942.png" alt="successfully"></p><h3 id="连接远程仓库并上传代码文件"><a href="#连接远程仓库并上传代码文件" class="headerlink" title="连接远程仓库并上传代码文件"></a>连接远程仓库并上传代码文件</h3><p>Git 全局设置:</p><pre><code class="line-numbers language-bash">git config --global user.name &quot;用户名&quot;git config --global user.email &quot;你的邮箱&quot;</code></pre><p>创建 git 仓库:</p><pre><code class="line-numbers language-bash">mkdir PDF #选择一个路径创建一个名为‘PDF’文件夹，默认在Users/你的电脑用户名/中cd PDF #进入PDF文件夹中，就好像你双击文件夹进入一样git init #git 初始话PDF文件夹</code></pre><p>创建好文件夹后，将PDF.JS源码下载下来，全部解压后放入PDF文件夹中：</p><p>PDF.js下载地址：<a href="http://mozilla.github.io/pdf.js/getting_started/#download">PDF.js</a></p><p><img src="https://images.xmq.plus/20201213225754.png" alt="DOWNLOAD"></p><p>将下载完成的文件全部解压</p><p><img src="https://images.xmq.plus/20201213225402.png" alt="movetopdffolder"></p><p>将上述的文件移入你创建的PDF文件夹中。</p><p>现在只需要将你需要展示的PDF文件放入到web文件夹中，删除原有的PDF文件。（注意PDF文件名称最好不要有中文）</p><p>之后回到VS code中执行命令（必须将cd PDF到指定的文件夹下执行）：</p><pre><code class="line-numbers language-bash">git add * #git添加所有文件，准备上传git commit -m &quot;first commit&quot; #提交文件git remote add origin git@gitee.com:你的gitee用户名/你的gitee用户名.git #连接到gitee远程仓库git push -u origin master #上传你提交的文件</code></pre><p>回到gitee你创建的仓库中，点击服务-giteepages-更新部署。</p><p>之后打开链接：https://你的gitee用户名.gitee.io/web/viewer.html?file=你的pdf文件名.pdf</p><p>即可完成。</p><h3 id="更新PDF文件"><a href="#更新PDF文件" class="headerlink" title="更新PDF文件"></a>更新PDF文件</h3><p>之后每一次更新文件时，仅仅每次将web中的PDF文件替换，然后执行命令：</p><pre><code class="line-numbers language-bash">git add * #git添加所有文件，准备上传git commit -m &quot;xxx&quot; #提交文件git push -u origin master #上传你提交的文件</code></pre><p>回到gitee你创建的仓库中，点击服务-giteepages-更新部署即可。</p>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Excel在CAD中指定位置批量输入文本</title>
      <link href="posts/c0fc.html"/>
      <url>posts/c0fc.html</url>
      
        <content type="html"><![CDATA[<p>在工作或学习中，使用CAD的时候会经常有很多麻烦的重复性内容需要输入和调整，对于工作量大的工作内容，纯手动输入会比较麻烦，而且容易出错。然而往往这些操作我们可以借助Excel与CAD结合使用，提高效率。面对那些重复性操作的内容我们一般都可以借助这种方法一次性解决！</p><h2 id="实现原理："><a href="#实现原理：" class="headerlink" title="实现原理："></a>实现原理：</h2><p>将我们平时使用CAD的操作方式转换成命令行的形式。</p><p>例如在cad中（0,0）位置输入文本高度为10，正中对齐，内容为“示例文本”，并翻转90°</p><p>我们通常的操作是：</p><p>输入<code>TEXT</code>命令后空格，输入坐标<code>0,0</code>后空格确认，命令光标会显示输入文字高度，我们输入<code>10</code>并空格确认，输入<code>90</code>空格确认文本旋转90°，之后会显示文本输入光标，直接输入内容<code>示例文本</code>，回车即可。</p><p>现在我们就可以按照操作一步一步转换成一行命令：</p><p>-text 0,0 10 90 示例文本</p><p>转换好之后，这就是把之前的操作转换成一行命令了，接下来只需要将命令复制好，粘贴到CAD命令行下回车就可以立马完成操作。</p><p>由此，我们可以使用excel将我们的命令做成一行一行的代码，然后将所有的代码一次复制好之后粘贴到命令行就可以完成批量操作了！</p><p>下面展示如何利用Excel结合CAD软件批量将内容输入到CAD中的指定位置。CAD批量操作示例，可适用于所有重复批量输入CAD操作，减少工作量，提高效率。</p><h2 id="方法步骤"><a href="#方法步骤" class="headerlink" title="方法步骤"></a>方法步骤</h2><ol><li>首先需要熟悉text命令，命令行里输入text，回车后出现“指定文字的起点或【对正（J)/样式（S）】”，输入“j”;回车后出现对正选项，选择“c”;图中选取某一点后，出现“文字高度”选框；文字高度输入值后，出现“旋转角度”选框；输入角度后，即可输入文本</li><li>紧接着就是在excel里进行公示编辑。在单元格中输入=”text j c “&amp;坐标&amp;”  文字高度 文字角度 “&amp;”需要标注的文字”&amp;CHAR(13)。其中，文字高度、文字角度、需要标注的文字根据需要进行编写和引用，char（13）的意思是回车。有excel基础的看这个公式应该没什么问题。我选择一个我自己使用的excel的一个截图，大家可以参考。将命令粘贴到命令行后，即可一次性批量输入文字了。</li><li>在实际使用过程中，大家均可以现在cad中找出各个画图命令的步骤及选项，然后有针对性的在excel中进行公式批量编辑，编辑完成后再在cad中进行画图，可大大的提高工作效率</li></ol>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
            <tag> CAD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>防杂散电流设计原理及措施</title>
      <link href="posts/e60a.html"/>
      <url>posts/e60a.html</url>
      
        <content type="html"><![CDATA[<h1 id="防杂散电流设计原理及措施"><a href="#防杂散电流设计原理及措施" class="headerlink" title="防杂散电流设计原理及措施"></a>防杂散电流设计原理及措施</h1><blockquote><p>本标段整体道床钢筋网防杂散设计要求：</p><p>根据杂散电流专业要求，将整体道床内的纵向结构钢筋作为杂散电流收集网，收集网截面积在XX站-XX区间不小于6000mm²，在XX站-XX站区间不小于500，其余区间上、下行均不小于400mm²/线。被选做收集网的结构钢筋应均匀分布，以增加杂散电流的收集效果。</p><p>整体道床相邻两个变形缝之间的道床称为一个道床结构段，每个道床结构段内的道床钢筋应电气连续，即每个结构段内的纵向结构钢筋的搭接处必须焊接，塔接焊长度不小于钢筋直径的6倍，在塔接处对钢筋<strong>两面焊接</strong>，焊缝高度不小于6m。在每个道床结构段内，每隔5m（或小于5m）选一根横向结构钢筋与所交叉的所有纵向结构钢筋焊接。在垂直轨道下方，选钢轨正下方上表层二根纵向结构钢筋和所有的横向钢筋焊接。在整体道床结构段两侧端头部位（即靠近伸缩缝处）引出连接端子，用截面不小于50X8m的镀锌扁钢焊接成闭合圈，并和上下层及侧边交叉的所有纵向钢筋焊接。连接端子与侧边竖向镀锌扃锅焊接并<strong>竖向引出</strong>。连接端子与侧边竖向扁钢应进行可靠双面焊接，其焊接缝长度不小于6倍连接端子镀锌圆钢直径，焊缝厚不低于6m。</p><p><img src="https://images.xmq.plus/20201030170047.png" alt="杂散电流钢筋网布置方式"></p><p>沿线路方向，在每座车站有效站台端部、距车站有效站台端部150m位置，在道床结构收集网中引出1个测量端子，每线分别设置，制作方法与连接端子相同。并在行车方向左侧测量端子1米范围内，混凝土中预留参考电极安装孔，孔直径75土5m，深度185±5m在每个牵引所的车站每线设置1个排流端子，左右线设置2个排流端子，排流端子的位置根据牵引变电所位置以及电缆敷设出口位置确定防杂散电流连接端子、测量端子、排流端子均采用埋入式端子。<br>道床防杂散电流主收集网钢筋与车站、桥梁主体结构钢筋不得有电气连接或接触。<br>铺轨施工单位负责有关端子、参比电极安装孔等施工，相关端子与设备连接、参比电极安装由电气施工单位完成。</p></blockquote><blockquote><p>本标段高等减振道床底座板钢筋网铺设防杂散要求：</p><p>高架线梁面要控制钢筋位置，纵向钢筋与横向钢筋进行绑扎或焊接，底层钢筋从梁顶面预留钢筋中穿过，施工时若道床钢筋与梁面预埋筋有接触时，需采取绝缘措施隔离,以保证道床钢筋与梁面预埋钢筋在电气上应绝缘。  </p></blockquote><h2 id="杂散电流和杂散电流腐蚀"><a href="#杂散电流和杂散电流腐蚀" class="headerlink" title="杂散电流和杂散电流腐蚀"></a>杂散电流和杂散电流腐蚀</h2><p>城市轨道交通牵引供电系统是以列车走行为主要回流通路的直流供电系统，由于钢轨不可能长期完全绝缘于道床，特别是随着地铁的运营，道床受到污染，道床与钢轨之间的电阻日益减小，就不可避免有直流电流从钢轨漏泄至道床结构及车站、隧道、高架桥等其它结构和金属管线中，这些漏泄电流就称为杂散电流。当这些电流由金属构件进入混凝土、土壤等介质时，对金属结构、管线就产生电腐蚀，使其质量受到影响，该腐蚀称为杂散电流腐蚀。</p><p>杂散电流腐蚀的基本机理：地铁杂散电流对金属管线和机槭设备以及道床结构钢筋的腐蚀在本质上是电化学腐蚀，主要是由于轨道与道床绝缘性能不好，存在电子的流动形成对道床结构钢筋以及机械设备的腐蚀，杂散电流腐蚀是由于外部电源泄漏的电流作用而引起的。</p><h2 id="杂散电流防护措施"><a href="#杂散电流防护措施" class="headerlink" title="杂散电流防护措施"></a>杂散电流防护措施</h2><p>为了减少杂散电流和尽量避免杂散电流对地铁结构钢筋和管线的腐蚀及向地铁外扩散，采取了一系列放杂散电流措施：</p><ol><li>设立畅通的轨回流系统</li><li>正线走行轨绝缘安装</li><li><strong>道床内设置杂散电流主收集网</strong></li><li>利用地下隧道、高架桥和车站结构钢筋构成杂散电流辅助收集网</li></ol><ul><li>高架桥承轨台：道床杂散电流釆用立筋、横筋、纵筋、排流扁钢焊成一个连通的电路网，用与焊接的排流扁钢引岀承轨台，使道床各个承轨台的结构钢筋连通；</li><li>在桥梁缝隙处，排流扁钢断开，用排流端子（铜排）焊接于排流扁钢上，排流端子利用电缆连接，使形成通路；</li><li>在承轨台区段每隔100米设置一处镀锌的均压扁钢，将其左右承轨台上的排流扁钢横向连通；在轨下设12mm厚<strong>橡胶垫板</strong>（或12mm后<strong>复合垫板</strong>），在铁垫板下设5mm厚<strong>绝缘冲垫板</strong>，扣件与支承块间采用聚酰胺套管连接；道床顶面低于支承轨面30~40mm以避免扣件污染，提高轨道结构的绝缘性能，承轨台结构钢筋和支承块伸出钢筋不与桥面预埋钢筋相碰，保持距离2cm，如有接触应在相应钢筋上缠绝缘胶带或套橡胶管进行绝缘。</li><li>地下线及敞开段整体道床：在垂直钢轨下方的钢筋中，各选一根纵向结枃钢筋和所有的横向钢筋焊接，此纵向钢筋作为<strong>排流条</strong>；在每个道床结构段内，每隔4米选一根橫向钢筋与其交叉的所有纵向钢筋焊接，且上、下纵橫筋，立筋焊接成流通电路：道床结构缝两侧的结构段上引岀结构钢筋连接端子（即杂散电流主收集网连接端子），其结构缝两侧的连接端子采用连接端子（铜排）连接再用连接电缆将连接端子连通。</li></ul><h2 id="杂散电流防护的施工控制"><a href="#杂散电流防护的施工控制" class="headerlink" title="杂散电流防护的施工控制"></a>杂散电流防护的施工控制</h2><p>在整体道床现场施工中，在钢筋绑扎之前我们要对道床的桥面进行清洁处理，在桥面上存在很多杂质；有桥面的施工单位留下的废弃物，在这些废弃物当中很可能存在一些导电的枷物质，若是这些物质导电，使道床结构钢筋和桥面和桥面预埋钢筋接触形成导电使杂散电流进入桥体和预埋钢筋形成电子的流动来腐蚀道床和桥体，因此采用高压风或高压水，清理这些杂质保证道床结构钢筋下面干净。</p><blockquote><p>对应的施工工序为桥面清理（梁面清理）</p></blockquote><p>在钢筋绑扎完成后要在立筋、横筋、纵筋交叉部位进行焊接，以保证钢筋交叉部位更好地接触，在道床的每个承轨台中的，上下的纵向钢筋、横向钢筋应是电气连通，每处交叉地方进行焊接，采用双面焊接，并且焊缝高度不小于6毫米，连接上下层的立筋要与上下层钢筋进行焊接也要采用<strong>双面焊接</strong>，并且焊缝高度不小于6毫米：在绑扎和焊接完成后要在下层钢筋下面焊接排流扁钢把排流扁钢和下层钢筋焊接到一起，采用双面焊接，并且焊缝高度不小于6毫米，在排流扁钢搭接焊接时，搭接长度为150毫米，焊缝高度不小于6毫米，用排流扁钢把钢筋网连接成一体，并将排流端子（铜排）与排流扁钢焊接到一起，最后可以用电缆通过排流端子把承轨台连接起来使线路道床内钢筋成为一个电气化连接良好的整体。</p><p>在绑扎和焊接完成后要有专人来清理杂质，绑扎的铁丝、焊条头等废弃物清理干净，防止有导体将结构预埋钢筋和道床钢筋连接，防止杂散电流渗入桥体内部腐蚀桥体破坏结构清理完成后应要伃细检査，用眼睛看或手摸、尺孑量来检査结构预埋钢筋、道床钢筋、轨枕块伸出钢筋之间是否相碰接触，并保持距离2cm，如有接触应在相应钢筋上套橡胶管进行绝缘或撬动相应钢筋使其间距不小于2cm，之后用欧姆表来检查道床钢筋与结构预埋钢筋是否绝缘，绝缘阻值是否满足要求，若不满足要求要仔细检査找岀问题所在，排除问题，直至用仪器检査满足要求为止。为了保证单线的左右道床内结构钢筋接触良好杂散电流良好传输岀去，用均压扁钢，在高架桥上每隔100米在承轨台间隙位置，将纵向的排流扁钢进行焊接，其焊缝高度不小于6毫米，这样进一步保证了良好的把杂散电流从道床内传输出去。最后向监理报检，监理检査直至合格后，才能进行道床的混凝土浇注。</p>]]></content>
      
      
      <categories>
          
          <category> 土木工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 焊接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的文件云管理与多端同步方案</title>
      <link href="posts/96a6.html"/>
      <url>posts/96a6.html</url>
      
        <content type="html"><![CDATA[<p>是否害怕有一天自己电脑坏了，重要文件丢失？目前很多网络存储资源、传输通道的服务提供商，而且大都免费稳定，可以利用这些资源对自己的文件做好备份和同步，备份为了防止数据丢失，同步为了方便快速。</p><p>目的就在于：对文件做备份即使电脑坏了文件数据也无损失；切换工作平台，打开即可使用，数据也无需使用U盘拷贝复制，即可云端同步。</p><blockquote><p>备份与同步的区别在于：备份是对文件做简单的复制。同步是对文件实时更新，文件修改和增减就会在网盘同时修改、增减。备份主要用于对数据做一个副本存储，而同步主要用于文件多端工作时，随意切换工作平台，保证数据的一致性。</p></blockquote><p>于是制作了自己的云端存储同步方案：</p><h3 id="文件云同步备份类"><a href="#文件云同步备份类" class="headerlink" title="文件云同步备份类"></a>文件云同步备份类</h3><h4 id="1-使用QQ群做非重要文件临时存储"><a href="#1-使用QQ群做非重要文件临时存储" class="headerlink" title="1.使用QQ群做非重要文件临时存储"></a>1.使用QQ群做非重要文件临时存储</h4><p>工作和生活中肯定有不愿意保存的文件，留着没用又占地方，删除又害怕以后会用到。</p><p>这个时候我们可以创建一个只有自己的QQ群，将文件上传到QQ群进行备份，相当于给自己做了一个云端回收站</p><ul><li><p>优点：</p><ul><li><p>自带10G空间，过期的时间可选</p><p>可以选择10天后过期或永久保存，10G的空间做云端回收站已经很充足了</p></li><li><p>快速和方便</p><p>电脑端QQ群右键创建快捷方式到桌面，将文件拖至图标处即可上传至QQ群，完成后将本地删除即可。不需要像百度网盘、微云网盘一样还需打开网盘才能备份，QQ一般打开着，而且找文件也只需找到群即可</p></li><li><p>多端同步</p><p>手机端文件就像发QQ消息一样发送至自己的QQ群即可。既可以保证文件备份，也可以多端同步，非常方便。</p></li></ul></li></ul><h4 id="2-OneDrive网盘做多端同步及备份"><a href="#2-OneDrive网盘做多端同步及备份" class="headerlink" title="2.OneDrive网盘做多端同步及备份"></a>2.OneDrive网盘做多端同步及备份</h4><p>OneDrive网盘本身就是windows系统一个公司出来都产品，所以兼容性很好，同步功能异常强大。而且可以文件随选。OneDrive网盘适用于平时工作文件的备份和同步，方便好用。</p><p>对于经常需要换设备工作的用户通过OneDrive网盘实现无缝对接用起来真的很舒服，不需要换设备工作的用户同样可以使用到它，不仅是用于备份，还有一个文件历史版本功能，即可对不同时间内保存过的同一文件找到它对应的所有版本，这样电脑或文件在工作中途出现问题而不可恢复都时候，就可以使用这些功能找到你之前的文件，降低你的损失。</p><blockquote><p>文件随选：需要的文件可以从云端一键下载，不想放在本地的文件可以释放空间；如果是释放空间，那么只留下一个不占空间的快捷方式，数据保留在云端，以供需要时下载至本地。）</p></blockquote><ul><li><p>选择OneDrive的原因主要有两点：</p><ul><li><p>多端同步（非备份），更换设备文件能实时同步</p></li><li><p>文件随选。</p><p>暂时不用或长时间不用都文件可以放云端，本地端删除，腾出空间容量。而且操作非常方便，只需右键释放空间/始终在此设备上保留即可</p></li></ul></li><li><p>还有其他优点：</p><ul><li><p>便捷安静</p><p>打开onedrive即可自动对文件同步和上传，只要你的文件在OneDrive存储目录内，你每按一次<kbd>Ctrl</kbd>+<kbd>S</kbd>它都会自动同步上传，非常省心</p></li><li><p>国内上传速度快</p><p>上传速度很快，但是下载需要科学上网速度才会提上去。这是这个网盘唯一的弱点。</p></li><li><p>同步方面技术做得很好，文件相对有保证。</p></li></ul></li><li><p>其他注意：</p><ul><li><p>空间容量小</p><p>默认5G同步空间，淘宝两元扩容到30G永久空间，拼车office365版onedrive1TB容量，价格50~60元/年</p></li><li><p>Office365拼车获得1T Onedrive容量</p><p>通过拼车可获得Office的正版使用权，而且可以获得一年获得1T Onedrive容量，但是到期结束后，换车过程中，onedrive到期后的一个月空间容量不会减少，也不会文件丢失，如果不愿意继续续费的用户，数据文件在一个月内要做好备份；换车过程中，要想保证超出容量都数据不丢失，也应在一月之内上车。</p></li></ul></li></ul><h4 id="3-天翼云盘-百度网盘做大文件备份"><a href="#3-天翼云盘-百度网盘做大文件备份" class="headerlink" title="3.天翼云盘/百度网盘做大文件备份"></a>3.天翼云盘/百度网盘做大文件备份</h4><p>OneDrive用于平时使用的文件同步和备份，但是我们往往有一些不常使用、很大的文件或者重要文件需要多端备份（比如电影、视频、大量图片、重要的大文件等文件），放在Onedrive可能不合适，可以使用国内天翼网盘（创建家庭云空间获得大空间）或百度网盘做文件备份。</p><p>这类网盘的主要特点好在空间容量大，下载速度可能不是很快，但是我们是用于备份，这类文件一般不下载，但是又需要的这类文件很适合存在这类大容量且稳定都网盘中。同时这些是在国内的大品牌网盘，下载速度提升也比较容易。</p><ul><li><p>缺点：</p><ul><li><p>敏感文件可能会被限制，造成文件丢失的可能性，对于此类文件可转存至国外Google网盘等网盘</p></li><li><p>非百度网盘会员推荐使用天翼云文件备份，下载速度会快一点。不是百度网盘会员存在百度网盘上也可以使用第三方解析软件或网站将备份文件快速下载，也是可以的。</p></li></ul></li></ul><h3 id="笔记同步类"><a href="#笔记同步类" class="headerlink" title="笔记同步类"></a>笔记同步类</h3><h4 id="1-幕布做多端同步"><a href="#1-幕布做多端同步" class="headerlink" title="1.幕布做多端同步"></a>1.幕布做多端同步</h4><p>平时少不了做一些备忘录，临时记录，笔记等等。可能使用手机快速的做了笔记，然后在电脑端需要用到时，需要自动同步用起来就会很舒服了，强烈推荐使用幕布做一些生活工作中的临时记录和笔记。</p><ul><li><p>优点</p><ul><li><p>思维导图式结构，思维清晰</p></li><li><p>操作简单，做笔记高效</p></li><li><p>多端同步，同步能力强大</p><p>同步效果突出，电脑端和手机端同时打开，两端同时编辑，也能实时同步。</p></li><li><p>导出Word、思维导图、PDF多种格式</p></li></ul></li></ul><h4 id="2-QQ拼音做剪贴板云同步"><a href="#2-QQ拼音做剪贴板云同步" class="headerlink" title="2.QQ拼音做剪贴板云同步"></a>2.QQ拼音做剪贴板云同步</h4><p>有些文本和图像仅仅是临时性的，像手机或电脑端临时使用某段文本和图像使用幕布同步可能不太合适，还需要打开软件复制粘贴。可以使用QQ拼音云剪切板功能对琐碎文件快速同步，达到高效方便的目的。</p><p>如今电脑和手机需要联合使用的几率很高，尤其是复制某一段文字或图片，需要发到电脑端。正常的方式可能是通过QQ或微信文件助手传输，操作方式相对繁琐，中途一般需要切换程序，然后找到传输窗口，长按光标粘贴发送。可以使用QQ拼音，登录QQ账号后即可实现电脑端和手机端剪切板云端同步</p><h3 id="浏览器数据类"><a href="#浏览器数据类" class="headerlink" title="浏览器数据类"></a>浏览器数据类</h3><h4 id="谷歌浏览器做数据同步"><a href="#谷歌浏览器做数据同步" class="headerlink" title="谷歌浏览器做数据同步"></a>谷歌浏览器做数据同步</h4><p>用于书签、一般密码同步，登录谷歌账号，开启科学上网，一切皆同步。最好用的就是书签和密码都能同步，用起来非常方便</p><h3 id="隐私数据类"><a href="#隐私数据类" class="headerlink" title="隐私数据类"></a>隐私数据类</h3><h4 id="1-Mega网盘做个人隐私文件备份"><a href="#1-Mega网盘做个人隐私文件备份" class="headerlink" title="1.Mega网盘做个人隐私文件备份"></a>1.Mega网盘做个人隐私文件备份</h4><p>加密技术做得很好的一个国外网盘，因为加密机制，无法对文件进行审查，适合用于存储隐私（个人照片、敏感类数据）文件。空间容量虽然不会像国内百度网盘一样很大，一般注册会在50G左右的容量，很适合放个人隐私文件备份。</p><p>加密技术原理是：基于本地加密处理后上传至云端。而且软件开源，加密技术可靠。</p><h4 id="2-Kepass做重要账户密码存储"><a href="#2-Kepass做重要账户密码存储" class="headerlink" title="2.Kepass做重要账户密码存储"></a>2.Kepass做重要账户密码存储</h4><p>当然你可以放在Mega网盘中，只是放到Mega网盘中每次输入密码账号时，需要自己打开文件一个一个输入进去。无法自动填充密码等功能。kepass就是重要账户密码的管理工具，可以自动输入和填充账户和密码，使用方便。</p><ul><li>这个的软件的好处在于<ul><li>密码数据可以保存到本地，不上传到云端，也可以使用同步网盘将keepass生成的加密文件放入同步网盘中同步数据密码，实现多端同步。</li><li>支持账号密码自动填充，只需要记住打开keepass的打开密码，无需其他记住密码，即可自动填充输入。</li><li>多端同步</li></ul></li></ul><h3 id="临时大文件传输分享类"><a href="#临时大文件传输分享类" class="headerlink" title="临时大文件传输分享类"></a>临时大文件传输分享类</h3><h4 id="1-蓝奏云"><a href="#1-蓝奏云" class="headerlink" title="1.蓝奏云"></a>1.蓝奏云</h4><ul><li>下载速度无限制，速度非常快</li></ul><h4 id="2-QQ邮箱"><a href="#2-QQ邮箱" class="headerlink" title="2.QQ邮箱"></a>2.QQ邮箱</h4><ul><li><p>2G以内大文件分享 </p></li><li><p>下载速度无限制</p></li></ul><h4 id="3-文叔叔快传"><a href="#3-文叔叔快传" class="headerlink" title="3.文叔叔快传"></a>3.文叔叔快传</h4><ul><li>5G大文件分享，下载速度无限制</li></ul><h4 id="4-奶牛快传"><a href="#4-奶牛快传" class="headerlink" title="4.奶牛快传"></a>4.奶牛快传</h4><ul><li>下载速度无限制，速度快且稳定，2G以内分享</li></ul><h4 id="5-Tmplink"><a href="#5-Tmplink" class="headerlink" title="5.Tmplink"></a>5.Tmplink</h4><ul><li>10G大文件分享，没有上传及下载速度限制。</li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>某些需要科学上网，onedrive，mega网盘速度受梯子影响。</li><li>文中提到都容量都为基本容量，即免费容量，更多容量扩充详情，需自行尝试。</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><table><thead><tr><th>类别</th><th>用途</th><th>名称</th></tr></thead><tbody><tr><td>文件云同步备份类</td><td></td><td></td></tr><tr><td></td><td>临时文件回收站</td><td>QQ群文件</td></tr><tr><td></td><td>常用文件同步备份</td><td>OneDrive</td></tr><tr><td></td><td>大文件备份</td><td>天翼云盘、百度网盘</td></tr><tr><td>笔记同步类</td><td></td><td></td></tr><tr><td></td><td>文本笔记随写同步</td><td>幕布</td></tr><tr><td></td><td>琐碎文本多端同步</td><td>QQ拼音（云剪切板）</td></tr><tr><td>浏览器数据同步类</td><td></td><td></td></tr><tr><td></td><td>书签网站、一般密码及插件同步</td><td>谷歌浏览器</td></tr><tr><td>隐私数据类</td><td></td><td></td></tr><tr><td></td><td>重要账号密码存储</td><td>Keepass</td></tr><tr><td></td><td>隐私文件备份保存</td><td>Mega网盘</td></tr><tr><td>文件分享类</td><td></td><td></td></tr><tr><td></td><td>普通文件</td><td>微信QQ文件助手</td></tr><tr><td></td><td>≤100M长期分享文件</td><td>蓝奏云</td></tr><tr><td></td><td>单文件≤2G</td><td>QQ邮箱</td></tr><tr><td></td><td>单文件≤2G</td><td>奶牛快传</td></tr><tr><td></td><td>单文件≤5G</td><td>Tmp.link</td></tr><tr><td></td><td>单文件≤5G</td><td>文叔叔</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word免密解除限制编辑方法</title>
      <link href="posts/d980.html"/>
      <url>posts/d980.html</url>
      
        <content type="html"><![CDATA[<p>我们在工作和生活中，经常会接触到某些word文档被限制编辑，导致无法编辑和更改。教你如何在没有密码的情况下如何解除限制编辑。</p><p><img src="https://images.xmq.plus/image-20200922190300490.png" alt="文档被限制编辑"></p><p>1.打开Word文档，另存为<code>html</code>格式:</p><img src="https://images.xmq.plus/image-20200922190650359.png" alt="另存为Html格式" style="zoom: 67%;" /><p>2.关闭另存为的文档，并用记事本打开：</p><img src="https://images.xmq.plus/image-20200922190922368.png" alt="记事本打开" style="zoom: 67%;" /><p>3.使用组合键<kbd>Ctrl</kbd>+<kbd>F</kbd>查找<code>password</code>：</p><img src="https://images.xmq.plus/image-20200922191111296.png" alt="查找" style="zoom:67%;" /><p>4.将查找到的相应代码删除并保持即可：</p><img src="https://images.xmq.plus/image-20200922191310853.png" alt="删除" style="zoom:67%;" /><p>5.最后使用Word打开刚刚修改的html文件：</p><img src="https://images.xmq.plus/image-20200922191435947.png" alt="Word打开" style="zoom:67%;" /><p>现在就已经可以对文件进行编辑和修改了！</p><p>点击右下角“打印布局”选项即可恢复到Word排版：</p><img src="https://images.xmq.plus/image-20200922191922141.png" alt="打印布局" style="zoom:67%;" /><p>5.最后将文件另存为Word格式，并保存：</p><img src="https://images.xmq.plus/image-20200922191653895.png" alt="另存为Word" style="zoom:67%;" /><p>好了现在已经将限制编辑给消除了！你学到了吗！</p>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>台式机黑苹果硬件选择指南</title>
      <link href="posts/9b9a.html"/>
      <url>posts/9b9a.html</url>
      
        <content type="html"><![CDATA[<h1 id="台式机黑苹果硬件选择指南"><a href="#台式机黑苹果硬件选择指南" class="headerlink" title="台式机黑苹果硬件选择指南"></a>台式机黑苹果硬件选择指南</h1><p>要剪视频、音频或者编程的同学，macbook pro的硬盘或配置实在捉襟见肘，还有一部分人想体验Mac OS 又感觉 MAC 太贵，那么就组一台黑苹果来使用吧。组装一台自己心仪的黑苹果机器，硬件选择很重要。下面来聊聊黑苹果配置的挑选方法。首先是<a href="https://www.tonymacx86.com/">https://www.tonymacx86.com/</a>，算最权威的黑苹果网站了吧，上面有推荐的黑苹果配置，点击 Buyer’s Guide 就能看到，目前推荐的都是8，9系CPU和300系主板了，如果需要更老的配置推荐可以点下面的超链接。</p><img src="https://images.xmq.plus/image-20200921145727947.png" alt="tonymacx86" style="zoom:50%;" /><p>黑苹果的难点就在驱动，所以选好配件基本就完成了一大半，有的配件是无法完美驱动的，下面来简单聊聊怎么挑选配件。</p><h2 id="CPU选型"><a href="#CPU选型" class="headerlink" title="CPU选型:"></a>CPU选型:</h2><p><strong>Inter cpu</strong></p><p>想要比较方便黑苹果的只推荐intel的CPU。酷睿系列CPU：i3，i5，i7，i9都支持安装，但是4代以下的Cpu已经是很老了，性能差，要是老电脑想安装也可以，比较麻烦。如果你是准备打算买黑苹电脑，那建议你买6代以上的Cpu。奔腾赛扬系列Cpu：能安装但要仿冒CPUID，不建议新手安装。服务器志强系列Cpu：E3，E5都能安装，但是要开启硬件加速得搭配ADM vega显卡。另外如果有FinalCutPro需求的话，强烈推荐带核显的版本，不要选新出的后缀为F的无核显9代CPU，原因是intel的qsv加速对h264和h265编码的素材剪辑会有非常好的加速效果，输出也是。新机一般使用i5-8400、i7-8700就够用了，再高配置的土豪请随意，只要Intel主流处理器都可以轻松安装的。目前散片价格和盒装价格比差价还好，自己取舍吧。</p><p><strong>AMD cpu</strong></p><p>此类cpu支持不是很好，目前能安装的CPU只有AMD锐龙Ryzen系列，其他的不支持，安装也是比较复杂。</p><h2 id="主板选择："><a href="#主板选择：" class="headerlink" title="主板选择："></a>主板选择：</h2><p>目前比较普遍也最好的是一些苹果原生支持NVRAM的主板（例如：Z370，X299等）但并不说其他主板或平台不行，只是后期在完善上不如这些原生支持的板子（例如Z390只能模拟NVRAM）。目前tonymacx86推荐的主要是Z390少量的Z370和H370。黑苹果中主板是至关重要的，虽然这些都比B360和H310贵一些，但是建议还是首选Z390和Z370，Z370的性价比比较高，当然高配置的X299也是支持的。华硕、技嘉、微星三大家的主板都不错的，可以结合自己的需求，主要看下对PCIE扩展，M2插槽以及USB接口的需求吧。技嘉的z370 hd3p是我的选择，目前我也没有超频需求。</p><h2 id="显卡选择："><a href="#显卡选择：" class="headerlink" title="显卡选择："></a>显卡选择：</h2><p>显卡需要考虑的问题会复杂一点，如果不求新，那么配合英伟达WebDriver可以在10.13.6下版本轻松驱动英伟达独立显卡（即N卡），如GTX1050、GTX1080等帕斯卡的显卡，最新一代的如1066、2060等采用图灵架构，目前黑苹果下无解。安装黑苹果尽量选择ADM免驱的型号，具体哪些型号支持，看下图！</p><p><img src="https://images.xmq.plus/%E6%98%BE%E5%8D%A1%E6%94%AF%E6%8C%81%E5%88%97%E8%A1%A8.png" alt="显卡支持列表"></p><p>在Mojave、Catalina下，只有Vega架构的独显是真正免驱的，其他独显都需要搭配集显HD630/UHD630才能硬件加速。这样的话首选蓝宝石/微星的Vega56，性价比最高。其他免驱显卡也可以，CPU是8系带核显的话。RX590/580/570以及最新的RX5000系列如RX5500、5700等，这些都可以。</p><h2 id="无线网卡及蓝牙"><a href="#无线网卡及蓝牙" class="headerlink" title="无线网卡及蓝牙"></a>无线网卡及蓝牙</h2><p>关于网卡和蓝牙，这个如果不免驱，那么驱动几乎是无解的，淘宝上有不少黑苹果免驱的无线网卡，比如博通BCM94360、高通AR5BXB72等双频千兆网卡都是不错的选择，如果觉得太贵，那还可以入手可以驱动的USB网卡，如COMFAST、EDIMAX等等，但是使用USB网卡会舍弃一个USB接口以及蓝牙功能，当然没这方需求的可以忽略。关于有线网卡这里就不提了，市面上几乎所有有线网卡都可以驱动，且都是板载的，选了主板就没得选了。</p><h2 id="硬盘选择："><a href="#硬盘选择：" class="headerlink" title="硬盘选择："></a>硬盘选择：</h2><p>关于硬盘选择极力推荐大家使用固态硬盘，因为新的Mac OS 的 APFS格式专为固态优化，并且固态的性能也比机械强出很多，当然只做数据存储的话，还是机械硬盘划算很多。对于固态硬盘，Nvme SSD选择三星、惠普、金士顿之类的都不会有什么问题。注意三星散装OEM版本的PM981(MZVLB)是有问题的，不能作为安装盘。SATA口的硬盘就随意了。</p><h2 id="内存、电源选择："><a href="#内存、电源选择：" class="headerlink" title="内存、电源选择："></a>内存、电源选择：</h2><p>内存和电源也没有什么需要特别注意的，仁者见仁智者见智，大家根据自己的喜欢搭配即可。</p><h2 id="显示器选择："><a href="#显示器选择：" class="headerlink" title="显示器选择："></a>显示器选择：</h2><p>显示器强烈推荐4K及以上分辨率，并且支持DP，只有高分辨率才能体现出mac系统的优势，而且4K显示器也不贵了的。</p><h2 id="引用参考："><a href="#引用参考：" class="headerlink" title="引用参考："></a>引用参考：</h2><ul><li><a href="https://macx.top/">苹果地带</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>联想Y7000黑苹果安装记录</title>
      <link href="posts/4dd.html"/>
      <url>posts/4dd.html</url>
      
        <content type="html"><![CDATA[<p>安装黑苹果系统与安装一般系统（Windows）的不同在于，多了一个EFI制作的过程。怎么制作EFI自己的EFI，这个需要很大的时间和精力学习，安装黑苹果的技术难点就在于制作完美的EFI，而现在一般很多的电脑型号都已经在网上可以找到完美的EFI了。所以，不需要再重新做EFI，只需要找到自己电脑型号对应的EFI替换，就可以成功安装上黑苹果。想要找到自己合适的EFI和镜像，可以参照:</p><p><a href="https://blog.daliansky.net/Hackintosh-long-term-maintenance-model-checklist.html">Hackintosh黑苹果长期维护机型整理清单</a></p><p>安装过程：</p><p>下载黑苹果安装镜像 → 刻录到U盘 → 调整配置文件（EFI） → 格式化准备好的硬盘 → 重启修改BIOS设置 → 使用U盘引导 → 安装黑苹果到目标硬盘 → 进入系统后调试；</p><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><p>配置清单：</p><blockquote><p>主板： 品牌 Lenovo 属于Lenovo Legion Y7000 2019 1050系列 ，型号 LNVNB161216 ， 序列号 PF16WKXB ， Bios版本BTCN11WW</p><p>CPU：Intel(R) Core(TM) i5-9300H CPU @ 2.40GHz</p><p>显卡： 1 Intel(R) UHD Graphics 630 1G， 2 NVIDIA GeForce GTX 1050  (3 GB)</p><p>内存： 8 GB DDR4-2666 DDR4 </p><p>声卡：Realtek ALC236 @ Intel Cannon Lake PCH - cAVS (Audio, Voice, Speech)</p><p>网卡： 1 品牌  Intel Wireless-AC 9560 160MHz Wireless Network Adapter    PCI 2品牌 Realtek RTL8168/8111 PCI-E Gigabit Ethernet Adapter    PCI</p><p>主硬盘：1名称 SAMSUNG MZVLB256HBHQ-000L2  (256 GB, PCI-E 3.0 x4) 2名称 CT240BX500SSD1  (240 GB, SATA-III)</p><p>电池：品牌 L17M3PG3，序列号 7701</p></blockquote><p>Mac OS镜像下载：</p><p>[MacOS Catalina 10.15.6(19G73) Installer for Clover 5119 and WEPE.dmg](<a href="https://mirrors.dtops.cc/iso/MacOS/daliansky_macos/macOS">https://mirrors.dtops.cc/iso/MacOS/daliansky_macos/macOS</a> Catalina 10.15.6(19G73) Installer for Clover 5119 and WEPE.dmg)</p><blockquote><p>更多镜像下载及教程：<a href="https://blog.daliansky.net/">黑果小兵</a></p></blockquote><p>定制EFI下载：</p><p><a href="https://pan.baidu.com/s/17mybw-won9zxXB8ZEVmWgg">Clover版本_5122</a>（提取码：1234）</p><blockquote><p>更多EFI：<a href="https://blog.daliansky.net/Hackintosh-long-term-maintenance-model-checklist.html">Hackintosh黑苹果长期维护机型整理清单</a></p></blockquote><p>刻录工具（选一个即可）：</p><p>Etcher：<a href="https://www.balena.io/etcher/">官网下载</a>、<a href="https://pan.baidu.com/s/1Rz79SWaDjaqfvWLBrBB0RQ">网盘下载</a>（提取码：1234）</p><p>TransMac：<a href="https://pan.baidu.com/s/11_DAKz3ePrYV6Jn66Z1cRw">网盘下载</a>（提取码：1234）</p><p>U盘：</p><p>一个8G以上的U盘（安装 10.15 Catalina 必须要16G及以上的U盘 ）</p><p>分区工具：</p><p><a href="https://www.diskgenius.cn/">DiskGenius</a></p><p>引导工区:</p><p>EasyUEFI：<a href="https://www.easyuefi.com/index-cn.html">官网下载</a>、<a href="https://pan.baidu.com/s/1dUqJ9U6oRwD8ACx3-DTg_A">网盘下载</a>(提取码：1234)</p><p><img src="https://images.xmq.plus/image-20200920220206793.png" alt="image-20200920220206793"></p><h2 id="二、制作启动U盘"><a href="#二、制作启动U盘" class="headerlink" title="二、制作启动U盘"></a>二、制作启动U盘</h2><p>1、将您的U盘插入电脑，为保证成功，首先将U盘以默认值格式化一次；</p><img src="https://images.xmq.plus/1572623875-02b313804e4d4b8.png" alt="img" style="zoom:50%;" /><p>2.打开balenaEtcher软件，点击“Select image”选择你刚才下载好的安装镜像；</p><img src="https://images.xmq.plus/image-20200920221814763.png" alt="image-20200920221814763" style="zoom: 50%;" /><p>打开balenaEtcher软件</p><img src="https://images.xmq.plus/193d9e21790e35.png" alt="img" style="zoom:50%;" /><p>选择下载好的安装镜像</p><p>3.然后点击“Select drive”选择你的U盘，如果你直插有一个U盘，软件会自动选择；</p><img src="https://images.xmq.plus/13f9521bf77ec3.png" alt="img" style="zoom:50%;" /><p>4.接着点击“Flsh！”开始刻录黑苹果安装镜像到U盘；</p><img src="https://images.xmq.plus/19845e572f3f06.png" alt="img" style="zoom:50%;" /><p>刻录中。。。</p><p>5.刻录完成后会进行一次完整性检测；</p><img src="https://images.xmq.plus/1657953be28400.png" alt="img" style="zoom:50%;" /><p>检测中。。。</p><p>6.等到提示“Flash Complete！”Successful device 就完成安装镜像的制作了，把U盘弹出并拔出。</p><img src="https://images.xmq.plus/17e850115e328c.png" alt="img" style="zoom:50%;" /><p>7.至此，黑苹果镜像就刻录完成！</p><h2 id="三、配置四叶草引导驱动"><a href="#三、配置四叶草引导驱动" class="headerlink" title="三、配置四叶草引导驱动"></a>三、配置四叶草引导驱动</h2><p>1.打开分区工具DiskGenius，找到U盘上的ESP（有的叫EFI）分区，删除自带的EFI文件。</p><img src="https://images.xmq.plus/1572625228-2edcfa5dfc8c073.png" alt="img" style="zoom:50%;" /><p>2.把适合自己电脑EFI文件夹复制进去。这里只能用快捷键粘贴，Ctri+C复制，Ctrl+V粘贴。</p><img src="https://images.xmq.plus/1572625302-7a4493b1cb12969.png" alt="img" style="zoom: 33%;" /><h2 id="四、制作Mac系统盘"><a href="#四、制作Mac系统盘" class="headerlink" title="四、制作Mac系统盘"></a>四、制作Mac系统盘</h2><p>制作Mac系统盘分为分区安装与整个磁盘安装两种情况，其实大同小异，但问的人很多，这里就都讲一下。分区安装的意思就是我一块磁盘几个分区中的一个用来装Mac系统，跟Windows系统的C盘D盘一样，数据互不影响。整个磁盘安装就是我一整块磁盘都用来装Mac系统，我个人建议，有条件的还是选整个磁盘安装。</p><h4 id="1-分区安装"><a href="#1-分区安装" class="headerlink" title="1.分区安装"></a>1.分区安装</h4><p>a.计算机右键&gt;管理&gt;磁盘管理</p><img src="https://images.xmq.plus/1572625945-3ca50f1c06e7081.png" alt="img" style="zoom: 50%;" /><img src="https://images.xmq.plus/1572659230-43d47a027f54748.png" alt="img" style="zoom: 25%;" /><p>b.首先检查磁盘是否符合要求，磁盘格式必须为GPT格式(GUID)，即右键这个磁盘，“转换为MRB磁盘”为灰色就是GPT格式。</p><img src="https://images.xmq.plus/1572659304-3888d85186c75f2.png" alt="img" style="zoom:25%;" /><p>c.另外磁盘不能有小于200M的分区且必须有EFI分区（EFI分区也必须大于200M），满足这两个基本条件后，右键压缩卷（用分区工具查看）。</p><img src="https://images.xmq.plus/1572659456-de659357aeb88ef.png" alt="img" style="zoom: 33%;" /><p>d.输入压缩大小，根据自己情况及要求输入，最小25G。</p><img src="https://macx.top/wp-content/uploads//2019/11/1572659574-2592ce575c4fe22.png" alt="img" style="zoom:33%;" /><p>e.接下来选中被压缩的分区，右键新建简单卷。</p><img src="https://images.xmq.plus/1572659653-73c76778d8b5db0.png" alt="img" style="zoom:33%;" /><p>f.然后就一路默认下一步，但注意有一项要选择“<strong>不要格式化这个卷</strong>”；</p><img src="https://images.xmq.plus/1572659723-7067d654274b86c.png" alt="img" style="zoom: 50%;" /><p>g.一路默认下一步即可；</p><img src="https://images.xmq.plus/1572659796-47cf26e2b4ea4f7.png" alt="img" style="zoom: 50%;" /><img src="https://images.xmq.plus/1572659994-feb03d38827cc93.png" alt="img" style="zoom:50%;" /><p><strong>注意</strong>：这一步必须要选“不要格式化这个卷”；</p><img src="https://images.xmq.plus/1572659901-cf9a45db0af4415.png" alt="img" style="zoom:50%;" /><p>h.继续默认下一步直至完成；</p><img src="https://images.xmq.plus/1572660037-3a3ebc2010e4b1e.png" alt="img" style="zoom:50%;" /><p>I.最终结果是这样的：</p><img src="https://images.xmq.plus/image-20200921112912765.png" alt="image-20200921112912765" style="zoom:50%;" /><h4 id="2-整个硬盘安装"><a href="#2-整个硬盘安装" class="headerlink" title="2.整个硬盘安装"></a>2.整个硬盘安装</h4><p>a.整个磁盘只装mac系统，那就删除磁盘所有分区，变成一个全新的磁盘即可。如下图：</p><img src="https://images.xmq.plus/image-20200921112934567.png" alt="image-20200921112934567" style="zoom:50%;" /><p>b.在系统磁盘管理中会显示未分配：</p><img src="https://images.xmq.plus/image-20200921112949980.png" alt="image-20200921112949980" style="zoom:50%;" /><p>至此安装盘搞定，黑苹果完成了85%。</p><h2 id="五、安装Mac系统"><a href="#五、安装Mac系统" class="headerlink" title="五、安装Mac系统"></a>五、安装Mac系统</h2><p>1.设置BIOS，重启按F2用U盘进BIOS（电脑不一样，按键也不一样，就看自己电脑型号）;</p><img src="https://images.xmq.plus/image-20200921113011575.png" alt="image-20200921113011575" style="zoom:50%;" /><p>2.首先设置硬盘模式为AHCI，否则会出现磁盘工具读不到内置硬盘的情况（即找不到自己做的苹果安装盘）；</p><img src="https://images.xmq.plus/image-20200921113051359.png" alt="image-20200921113051359" style="zoom:50%;" /><p>3.然后关闭安全启动Secure Boot或者选择其他操作系统（这是微软为了防止安装Windows操作系统的电脑改装linux而设置的，不关闭无法启动到四叶草）；</p><img src="https://images.xmq.plus/image-20200921113110572.png" alt="image-20200921113110572" style="zoom:50%;" /><p>4.打开UEFI引导模式；</p><img src="https://images.xmq.plus/image-20200921113124754.png" alt="image-20200921113124754" style="zoom:50%;" /><p>5.第一启动项选择自己刻录好的U盘，EUFI+U盘名称；</p><img src="https://macx.top/wp-content/uploads//2019/11/1572661024-d17bcc6b1325ddf.png" alt="img" style="zoom: 33%;" /><p>6.保存重启，进入四叶草引导界面；</p><img src="https://images.xmq.plus/image-20200921113136468.png" alt="image-20200921113136468" style="zoom: 50%;" /><p>7.进入clover到四叶草界面后，选择Boot MacOS install from install macOS Catalina，并回车进入；</p><img src="https://images.xmq.plus/image-20200921113152205.png" alt="image-20200921113152205" style="zoom:50%;" /><p>8.过一会儿会进入如下界面;</p><img src="https://images.xmq.plus/image-20200921113214100.png" alt="image-20200921113214100" style="zoom:50%;" /><p>9.跑完代码或进度条之后进入安装界面，先选择磁盘工具；</p><img src="https://images.xmq.plus/image-20200921113245458.png" alt="image-20200921113245458" style="zoom:50%;" /><p>10.选中自己做的Mac系统盘，一般名字颜色比较浅，灰色的那个（看清楚千万不要选错）；</p><img src="https://images.xmq.plus/image-20200921113303208.png" alt="image-20200921113303208" style="zoom:50%;" /><p>11.然后抹掉磁盘，名字随便输，格式按固态硬盘选APFS格式，机械硬盘选扩展日志式；</p><img src="https://images.xmq.plus/image-20200921113335497.png" alt="image-20200921113335497" style="zoom:67%;" /><p>摸盘时格式推荐（可自行选择）</p><img src="https://images.xmq.plus/image-20200921113347867.png" alt="image-20200921113347867" style="zoom:50%;" /><p><strong>提示：</strong>如果摸盘失败，提示空间不足，就是你的磁盘格式没处理好，重新进win修改格式；</p><blockquote><p>安装系统时抹盘失败、分区时发现自己的磁盘没有EFI分区？</p><p>黑苹果抹盘要求：</p><p>1.磁盘格式必须为GUID格式</p><p>2.磁盘必须有EFI分区，且大于200M</p></blockquote><p>12.抹掉磁盘之后，关闭“磁盘工具”，选择“安装MAC OS ”;</p><img src="https://images.xmq.plus/image-20200921114021745.png" alt="image-20200921114021745" style="zoom:67%;" /><p>14.然后找到自己刚刚摸掉的那个盘，选中后安装！</p><img src="https://images.xmq.plus/image-20200921114042988.png" alt="image-20200921114042988" style="zoom:50%;" /><p>一路同意默认下一步即可；</p><img src="https://images.xmq.plus/image-20200921114220819.png" alt="image-20200921114220819" style="zoom:50%;" /><p>第一次安装界面：</p><img src="https://images.xmq.plus/image-20200921114318274.png" alt="image-20200921114318274" style="zoom:50%;" /><p>14.第一次安装完后会重启，重启还是选U盘启动，进入四叶草选择Boot MacOS from X，（X你刚刚抹掉的那个安装盘的名字）过一会儿会进入正式安装界。</p><img src="https://images.xmq.plus/image-20200921114412059.png" alt="image-20200921114412059" style="zoom:50%;" /><p>二次安装界面：</p><img src="https://images.xmq.plus/image-20200921114431498.png" alt="image-20200921114431498" style="zoom: 67%;" /><p>16.二次安装完，黑苹果就安装到你的硬盘了，重启后还是选U盘启动，进入四叶草选择 X（你抹掉磁盘的名字），进入苹果系统；</p><img src="https://images.xmq.plus/image-20200921114446776.png" alt="image-20200921114446776" style="zoom:67%;" /><p>17.设置好账户密码等，就可以进入桌面了；</p><img src="https://images.xmq.plus/image-20200921114457131.png" alt="image-20200921114457131" style="zoom:67%;" /><p>18.Mac系统桌面以及启动台展示；</p><p><img src="https://images.xmq.plus/image-20200921114821564.png" alt="image-20200921114821564"></p><p><img src="https://images.xmq.plus/1572664661-f5e72326b5c2748.png" alt="img"></p><h2 id="六、更改硬盘启动"><a href="#六、更改硬盘启动" class="headerlink" title="六、更改硬盘启动"></a>六、更改硬盘启动</h2><p>1.打开分区工具，把刚刚的EFI文件夹里的clover文件夹拷贝到硬盘的ESP分区（有的显示“EFI”，操作跟之前一样，用快捷键拷贝）；</p><img src="https://images.xmq.plus/image-20200921114953700.png" alt="image-20200921114953700" style="zoom:67%;" /><p>2.安装EasyUEFI引导工具(win要GPT引导模式，否则会报错或者无引导项)；</p><img src="https://images.xmq.plus/image-20200921115013663.png" alt="image-20200921115013663" style="zoom:50%;" /><p>3.装完之后，打开主界面，管理EFI启动项；</p><img src="https://images.xmq.plus/image-20200921115044324.png" alt="image-20200921115044324" style="zoom:50%;" /><p>4.进入管理界面后，点击 “**+**”，新建引导项；</p><img src="https://images.xmq.plus/1572662505-f85ca02c101bf7d.jpg" alt="img" style="zoom:50%;" /><p>5.类型选择Linux或其他操作系统；</p><img src="https://images.xmq.plus/1572662517-a5696c34cfa7335.png" alt="img" style="zoom:50%;" /><p>6.描述，即新建引导项的名字，自己随便输，我这里输入的“CLOVER”（注意英文输入法输入）；</p><img src="https://images.xmq.plus/1572662520-c4d10059c16ce61.png" alt="img" style="zoom:50%;" /><p>7.选择目标分区，选中自己硬盘的ESP分区,即刚才拷贝EFI文件的分区，然后点浏览，进行下一步；</p><img src="https://images.xmq.plus/1572662509-370b9de4b0b9f85.png" alt="img" style="zoom:50%;" /><p>8.找到EFI/CLOVER/文件夹下的 CLOVERX64.efi 启动文件；</p><img src="https://images.xmq.plus/1572662506-96fc2600613b93e.png" alt="img" style="zoom:50%;" /><p>9.选中后确定，完成新建引导项；</p><img src="https://images.xmq.plus/1572662497-2408b091b750970.png" alt="img" style="zoom:50%;" /><p>10.然后调节新建的引导项为第一启动项；</p><img src="https://images.xmq.plus/1572662500-53e87993038ac29.png" alt="img" style="zoom:50%;" /><p>11.最终，硬盘引导修改完成，以后可以拔掉U盘启动mac系统了；</p><img src="https://images.xmq.plus/1572662530-7c5554fb5d15b90.png" alt="img" style="zoom:50%;" /><p>至此黑苹果安装教程写完，祝各位尽早吃上黑苹果！</p><p>配上Mac与PC端键盘布局对比图：</p><p><img src="https://images.xmq.plus/image-20200921115343428.png" alt="键盘布局对比图"></p><h2 id="七、参考引用："><a href="#七、参考引用：" class="headerlink" title="七、参考引用："></a>七、参考引用：</h2><ul><li><a href="https://mp.weixin.qq.com/s/TpTFZpy8zoBDoT72FmMaMg">黑苹果从入门到精通：小白指南</a></li><li><a href="https://blog.daliansky.net/Hackintosh-long-term-maintenance-model-checklist.html">Hackintosh黑苹果长期维护机型整理清单</a></li><li><a href="https://blog.daliansky.net/">黑果小兵</a></li><li><a href="https://macx.top/">苹果地带</a></li><li><a href="https://macx.top/5673.html">原版黑苹果安装教程</a></li><li><a href="https://b23.tv/WYUSQT">黑苹果视频教程</a></li><li><a href="https://space.bilibili.com/188733433">联想Y7000系列黑苹果视频教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows端三款快速启动工具</title>
      <link href="posts/4e8a.html"/>
      <url>posts/4e8a.html</url>
      
        <content type="html"><![CDATA[<h1 id="Windows端三款快速启动工具"><a href="#Windows端三款快速启动工具" class="headerlink" title="Windows端三款快速启动工具"></a>Windows端三款快速启动工具</h1><p>三款启动工具下载地址：<a href="https://xmq.plus/windows">下载地址</a></p><h2 id="一、Wox"><a href="#一、Wox" class="headerlink" title="一、Wox"></a>一、Wox</h2><img src="https://images.xmq.plus/20200914135826.png" alt="Wox" style="zoom: 50%;" /><p>优点：</p><ul><li><p>功能多，良好的扩展能力</p><p>不局限于搜索应用，还可以网页搜索、充当计算器、搜索文件、搜索控制面板功能、使用命令行、快速打开收藏的文件夹、甚至还可搜索浏览器中书签网站</p><img src="https://images.xmq.plus/20200914114421.png" alt="功能" style="zoom:50%;" /></li><li><p>软件开源免费</p><p>功能不仅多而且软件开源，所有功能完全免费使用。</p></li><li><p>颜值高</p><p>主题多样，主题可自定义，可用文本编辑器自定义修改Themes/下文件样式，即可自定义主题样式</p></li></ul><img src="https://images.xmq.plus/20200914112015.jpg" alt="多种主题" style="zoom: 67%;" /><p>不足：</p><ul><li><p>搜索精度稍微欠缺</p><p>和PowerToys差不多，可能某些软件无法搜索到，需要这个搜索功能偶尔会可能遇到问题，但是一般换种方式即可解决，一般是可以接受的，之后介绍如何使搜索不到的软件添加进来；再者，软件可以和everything配合使用，可以解决这个问题。</p></li><li><p>搜索框长度固定</p><p>搜索框大小无法设置长宽</p></li></ul><p>使用示例：</p><img src="https://images.xmq.plus/20200914144922.gif" alt="Wox" style="zoom:50%;" /><h2 id="二、Listary"><a href="#二、Listary" class="headerlink" title="二、Listary"></a>二、Listary</h2><img src="https://images.xmq.plus/20200914135457.png" alt="Listary" style="zoom: 50%;" /><p>优点：</p><ul><li><p>精准快速</p><p>这是这款软件最大的优点，搜索能力特别强，一般一搜索都能搜到自己想要的，无论是安装版的软件还是绿色版免安装的软件，都能很快的搜索到</p></li><li><p>功能相对丰富</p><p>相比Wox功能和扩展性会稍微差点，但能满足正常的需求，也比较强大</p></li></ul><p>不足：</p><ul><li><p>付费功能</p><p>自定义主题等功能需要付费，也就是免费版只能使用默认的主题不弹窗，如果喜欢默认主题样式或对主题没要求的用户推荐使用</p></li></ul><p>使用示例：</p><img src="https://pic.downk.cc/item/5f5f19b3160a154a67d8d5eb.gif" alt="Listary" style="zoom: 50%;" /><h2 id="三、Powertoys"><a href="#三、Powertoys" class="headerlink" title="三、Powertoys"></a>三、Powertoys</h2><img src="https://pic.downk.cc/item/5f5f11c2160a154a67d6d5c6.gif" alt="PowerToys" style="zoom: 33%;" /><p>优点：</p><ul><li><p>默认主题样式美观</p></li><li><p>多种功能</p><p>文件批量重命名，快捷键提示，快速启动，颜色拾取，图像压缩，自定义分屏，文件预览等功能</p></li><li><p>免费开源</p></li></ul><p>缺点：</p><ul><li><p>搜索能力不够强</p><p>像免安装版的软件一般都无法搜索到，需要将对应的快捷方式添加到启动菜单目录下，才能搜索到。</p></li></ul><blockquote><p>详细用法：<a href="https://www.iplaysoft.com/powertoys.html">powertoys功能</a></p></blockquote><h2 id="四、将无法搜索到的软件添加到启动菜单"><a href="#四、将无法搜索到的软件添加到启动菜单" class="headerlink" title="四、将无法搜索到的软件添加到启动菜单"></a>四、将无法搜索到的软件添加到启动菜单</h2><p>1.创建软件快捷方式</p><p>将无法搜索到的软件创建一个快捷方式，已经存在的快捷方式忽略这一步</p><p>2.打开启动菜单目录</p><p>按<kbd>Win</kbd>打开启动菜单（或点击左下角windows徽标），随意选中一个软件右键-更多-打开文件所在位置：</p><p><img src="https://images.xmq.plus/image-20200922104725364.png" alt="打开文件所在位置"></p><p>点击后会弹出启动菜单目录文件夹，确保是在<code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs</code>下：</p><p><img src="https://images.xmq.plus/image-20200922105015201.png" alt="启动目录"></p><p>3.快捷方式移入</p><p>将刚刚创建的快捷方式移入到当前目录下即可，接下来就可以通过软件搜索到此软件了，同样也可以在启动菜单目录中找到这个软件了</p><h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><p>对颜值要求高的推荐Wox</p><p>对搜索功能要求高的推荐Listary</p><p>PowerToys目前功能还在完善之中，多种功能集合，搜索框颜值也不错，不侧重软件搜索可以选择PowerToys</p><h2 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h2><ul><li><a href="http://www.wox.one/">wox官方</a></li><li><a href="https://github.com/microsoft/PowerToys">powertoys</a></li><li><a href="https://www.iplaysoft.com/powertoys.html">powertoys功能详解</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows快捷键清单</title>
      <link href="posts/faa3.html"/>
      <url>posts/faa3.html</url>
      
        <content type="html"><![CDATA[<p> 快捷键的使用可以提高工作效率，刚开始用肯定会有很多不适应的地方，同时也容易忘记，可以反复在实际工作中用一用就会掌握</p><table><thead><tr><th>快捷键</th><th>功能</th></tr></thead><tbody><tr><td><kbd>Ctrl</kbd>+<kbd>A</kbd></td><td>全选</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>C</kbd></td><td>复制</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>X</kbd></td><td>剪切</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>Z</kbd></td><td>撤回</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>V</kbd></td><td>粘贴</td></tr><tr><td><kbd>Shift</kbd>+<kbd>Delete</kbd></td><td>永久删除</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>W</kbd></td><td>关闭当前页</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>O</kbd></td><td>打开文件</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>N</kbd></td><td>新建文件夹</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>P</kbd></td><td>打印</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>TAB</kbd></td><td>切换页面</td></tr><tr><td><kbd>Alt</kbd>+<kbd>TAB</kbd></td><td>切换应用程序</td></tr><tr><td><kbd>Alt</kbd>+<kbd>P</kbd></td><td>点中文件后预览文件</td></tr><tr><td><kbd>Alt</kbd>+<kbd>F4</kbd></td><td>强制关闭当前应用程序/关机</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>.</kbd></td><td>打开任务管理器</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Esc</kbd></td><td>任务管理器</td></tr><tr><td><kbd>win</kbd>+<kbd>E</kbd></td><td>打开我的电脑</td></tr><tr><td><kbd>win</kbd>+<kbd>I</kbd></td><td>打开设置</td></tr><tr><td><kbd>win</kbd>+<kbd>D</kbd></td><td>回到桌面</td></tr><tr><td><kbd>win</kbd>+<kbd>V</kbd></td><td>剪切板</td></tr><tr><td><kbd>win</kbd>+<kbd>R</kbd></td><td>打开运行对话框</td></tr><tr><td><kbd>win</kbd>+<kbd>S</kbd></td><td>搜索</td></tr><tr><td><kbd>win</kbd>+<kbd>M</kbd></td><td>最小化所有窗口</td></tr><tr><td><kbd>win</kbd>+<kbd>，</kbd></td><td>临时查看桌面</td></tr><tr><td><kbd>win</kbd>+<kbd>+</kbd>/<kbd>-</kbd></td><td>放大缩小</td></tr><tr><td><kbd>win</kbd>+<kbd>num</kbd></td><td>打开任务栏第num个应用程序</td></tr><tr><td><kbd>win</kbd>+<kbd>←</kbd>/<kbd>→</kbd>/<kbd>↑</kbd>/<kbd>↓</kbd></td><td>页面分屏</td></tr><tr><td><kbd>shift</kbd>+<kbd>win</kbd>+<kbd>S</kbd></td><td>截图</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>win</kbd>+<kbd>D</kbd></td><td>新建虚拟桌面</td></tr><tr><td><kbd>win</kbd>+<kbd>TAB</kbd></td><td>查看虚拟桌面</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>win</kbd>+<kbd>←</kbd>/<kbd>→</kbd></td><td>切换虚拟桌面</td></tr><tr><td><kbd>win</kbd>+<kbd>L</kbd></td><td>锁屏睡眠</td></tr><tr><td><kbd>PageUp</kbd></td><td>移动到上一页</td></tr><tr><td><kbd>PageDown</kbd></td><td>移动到下一页</td></tr><tr><td><kbd>Home</kbd></td><td>移动到最前</td></tr><tr><td><kbd>End</kbd></td><td>移动到最后</td></tr><tr><td><kbd>Insert</kbd></td><td>文本插入/覆盖模式切换</td></tr><tr><td><kbd>Ctrl</kbd>+<kbd>←</kbd>/<kbd>→</kbd></td><td>按照字符移动光标</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高等减振道床技术培训会议记录</title>
      <link href="posts/9911d86c.html"/>
      <url>posts/9911d86c.html</url>
      
        <content type="html"><![CDATA[<p>2020.08.26    星期三</p><h2 id="培训流程："><a href="#培训流程：" class="headerlink" title="培训流程："></a>培训流程：</h2><ol><li>培训人员对《高架线减振垫浮置板道床》进行详细解读；</li><li>培训过程中遇到的问题和疑问实时解答。</li></ol><h2 id="培训内容："><a href="#培训内容：" class="headerlink" title="培训内容："></a>培训内容：</h2><ol><li><p>《高架线减振垫浮置板道床》设计说明解读；</p></li><li><p>高等减振道床施工工艺流程。</p></li></ol><h2 id="一、高架线高等减振道床设计说明解读"><a href="#一、高架线高等减振道床设计说明解读" class="headerlink" title="一、高架线高等减振道床设计说明解读"></a>一、高架线高等减振道床设计说明解读</h2><ol><li>02标高等减振道床施工区段：综保区站~新华区站区间，全长2.24公里；</li><li>减振道床垫浮置板道床主要由底座板（带限位凸台）、减振垫（弹性垫层）、道床、轨枕、扣件及钢轨等组成；</li></ol><p><img src="https://images.xmq.plus/20200828153430.png" alt="减振道床垫浮置板道床结构"></p><blockquote><p>限位凸台与道床接触之间使用8mm厚弹性垫板包裹</p></blockquote><ol start="3"><li>高架线曲线超高采用<strong>全超高</strong>的设置方式，地下线曲线段轨道超高值一般按<strong>半超高</strong>的设置方式，超高值在缓和曲线内顺坡递减，无缓和曲线时在圆曲线两端直线地段递减；</li></ol><p><img src="https://images.xmq.plus/20200828162144.png" alt="高架线全超高"></p><p><img src="https://images.xmq.plus/20200828162357.png" alt="地下线半超高"></p><ol start="3"><li>高架线减振垫浮置板道床要求整体道床范围内应预埋<strong>门型筋</strong>;高架线一般整体道床范围内的梁面应预埋连接筋；</li></ol><p><img src="https://images.xmq.plus/20200828162634.png" alt="底座板下土建预埋的门型筋"></p><blockquote><p>底座板预埋门型钢筋高度大于60mm或与底座板钢筋冲突时应适当弯折</p></blockquote><ol start="4"><li>非岔区减振垫浮置板道床采用长、短轨枕相结合的道床块结构，道床块两端头中间设置限位凸台；</li></ol><p><img src="https://images.xmq.plus/20200828164244.png" alt="浮置板道床结构"></p><blockquote><p>非岔区减振垫浮置板道床块实际长度为4.88m，中间设置120mm宽板缝。</p></blockquote><ol start="5"><li>高架线整体道床混凝土采用C40；桩板结构、U形槽地段为C40，其他地下线为C35。</li><li>高架线减振垫浮置板道床钢筋最小保护层厚度为<strong>40mm</strong>；地下线一般整体道床、高架线一般整体道床钢筋最小保护层厚度为35mm；</li><li>限位凸台梁面处各植入6根L型钢筋</li></ol><p><img src="https://images.xmq.plus/20200828173030.png" alt="植筋大样图"></p><ol start="8"><li><p>底座板混凝土采用C40、布置单层钢筋网、凸台位置配置凸台钢筋（HRB400螺纹钢筋）；</p><p><strong>非岔区底座板表面</strong>由线路中心向两侧设置<strong>1%**横向排水坡；</strong>岔区底座板表面**不设置坡度；</p><p><strong>非岔区道床</strong>表面由线路中心线向道床两侧设<strong>2.5%**横向排水坡；</strong>岔区道床表面<strong>由线路中心线向道床两侧设</strong>1%~5%**横向排水坡。</p><p><img src="https://images.xmq.plus/20200828153430.png" alt="减振道床垫浮置板道床结构"></p></li></ol><p><img src="https://images.xmq.plus/20200828174838.png" alt="岔区底座板不设置排水坡"></p><ol start="9"><li>过轨管线的设置：若管线需要在道床内横穿，在轨枕空隙位置上下层钢筋内横穿，且不得穿越减振垫。</li></ol><p><img src="https://images.xmq.plus/20200828191245.png" alt="高架线过轨管线设置"></p><blockquote><p>施工时应用木塞塞住管口，防止异物进入管内造成堵塞</p></blockquote><ol start="10"><li>刚度过渡段的设置：减振垫浮置板道床地段均衔接一般整体道床，减振垫浮置板道床范围内应考虑刚度过渡段的设置，过渡段一般设置<strong>3块道床长度</strong>，减振垫采用静力地基模量较大的减振垫（静力地基模量0.03±0.005N/mm³）。</li></ol><h2 id="二、高等减振道床施工工艺流程"><a href="#二、高等减振道床施工工艺流程" class="headerlink" title="二、高等减振道床施工工艺流程"></a>二、高等减振道床施工工艺流程</h2><p><img src="https://images.xmq.plus/20200828194838.png" alt="高等减振道床施工工艺流程"></p><ol><li>施工测量、放样</li></ol><p>CPIII控制点布设；铺轨控制基标和加密基标，控制基标直线上每 120m，曲线上每 60m，曲线起终点、缓圆点、圆缓点和道岔起止点等处均应设置一个点。  </p><ol start="2"><li>梁面植筋、基底凿毛、清理 </li></ol><p>植筋：每处限位凸台位置在梁面上植入 6 根 HRB400 钢筋。钻孔前应用钢筋探测仪探测底板钢筋位置,可适当调整布置图中植筋位置以避开底板钢筋，若植筋与道床结构钢筋有电气接触时，施工应注意采用绝缘分隔处理。植筋采用改性环氧树脂胶粘剂。</p><p><img src="https://images.xmq.plus/20200828173030.png" alt="植筋大样图"></p><p>凿毛：凿毛深度不小于 10mm，间距不大于 100mm，呈梅花型布置，**见新面≥ 70%**。  </p><blockquote><p>高架线见新率≥ 70%，地下线见新率≥50%</p></blockquote><p>清理：清理结构表面的杂物，确保梁面无垃圾。</p><ol start="3"><li>钢筋加工</li></ol><p>在绑扎钢筋之前，钢筋需要在铺轨基地加工，严格按照图纸截断和弯制。将成品钢筋送至各作业面绑扎、焊接。</p><ol start="4"><li><p>绑扎基底钢筋、支立模板</p></li><li><p>混凝土试样取样、养护</p></li><li><p>基底混凝土浇筑</p></li></ol><p>基底垫层采用一次性浇筑，根据铺轨基标，绑扎垫层钢筋，制作木盒做为中心水沟模板，在支模过程中，每隔 5m 调整水沟模板标高。  </p><ol start="7"><li>混凝土养护、模板拆除</li><li>铺设橡胶减振垫</li></ol><p>在铺设橡胶减振垫、限位凸台弹性垫板之前，基底混凝土表面应该<strong>清理干净</strong>。减振垫铺设就位后须进行<strong>遮光处理</strong>并尽快安排混凝土施工以防止人员踩踏引起减振垫变位。采用胶带对减振胶垫、限位凸台弹性垫板所有接缝进行<strong>密封</strong>，严防漏浆 。</p><p>减振垫铺设分三个步骤：1）减振垫的切割：按照现场测量的铺设宽度进行切割，要求切割完的减振垫边角平直；2）减振垫的铺设：铺设采用横铺方式（<strong>垂直于线路方向铺设</strong>），减振垫间衔接的缝隙宽度应小于等于 10mm，并采用专用搭接条覆盖缝隙，然后用三排铆钉固定；3）减振垫的密封：减振垫铺设就位后，减振垫四周用<strong>土工布</strong>进行包裹并用橡胶密封条进行<strong>密封</strong>。</p><ol start="9"><li>轨排组装、钢筋加工</li></ol><p>以轨节表为轨排拼装的依据，轨排拼装在拼装台座上进行。先用叉车进行布枕，轨枕间距按照轨排表设置，安装轨下垫板。 </p><ol start="10"><li>轨排就位架立、绑扎焊接道床钢筋、焊接排流端子、粗调</li></ol><p><img src="https://images.xmq.plus/20200803153505.jpg" alt="焊接排流端子"></p><ol start="11"><li>精调、安装模板</li></ol><p>轨排粗调完成后组装道床模板。每组道床模板采用纵模板包横模板的独立拼装方式。纵向选用 2000*350mm 和 2000*150mm<strong>钢模板</strong>，横向选用 2400*450mm<strong>木模板</strong>。模板线边缘外侧的梁面上打设直径 16mm 的钢筋桩，钢筋桩底部与模板间设置 5cm 方木和木楔固定模板底部。纵向模板之间采用 U 型卡连接，两块钢模板之间插入 L 型插销，以增加连接处的刚性。用钢筋一头勾住模板上部一头勾住钢轨底部固定，确保模板稳定性。横向木模板之间加塞 8cm 厚方木进行加固，也满足了120mm 道床缝的施工。</p><ol start="12"><li>混凝土试块现场取样、养护</li><li>混凝土浇筑</li></ol><p>高等减振道床、底座采用 C40 混凝土，直接用混凝土泵车将混凝土浇筑至整体道床模板内，浇注前清理道床内的杂物。</p><p>整体道床混凝土浇筑应<strong>连续进行</strong>，浇注过程中，避免机具碰撞轨排和轨排支撑架，施工中随时检查轨道状态，发现问题及时处理。  </p><p>道床混凝土施工时，采用<strong>插入式振捣棒</strong>进行捣固。捣固时振捣棒应<strong>快进慢出</strong>，捣固时间 20s～30s 左右，以混凝土表面泛浆不冒气泡为度，特别是轨枕底部位置要加强捣固，保证轨枕底下混凝土捣固密实。  </p><p>混凝土浇注完毕之后应及时<strong>抹面收光</strong>，首先用木抹子进行抹面，道床顶面两轨枕中间部分为平台，道床面横向两侧梁面方向设 2.5%的横向排水坡，纵向排水沟坡度与线路坡度一致，在混凝土初凝前进行二次抹面，确保道床混凝土表面平整，排水畅通。抹面时应加强对钢轨下面和道床死角地方的监控，防止出现轨枕边缘积水的情况。</p><p>道床强度达到 5Mpa 时，施工人员开始拆除钢轨支撑架，并加强对轨道线路检查，  确保拆除轨排支撑架后轨道几何状态稳定和不发生变化。道床拆模后应及时修补残损部位和进行养生工作。道床混凝土浇筑完毕后 12 小时内，开始对混凝土进行覆盖并保湿养护。</p><ol start="12"><li>混凝土养护，模板拆除</li><li>质量检查、试验结果分析汇总</li></ol><h2 id="引用参考："><a href="#引用参考：" class="headerlink" title="引用参考："></a>引用参考：</h2><ul><li>JYD-03-01-S-GD-03-02 高架线减振垫浮置板道床</li><li>JYD-03-01-S-GD-02 高架线一般整体道床图</li><li>JYD-03-01-S-GD-01 地下线一般整体道床图</li><li>施工02标高等减振道床施工方案</li><li>金义东轨道交通02标施工组织设计</li></ul>]]></content>
      
      
      <categories>
          
          <category> 土木工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等减振道床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Hexo theme metery主题博客记录</title>
      <link href="posts/2547c616.html"/>
      <url>posts/2547c616.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>Hexo主题搭建好处：</p><ul><li>主题种类多，可选择多种<a href="https://hexo.io/themes/">主题</a></li><li>帮助<a href="https://hexo.io/zh-cn/docs/">文档</a>友好</li></ul><p>Matery主题特性：</p><ul><li>界面美观</li><li>功能丰富</li><li>动效效果丰富</li><li>配置齐全</li><li>完善稳定</li></ul><p>搭建目的和用途：</p><ul><li><p>个性定制自由度高，完全可以按照自己的意图设计想要的网站</p></li><li><p>做学习笔记</p></li><li><p>学习分享</p></li><li><p>资源分享</p></li></ul><p>使用github静态网站托管平台搭建个人博客的理由：</p><ul><li><p>成本低</p></li><li><p>不需要维护服务器</p></li><li><p>可绑定个性域名</p></li></ul><h2 id="二、安装准备"><a href="#二、安装准备" class="headerlink" title="二、安装准备"></a>二、安装准备</h2><h3 id="1-搭建环境"><a href="#1-搭建环境" class="headerlink" title="1.搭建环境"></a>1.搭建环境</h3><ul><li><code>Git</code>：将本地文件上传到<code>GitHub</code></li></ul><blockquote><p>下载地址：Git</p></blockquote><ul><li><code>nodejs</code>：<code>Hexo</code>博客基于<code>node.js</code>编写</li></ul><blockquote><p>下载地址：nodejs</p></blockquote><h3 id="2-安装软件"><a href="#2-安装软件" class="headerlink" title="2.安装软件"></a>2.安装软件</h3><ul><li><a href="https://code.visualstudio.com/">Visual Studio Code</a>（适合有开发基础的程序员，非常好用）</li><li>Sublime Text3，可免费使用，<a href="https://pan.baidu.com/s/1uKA-aBHm_CsmJI5GolrV1Q">百度网盘</a>（提取码：mh0y）</li></ul><blockquote><p>定制修改博客时，所用的文本编辑器软件</p></blockquote><h3 id="3-Github注册与Github-pages创建"><a href="#3-Github注册与Github-pages创建" class="headerlink" title="3.Github注册与Github pages创建"></a>3.Github注册与Github pages创建</h3><h3 id="4-基础配置"><a href="#4-基础配置" class="headerlink" title="4.基础配置"></a>4.基础配置</h3><ul><li>添加国内镜像源</li><li>生成SSH添加到Github</li></ul><h2 id="三、搭建博客"><a href="#三、搭建博客" class="headerlink" title="三、搭建博客"></a>三、搭建博客</h2><h3 id="1-本地安装hexo静态博客框架"><a href="#1-本地安装hexo静态博客框架" class="headerlink" title="1.本地安装hexo静态博客框架"></a>1.本地安装hexo静态博客框架</h3><ul><li>安装<code>hexo</code></li></ul><p>首先选择一个位置作为你博客文件的存放位置，然后新建一个文件夹，比如名为<code>MyBolg</code>的文件夹，创建完后，先不要点进去，在此处点击鼠标右键，选择<code>Git Bash Here</code>，然后依次输入如下命令：</p><pre><code class="line-numbers language-bash">npm install -g hexo-cli # 安装hexo框架hexo -v # 有版本信息输出代表安装成功hexo init MyBlog #初始化文件夹cd MyBlognpm install  # 安装博客所需要的依赖文件</code></pre><p><img src="https://images.xmq.plus/20200821130956.png" alt="hexo init"></p><p>等待运行完成，此时文件夹中多了许多文件。 注意：后续的命令均需要在站点目录下（即文件夹内）使用 Git Bash 运行。 此时 Hexo 框架的本地搭建已经完成了。我们来运行一下看看:</p><pre><code class="line-numbers language-bash">hexo s</code></pre><p><img src="https://images.xmq.plus/20200821131206.png" alt="hexo s"></p><p>浏览器中打开 <a href="http://locakhost:4000/">http://locakhost:4000</a> 或者 127.0.0.1:4000，可以看到一个网页，说明 Hexo 博客已经成功在本地运行。</p><h3 id="2-切换主题"><a href="#2-切换主题" class="headerlink" title="2.切换主题"></a>2.切换主题</h3><ul><li><p>解压下载好的<code>hexo-theme-matery</code>博客主题</p></li><li><p>将解压文件拷贝至<code>/Myblog/themes/</code>目录文件下，并重命名为<code>matery</code></p></li><li><p>删除原有<code>landscape</code>主题（可不删除）</p></li><li><p>进入博客站点目录(<code>MyBlog/</code>)，用文本编辑器打开<code>_config.yml</code>（或者使用<code>Vim/vi</code>编辑文本）<br><code>_config.yml </code>是Hexo博客的全局配置文件，在以后的博客修改，如个性化修改，博客 SEO 优化等都会使用到</p></li><li><p>将文件中101行位置<code>theme</code>选项中的<code>landscape</code>主题命名为<code>matery</code>,保存并退出</p><p><img src="https://images.xmq.plus/20200821132634.png" alt="matery config"></p></li></ul><p>重新<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</code>一次可看到切换主题成功</p><p><img src="https://images.xmq.plus/20200821133442.jpg" alt="切换主题"></p><p>到此，博客本地搭建完成，接下来定制和优化博客</p><h3 id="3-部署到GitHub-pages"><a href="#3-部署到GitHub-pages" class="headerlink" title="3.部署到GitHub pages"></a>3.部署到GitHub pages</h3><p>生成<code>SSH</code>添加到<code>GitHub</code>，连接<code>Github</code>与本地。<br>右键打开<code>git bash</code>，然后输入下面命令：</p><pre><code class="line-numbers language-git">git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;</code></pre><p>这里的<code>yourname</code>输入你的<code>GitHub</code>用户名，<code>youremail</code>输入你<code>GitHub</code>的邮箱。这样<code>GitHub</code>才能知道你是不是对应它的账户。可以用以下两条，检查一下你有没有输对</p><pre><code class="line-numbers language-git">git config user.namegit config user.email</code></pre><p>然后创建<code>SSH</code>,一路回车</p><pre><code class="line-numbers language-git">ssh-keygen -t rsa -C &quot;youremail&quot;</code></pre><p>这个时候它会告诉你已经生成了<code>.ssh</code>的文件夹。在你的电脑中找到这个文件夹。或者<code>git bash</code>中输入</p><pre><code class="line-numbers language-shell">cat ~/.ssh/id_rsa.pub</code></pre><p>将输出的内容复制到框中，点击确定保存。</p><p>打开<a href="http://github.com/">github</a>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个<code>SSH</code>，名字随便取一个都可以，把你的<code>id_rsa.pub</code>里面的信息复制进去。如图：</p><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/6.png" alt="img" style="zoom:67%;" /><p>在<code>git bash</code>输入<code>ssh -T git@github.com</code>，如果如下图所示，出现你的用户名，那就成功了。</p><p><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/7.png" alt="img"></p><p>安装hexo部署到github pages工具</p><pre><code class="line-numbers language-bash">npm install hexo-deployer-git --save</code></pre><p>然后</p><pre><code class="line-numbers language-bash">hexo cleanhexo generatehexo deploy</code></pre><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。 <code>hexo generate</code>顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写 ，<code>hexo deploy</code>部署文章，可以用<code>hexo d</code>缩写</p><blockquote><p>注意<code>deploy</code>时可能要你输入<code>username</code>和<code>password</code>。</p></blockquote><h2 id="四、基本定制博客"><a href="#四、基本定制博客" class="headerlink" title="四、基本定制博客"></a>四、基本定制博客</h2><p>参照<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">Hexo-theme-mater_Readme.md</a>对博客主题进行基本的设置：</p><h3 id="1-初始页面"><a href="#1-初始页面" class="headerlink" title="1.初始页面"></a>1.初始页面</h3><p>主题中带有的某些页面还未生成，不能正常打开，需要在<code>hexo</code>中先生成新建页面:</p><ul><li>新建分类 categories 页</li></ul><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code class="line-numbers language-bash">hexo new page &quot;categories&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre><code>---title: categoriesdate: 2018-09-30 17:25:30type: &quot;categories&quot;layout: &quot;categories&quot;---</code></pre><ul><li>新建标签 tags 页</li></ul><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code class="line-numbers language-bash">hexo new page &quot;tags&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre><code>---title: tagsdate: 2018-09-30 18:23:38type: &quot;tags&quot;layout: &quot;tags&quot;---</code></pre><ul><li>新建关于我 about 页</li></ul><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code class="line-numbers language-bash">hexo new page &quot;about&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre><code>---title: aboutdate: 2018-09-30 17:25:30type: &quot;about&quot;layout: &quot;about&quot;---</code></pre><ul><li>新建留言板 contact 页（可选的）</li></ul><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code class="line-numbers language-bash">hexo new page &quot;contact&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre><code>---title: contactdate: 2018-09-30 17:25:30type: &quot;contact&quot;layout: &quot;contact&quot;---</code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><ul><li>新建友情链接 friends 页（可选的）</li></ul><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code class="line-numbers language-bash">hexo new page &quot;friends&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre><code>---title: friendsdate: 2018-12-12 21:25:30type: &quot;friends&quot;layout: &quot;friends&quot;---</code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre><code class="line-numbers language-js">[&#123;    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/1_qq_27922023.jpg&quot;,    &quot;name&quot;: &quot;码酱&quot;,    &quot;introduction&quot;: &quot;我不是大佬，只是在追寻大佬的脚步&quot;,    &quot;url&quot;: &quot;http://luokangyuan.com/&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/4027734.jpeg&quot;,    &quot;name&quot;: &quot;闪烁之狐&quot;,    &quot;introduction&quot;: &quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;,    &quot;url&quot;: &quot;https://blinkfox.github.io/&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/avatar.jpg&quot;,    &quot;name&quot;: &quot;ja_rome&quot;,    &quot;introduction&quot;: &quot;平凡的脚步也可以走出伟大的行程&quot;,    &quot;url&quot;: &quot;https://me.csdn.net/jlh912008548&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;]</code></pre><p>初始页面全部搞定，现在主题的页面都能正常打开了。</p><h3 id="2-代码简化与基本配置"><a href="#2-代码简化与基本配置" class="headerlink" title="2.代码简化与基本配置"></a>2.代码简化与基本配置</h3><p>好处：简化代码，剔除不适用不必要的功能，提高可读性，方便后期调整和他人学习。</p><h4 id="Hexo全局配置优化"><a href="#Hexo全局配置优化" class="headerlink" title="Hexo全局配置优化"></a><code>Hexo</code>全局配置优化</h4><pre><code class="line-numbers language-yml"># 站点title: 肆零肆 #网站标题subtitle: &#39;肆零肆  | 学习记录&#39; #网站副标题description: &#39;&#39; #网站描述keywords: #关键词，seo优化author: Sumsung #作者language: zh-CN #语言timezone: &#39;&#39; #时区# URL## 如果你的网站不是放在网站根目录下，将URL设置为&#39;http://yoursite.com/child&#39;；root： &#39;/child/&#39;url: http://yoursite.comroot: /permalink: :year/:month/:day/:title/permalink_defaults:pretty_urls:  trailing_index: false # 是否在永久链接中保留尾部的 index.html，设置为 false 时去除  trailing_html: false # 是否在永久链接中保留尾部的.html, 设置为false时去除(对尾部的index.html无效)# 目录source_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# 文章new_post_name: :title.md # 新建博客文章名称default_layout: post #默认写作布置titlecase: false # 把标题转换为 title caseexternal_link:  enable: true # 在新标签中打开链接  field: site   exclude: &#39;&#39; #需要排除的域名。主域名和子域名如 www 需分别配置filename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight:  enable: true  line_number: true  auto_detect: false  tab_replace: &#39;&#39;  wrap: true  hljs: falseprismjs:  enable: false  preprocess: true  line_number: true  tab_replace: &#39;&#39;#主页设置# path:博客首页的根目录 (默认 = &#39;&#39;)# per_page: 每页显示的博客文章数量. (0 = 关闭分页功能)# order_by: Posts order. (Order by date descending by default)index_generator:  path: &#39;&#39;  per_page: 10  order_by: -date# &quot;分类&quot;和&quot;标签&quot;页default_category: uncategorizedcategory_map:tag_map:meta_generator: true# 日期/时间格式## 详情:http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ssupdated_option: &#39;mtime&#39;# 分页per_page: 10 # 0 = 关闭分页功能pagination_dir: page# Include / Exclude file(s) include:/exclude: options only apply to the &#39;source/&#39; folderinclude:exclude:ignore:# 扩展## 插件访问: https://hexo.io/plugins/## 主题访问: https://hexo.io/themes/theme: matery #使用的博客主题# 部署## 部署访问: https://hexo.io/docs/one-command-deploymentdeploy:  type: &#39;&#39;</code></pre><blockquote><p>Hexo官方全局设置说明文档：<a href="https://hexo.io/zh-cn/docs/configuration.html">Hexo.io</a></p></blockquote><h4 id="Hexo主题全局配置文件-config-yml优化"><a href="#Hexo主题全局配置文件-config-yml优化" class="headerlink" title="Hexo主题全局配置文件_config.yml优化"></a><code>Hexo</code>主题全局配置文件<code>_config.yml</code>优化</h4><p>主要的操作有：</p><ul><li>菜单导航配置</li></ul><p>菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>) </p><pre><code class="line-numbers language-yml"># 二级菜单写法如下  Medias:    icon: fas fa-list    children:      - name: Musics        url: /musics        icon: fas fa-music      - name: Movies        url: /movies        icon: fas fa-film      - name: Books        url: /books        icon: fas fa-book      - name: Galleries        url: /galleries        icon: fas fa-image</code></pre><ul><li>配置基本菜单导航的名称、路径url和图标icon.</li></ul><p>图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找</p><h3 id="3-删除无用文件"><a href="#3-删除无用文件" class="headerlink" title="3.删除无用文件"></a>3.删除无用文件</h3><ul><li>/themes/matery/Readme.md</li><li>/themes/matery/README_CN.md</li><li>/themes/matery/LICENSE</li><li>/layout/_partial/github-link.ejs</li><li>sources/libs/others/busuanzi.pure.mini.js</li><li>/layout/_partial/gitalk.ejs</li><li>/layout/_partial/gitment.ejs</li><li>/layout/_partial/gitment.ejs</li><li>/layout/_partial/disqus.ejs</li><li>/layout/_partial/livere.ejs</li><li>/layout/_partial/minivaline.ejs</li></ul><h3 id="4-插件安装及配置"><a href="#4-插件安装及配置" class="headerlink" title="4.插件安装及配置"></a>4.插件安装及配置</h3><h4 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h4><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre><code class="line-numbers language-bash">npm i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre><code class="line-numbers language-yml">highlight:  enable: falseprism_plugin:  mode: &#39;preprocess&#39;    # realtime/preprocess  theme: &#39;tomorrow&#39;  line_number: false    # default false  custom_css:</code></pre><h3 id="修复代码块行号不显示bug"><a href="#修复代码块行号不显示bug" class="headerlink" title="修复代码块行号不显示bug"></a>修复代码块行号不显示bug</h3><p>修改<code>themes/matery/source/css/matery.css</code>第95行左右的<code>pre</code>和<code>code</code>两段改为如下代码：</p><pre><code class="line-numbers language-css">pre &#123;    /* padding: 1.5rem !important; */    padding: 1.5rem 1.5rem 1.5rem 3.3rem !important;    margin: 1rem 0 !important;    background: #272822;    overflow: auto;    border-radius: 0.35rem;    tab-size: 4;&#125;code &#123;    padding: 1px 5px;    font-family: Inconsolata, Monaco, Consolas, &#39;Courier New&#39;, Courier, monospace;    /* font-size: 0.91rem; */    color: #e96900;    background-color: #f8f8f8;    border-radius: 2px;&#125;</code></pre><p>Css</p><p>然后在根目录的<code>_config.yml</code>中设置<code>prism_plugin.line_number</code>为<code>true</code></p><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre><code class="line-numbers language-bash">npm install hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code class="line-numbers language-yml">search:  path: search.xml  field: post</code></pre><h4 id="文章字数统计插件"><a href="#文章字数统计插件" class="headerlink" title="文章字数统计插件"></a>文章字数统计插件</h4><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre><code class="line-numbers language-bash">npm i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre><code class="line-numbers language-yml">postInfo:  date: true  update: false  wordCount: false # 设置文章字数统计为 true.  totalCount: false # 设置站点文章总字数统计为 true.  min2read: false # 阅读时长.  readCount: false # 阅读次数.</code></pre><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li>添加emoji表情支持（可选的）</li></ul><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre><code class="line-numbers language-yml">npm install hexo-filter-github-emojis --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code class="line-numbers language-yml">githubEmojis:  enable: true  className: github-emoji  inject: true  styles:  customEmojis:</code></pre><ul><li>添加 RSS 订阅支持（可选的）</li></ul><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre><code class="line-numbers language-bash">npm install hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code class="line-numbers language-yml">feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: &#39; &#39;  order_by: -date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><ul><li>中文链接转拼音（建议安装）</li></ul><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre><code class="line-numbers language-bash">npm i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code class="line-numbers language-yml">permalink_pinyin:  enable: true  separator: &#39;-&#39; # default: &#39;-&#39;</code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><ul><li>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</li></ul><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><ul><li>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</li></ul><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h2 id="五、深入定制博客"><a href="#五、深入定制博客" class="headerlink" title="五、深入定制博客"></a>五、深入定制博客</h2><h4 id="修改首页开始阅读字样"><a href="#修改首页开始阅读字样" class="headerlink" title="修改首页开始阅读字样"></a>修改首页开始阅读字样</h4><p>打开<code>index-cover.ejs</code>修改字段为<code>&lt;%= theme.indexbtn.index %&gt;</code>：</p><pre><code class="line-numbers language-js">&lt;a href=&quot;#indexCard&quot; class=&quot;waves-effect waves-light btn&quot;&gt;    &lt;i class=&quot;fa fa-angle-double-down&quot;&gt;&lt;/i&gt;&lt;%= theme.indexbtn.index %&gt;&lt;/a&gt;</code></pre><p>并在主题配置文件中加入indexbtn选项下添加index选项：</p><pre><code class="line-numbers language-yml">indexbtn:  enable: true  index: 学习记录  name: 导航网站  icon: fas fa-location-arrow  url: /navigation</code></pre><h4 id="更改Logo及背景图片"><a href="#更改Logo及背景图片" class="headerlink" title="更改Logo及背景图片"></a>更改Logo及背景图片</h4><ul><li><p>更改网站标题LOGO<br>替换MyBolg/themes/matery/source/favicon.png</p></li><li><p>更改网页LOGO<br>替换MyBolg/themes/matery/source/medias/logo.png</p></li><li><p>更改关于页面头像<br>将主题文件下_config.yml中设置<code>avatar:/medias/avatar.png</code>替换MyBolg/themes/matery/source/medias/avatar.png</p></li><li><p>更改网页背景图片</p><p>替换MyBolg/themes/matery/source/medias/banner中图片</p></li><li><p>更改特征图</p><p>替换MyBolg/themes/matery/source/medias/featureimages中图片</p></li><li><p>更改打赏二维码</p><p>替换MyBolg/themes/matery/source/medias/reward中图片</p></li></ul><h4 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h4><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre><code class="line-numbers language-css">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色.将渐变改成单色 */.bg-color &#123;    background-image: linear-gradient(to right, #000000 0%, #000000 100%);&#125;/*使用/**/屏蔽代码或直接删除代码，关闭背景图片滤镜效果*//*@-webkit-keyframes rainbow &#123;    0%,    100% &#123;        background: rgba(156, 39, 176, 0.75);        background: linear-gradient(45deg, rgba(156, 39, 176, 0.75) 0%, rgba(156, 39, 176, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(156, 39, 176, 0.75) 0%, rgba(156, 39, 176, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(156, 39, 176, 0.75) 0%, rgba(156, 39, 176, 0.65) 100%);    &#125;    16% &#123;        background: rgba(132, 13, 121, 0.75);        background: linear-gradient(45deg, rgba(132, 13, 121, 0.75) 0%, rgba(132, 13, 121, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(132, 13, 121, 0.75) 0%, rgba(132, 13, 121, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(132, 13, 121, 0.75) 0%, rgba(132, 13, 121, 0.65) 100%);    &#125;    32% &#123;        background: rgba(239, 83, 80, 0.75);        background: linear-gradient(45deg, rgba(239, 83, 80, 0.75) 0%, rgba(239, 83, 80, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(239, 83, 80, 0.75) 0%, rgba(239, 83, 80, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(239, 83, 80, 0.75) 0%, rgba(239, 83, 80, 0.65) 100%);    &#125;    48% &#123;        background: rgba(255, 87, 34, 0.75);        background: linear-gradient(45deg, rgba(255, 87, 34, 0.75) 0%, rgba(255, 87, 34, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(255, 87, 34, 0.75) 0%, rgba(255, 87, 34, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(255, 87, 34, 0.75) 0%, rgba(255, 87, 34, 0.65) 100%);    &#125;    64% &#123;        background: rgba(255, 160, 0, 0.75);        background: linear-gradient(45deg, rgba(255, 160, 0, 0.75) 0%, rgba(255, 160, 0, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(255, 160, 0, 0.75) 0%, rgba(255, 112, 66, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(255, 160, 0, 0.75) 0%, rgba(255, 160, 0, 0.65) 100%);    &#125;    80% &#123;        background: rgba(233, 30, 99, 0.75);        background: linear-gradient(45deg, rgba(233, 30, 99, 0.75) 0%, rgba(233, 30, 99, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(233, 30, 99, 0.75) 0%, rgba(233, 30, 99, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(2233, 30, 99, 0.75) 0%, rgba(233, 30, 99, 0.65) 100%);    &#125;&#125;@keyframes rainbow &#123;    0%,    100% &#123;        background: rgba(156, 39, 176, 0.75);        background: linear-gradient(45deg, rgba(156, 39, 176, 0.75) 0%, rgba(156, 39, 176, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(156, 39, 176, 0.75) 0%, rgba(156, 39, 176, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(156, 39, 176, 0.75) 0%, rgba(156, 39, 176, 0.65) 100%);    &#125;    16% &#123;        background: rgba(132, 13, 121, 0.75);        background: linear-gradient(45deg, rgba(132, 13, 121, 0.75) 0%, rgba(132, 13, 121, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(132, 13, 121, 0.75) 0%, rgba(132, 13, 121, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(132, 13, 121, 0.75) 0%, rgba(132, 13, 121, 0.65) 100%);    &#125;    32% &#123;        background: rgba(239, 83, 80, 0.75);        background: linear-gradient(45deg, rgba(239, 83, 80, 0.75) 0%, rgba(239, 83, 80, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(239, 83, 80, 0.75) 0%, rgba(239, 83, 80, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(239, 83, 80, 0.75) 0%, rgba(239, 83, 80, 0.65) 100%);    &#125;    48% &#123;        background: rgba(255, 87, 34, 0.75);        background: linear-gradient(45deg, rgba(255, 87, 34, 0.75) 0%, rgba(255, 87, 34, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(255, 87, 34, 0.75) 0%, rgba(255, 87, 34, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(255, 87, 34, 0.75) 0%, rgba(255, 87, 34, 0.65) 100%);    &#125;    64% &#123;        background: rgba(255, 160, 0, 0.75);        background: linear-gradient(45deg, rgba(255, 160, 0, 0.75) 0%, rgba(255, 160, 0, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(255, 160, 0, 0.75) 0%, rgba(255, 112, 66, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(255, 160, 0, 0.75) 0%, rgba(255, 160, 0, 0.65) 100%);    &#125;    80% &#123;        background: rgba(233, 30, 99, 0.75);        background: linear-gradient(45deg, rgba(233, 30, 99, 0.75) 0%, rgba(233, 30, 99, 0.65) 100%);        background: -moz-linear-gradient(135deg, rgba(233, 30, 99, 0.75) 0%, rgba(233, 30, 99, 0.65) 100%);        background: -webkit-linear-gradient(135deg, rgba(2233, 30, 99, 0.75) 0%, rgba(233, 30, 99, 0.65) 100%);    &#125;&#125;*/</code></pre><h4 id="设置隐藏的背景颜色"><a href="#设置隐藏的背景颜色" class="headerlink" title="设置隐藏的背景颜色"></a>设置隐藏的背景颜色</h4><p>文件位于：MyBlog\themes\matery\source\libs\materialize/materialize.min.css查找<code>.red&#123;background-color:#F44336 !important&#125;</code>将{}中的background-color删除或修改颜色</p><pre><code class="line-numbers language-css">.red&#123;background-color:#335a91 !important&#125;</code></pre><h4 id="关闭封面图轮播"><a href="#关闭封面图轮播" class="headerlink" title="关闭封面图轮播"></a>关闭封面图轮播</h4><p>主题文件<code>_config.yml</code>中设置：</p><pre><code class="line-numbers language-yml"># 首页封面轮播图的相关配置.cover:  showPrevNext: false # 是否显示左右切换按钮.  showIndicators: false # 是否显示指示器.  autoLoop: false # 是否自动轮播.  duration: 120 # 切换延迟时间.  intervalTime: 5000 # 自动切换下一张的间隔时间.  useConfig: false # 是否使用配置文件, 在 _data/covers.json 下配置推荐文章, false则使用主题在文章中的配置 cover coverImg  # useConfig 使用方式: 将主题 hexo-theme-matery/source/_data/covers.json 移动到 my-blog/source/_data/下修改配置即可</code></pre><h4 id="关闭每日切换banner"><a href="#关闭每日切换banner" class="headerlink" title="关闭每日切换banner"></a>关闭每日切换banner</h4><pre><code class="line-numbers language-yml"># banner 是否每日切换.banner:  enable: false # 若为 false, 则 banner 默认为 /medias/banner/0.jpg</code></pre><h4 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h4><p> <code>banner</code> 中的图片主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre><code class="line-numbers language-js">$(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(/medias/banner/&#39; + new Date().getDay() + &#39;.jpg)&#39;);</code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h4 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h4><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre><code class="line-numbers language-html">&lt;% if (theme.socialLink.github) &#123; %&gt;    &lt;a href=&quot;&lt;%= theme.socialLink.github %&gt;&quot; class=&quot;tooltipped&quot; target=&quot;_blank&quot; data-tooltip=&quot;访问我的GitHub&quot; data-position=&quot;top&quot; data-delay=&quot;50&quot;&gt;        &lt;i class=&quot;fab fa-github&quot;&gt;&lt;/i&gt;    &lt;/a&gt;&lt;% &#125; %&gt;</code></pre><p>现仅对内容进行删减，主题全局配置文件下设置仅仅留下QQ、Github、邮箱，同时关闭FORK ME：</p><pre><code class="line-numbers language-yml">socialLink:  github:  https://github.com/Sumsung524  email: me@xiongmengqi.top  facebook: # https://www.facebook.com/xxx  twitter: # https://twitter.com/xxx  qq: 985247777  weibo: # https://weibo.com/xxx  zhihu: # https://www.zhihu.com/xxx  rss: false # true、falsegithubLink:  enable: false  url: https://github.com/Sumsung524  title: Fork Me #或者直接删除</code></pre><blockquote><p>githubLink的设置在<code>/layout/_partial/github-link.ejs</code>中，关闭之后，可以直接移除github-link.ejs，如果以后需要设置其他形式的按键，可重新移入并在主题全局配置文件中设置</p></blockquote><p><code>/layout/_partial/social-link.ejs</code> 文件设置邮箱显示内容为自己邮箱：</p><pre><code class="line-numbers language-js">&lt;% if (theme.socialLink.github) &#123; %&gt;    &lt;a href=&quot;&lt;%= theme.socialLink.github %&gt;&quot; class=&quot;tooltipped&quot; target=&quot;_blank&quot; data-tooltip=&quot;访问我的GitHub&quot; data-position=&quot;top&quot; data-delay=&quot;50&quot;&gt;        &lt;i class=&quot;fab fa-github&quot;&gt;&lt;/i&gt;    &lt;/a&gt;&lt;% &#125; %&gt;&lt;% if (theme.socialLink.email) &#123; %&gt;    &lt;a href=&quot;mailto:&lt;%= theme.socialLink.email %&gt;&quot; class=&quot;tooltipped&quot; target=&quot;_blank&quot; data-tooltip=&quot;me@xiongmengqi.top&quot; data-position=&quot;top&quot; data-delay=&quot;50&quot;&gt;        &lt;i class=&quot;fas fa-envelope-open&quot;&gt;&lt;/i&gt;    &lt;/a&gt;&lt;% &#125; %&gt;&lt;% if (theme.socialLink.qq) &#123; %&gt;    &lt;a href=&quot;tencent://AddContact/?fromId=50&amp;fromSubId=1&amp;subcmd=all&amp;uin=&lt;%= theme.socialLink.qq %&gt;&quot; class=&quot;tooltipped&quot; target=&quot;_blank&quot; data-tooltip=&quot;QQ:&lt;%= theme.socialLink.qq %&gt;&quot; data-position=&quot;top&quot; data-delay=&quot;50&quot;&gt;        &lt;i class=&quot;fab fa-qq&quot;&gt;&lt;/i&gt;    &lt;/a&gt;&lt;% &#125; %&gt;</code></pre><h4 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h4><p>修改页脚的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><ul><li>在<code>_config.yml</code>打开站点运行时间记录功能:</li></ul><pre><code class="line-numbers language-yml">time:  enable: true  year: 2020 # 年份  month: 08 # 月份  date: 20 # 日期  hour: 00 # 小时  minute: 00 # 分钟  second: 00 # 秒</code></pre><p>去除小时、分钟、秒消掉：</p><p>将<code>  + diffHours +&quot; 小时 &quot; + diffMinutes + &quot; 分钟 &quot; + diffSeconds + &quot; 秒&quot;</code>字段删除</p><ul><li>关闭运行时间记录，有需要的时候再开启</li></ul><p>在主题文件中删除上述代码，删除<code>/layout/_partial/footer.ejs</code>中相关函数</p><ul><li>删除<a href="http://busuanzi.ibruce.info/">不蒜子</a> 网站统计代码：</li></ul><p>主题配置文件中删除：</p><pre><code class="line-numbers language-yml"># busuanzi(http://busuanzi.ibruce.info/) website statistics# 不蒜子(http://busuanzi.ibruce.info/) 网站统计busuanziStatistics:  enable: true  totalTraffic: true # 总访问量  totalNumberOfvisitors: true # 总人次  busuanzi: /libs/others/busuanzi.pure.mini.js</code></pre><p>在主题文件中删除不蒜子相关代码，删除<code>/layout/_partial/footer.ejs</code>中相关函数：</p><pre><code class="line-numbers language-js">&lt;% if (theme.postInfo.totalCount) &#123; %&gt;&amp;nbsp;&lt;i class=&quot;fas fa-chart-area&quot;&gt;&lt;/i&gt;&amp;nbsp;站点总字数:&amp;nbsp;&lt;span    class=&quot;white-color&quot;&gt;&lt;%= totalcount(site) %&gt;&lt;/span&gt;&amp;nbsp;字&lt;% &#125; %&gt;&lt;% let socialClass = &#39;&#39; %&gt;&lt;% if (theme.busuanziStatistics &amp;&amp; theme.busuanziStatistics.enable) &#123; %&gt;&lt;% socialClass = &#39;social-statis&#39; %&gt;&lt;% &#125; %&gt;&lt;% if (theme.busuanziStatistics &amp;&amp; theme.busuanziStatistics.totalTraffic) &#123; %&gt;            &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;                |&amp;nbsp;&lt;i class=&quot;far fa-eye&quot;&gt;&lt;/i&gt;&amp;nbsp;总访问量:&amp;nbsp;&lt;span id=&quot;busuanzi_value_site_pv&quot;                    class=&quot;white-color&quot;&gt;&lt;/span&gt;&amp;nbsp;次            &lt;/span&gt;            &lt;% &#125; %&gt;            &lt;% if (theme.busuanziStatistics &amp;&amp; theme.busuanziStatistics.totalNumberOfvisitors) &#123; %&gt;            &lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;                |&amp;nbsp;&lt;i class=&quot;fas fa-users&quot;&gt;&lt;/i&gt;&amp;nbsp;总访问人数:&amp;nbsp;&lt;span id=&quot;busuanzi_value_site_uv&quot;        class=&quot;white-color&quot;&gt;&lt;/span&gt;&amp;nbsp;人&lt;/span&gt;&lt;% &#125; %&gt;&lt;br&gt;&lt;% if (theme.time.enable) &#123; %&gt;&lt;span id=&quot;sitetime&quot;&gt;载入运行时间...&lt;/span&gt;&lt;script&gt;function siteTime() &#123;   var seconds = 1000;   var minutes = seconds * 60;   var hours = minutes * 60;   var days = hours * 24;   var years = days * 365;   var today = new Date();   var startYear = &quot;&lt;%- theme.time.year %&gt;&quot;;   var startMonth = &quot;&lt;%- theme.time.month %&gt;&quot;;   var startDate = &quot;&lt;%- theme.time.date %&gt;&quot;;   var startHour = &quot;&lt;%- theme.time.hour %&gt;&quot;;   var startMinute = &quot;&lt;%- theme.time.minute %&gt;&quot;;   var startSecond = &quot;&lt;%- theme.time.second %&gt;&quot;;   var todayYear = today.getFullYear();   var todayMonth = today.getMonth() + 1;   var todayDate = today.getDate();   var todayHour = today.getHours();   var todayMinute = today.getMinutes();   var todaySecond = today.getSeconds();   var t1 = Date.UTC(startYear, startMonth, startDate, startHour, startMinute, startSecond);                    var t2 = Date.UTC(todayYear, todayMonth, todayDate, todayHour, todayMinute, todaySecond);var diff = t2 - t1;var diffYears = Math.floor(diff / years);var diffDays = Math.floor((diff / days) - diffYears * 365);var diffHours = Math.floor((diff - (diffYears * 365 + diffDays) * days) / hours);var diffMinutes = Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours) /                        minutes);var diffSeconds = Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours -    diffMinutes * minutes) / seconds);if (startYear == todayYear) &#123;    document.getElementById(&quot;year&quot;).innerHTML = todayYear;    document.getElementById(&quot;sitetime&quot;).innerHTML = &quot;本站已运行 &quot; + diffDays + &quot; 天 &quot;;&#125; else &#123;document.getElementById(&quot;year&quot;).innerHTML = startYear + &quot; - &quot; + todayYear;document.getElementById(&quot;sitetime&quot;).innerHTML = &quot;本站已运行 &quot; + diffYears + &quot; 年 &quot; + diffDays +&quot; 天 &quot;;&#125;    &#125;    setInterval(siteTime, 1000);&lt;/script&gt;&lt;% &#125; %&gt;&lt;br&gt;</code></pre><p><strong>注意：</strong></p><p>删除此段代码会出现部署问题，由于layout.ejs中设置过此函数，此函数删除而找不到会发生无法部署的错误。</p><p>因此，需要删除<code>matery/layout/layout.ejs</code>中字段：</p><pre><code class="line-numbers language-js">    &lt;% if (theme.busuanziStatistics &amp;&amp; theme.busuanziStatistics.enable) &#123; %&gt;    &lt;script async src=&quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.js.busuanzi) %&gt;&quot;&gt;&lt;/script&gt;    &lt;% &#125; %&gt;</code></pre><p>按照代码提示<code>footer.ejs</code>中<code>socialClass is not defined</code>可以直接将<code>&lt;%- socialClass %&gt;</code>字段删除或者使用其他CSS样式，删除后再加上<code>&lt;br&gt;</code>：</p><pre><code class="line-numbers language-html">&lt;div class=&quot;col s12 m4 l4 social-link &lt;%- socialClass %&gt;&quot;&gt;&lt;%- partial(&#39;_partial/social-link&#39;) %&gt;&lt;/div&gt;</code></pre><blockquote><p>layout.ejs用于设置布局，告诉网站解析时引用什么样的文件、脚本、函数等等，属于一个大体的框架文件，表达了整个网站的大致结构。</p></blockquote><p>如备案信息不需要填写，可直接删除字段：</p><pre><code class="line-numbers language-js">&lt;% if (theme.icp.enable) &#123; %&gt;    &lt;span id=&quot;icp&quot;&gt;&lt;img src=&quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(&#39;/medias/icp.png&#39;) %&gt;&quot; style=&quot;vertical-align: text-bottom;&quot; /&gt;        &lt;a href=&quot;&lt;%- url_for(theme.icp.url) %&gt;&quot; target=&quot;_blank&quot;&gt;&lt;%= theme.icp.text %&gt;&lt;/a&gt;                          &lt;/span&gt;                          &lt;% &#125; %&gt;</code></pre><p>删除主题配置文件中：</p><pre><code class="line-numbers language-yml">#ICP备案信息尾部显示icp:  enable: false  url: # 备案链接  text: # 备案信息</code></pre><p>最好删除：<code>sources/libs/others/busuanzi.pure.mini.js</code></p><p>删除之后即可重新成功部署。</p><ul><li>将页脚变成窄边框</li></ul><p>在sources/libs/materialize/materialize.min.css中查找<code>.page-footer</code>，找到<code>.page-footer&#123;padding-top:20px;color:#666;background-color:#ee6e73&#125;</code>删除<code>padding-top:20px;</code></p><ul><li>修改页脚字体颜色</li></ul><p>source/css/matery.css中搜索<code>footer .copy-right &#123;</code>、<code>footer a &#123;color: #999;&#125;</code>将颜色修改:</p><pre><code class="line-numbers language-css">footer a &#123;    color: #999;&#125;footer .copy-right &#123;    color: #444;&#125;</code></pre><h4 id="修改文章卡片中标签颜色"><a href="#修改文章卡片中标签颜色" class="headerlink" title="修改文章卡片中标签颜色"></a>修改文章卡片中标签颜色</h4><p>在主题目录layout/matery.css中加入样式：</p><pre><code class="line-numbers language-css">.tag-color &#123;    background-image: linear-gradient(to left, #00c9ff 0%, #66a6ff 100%);&#125;</code></pre><p>打开layout/index.ejs中使用<kbd>Ctrl</kbd>+<kbd>F</kbd>搜索<code>bg-color</code>，替换为：<code>tag-color</code>，从而实现标签颜色与导航条颜色独立。</p><h4 id="定制回到顶部"><a href="#定制回到顶部" class="headerlink" title="定制回到顶部"></a>定制回到顶部</h4><ul><li>修改回到顶部按钮颜色</li></ul><p>source/css/matery.css中搜索<code>.top-scroll .btn-floating &#123;</code>:</p><pre><code class="line-numbers language-CSS">.top-scroll .btn-floating &#123;    background: linear-gradient(to bottom right, #00c8fe 0%, #66a6ff 100%);    width: 48px;    height: 48px;&#125;</code></pre><h4 id="博客文章菜单按钮调小"><a href="#博客文章菜单按钮调小" class="headerlink" title="博客文章菜单按钮调小"></a>博客文章菜单按钮调小</h4><p>通过谷歌浏览器开发者模式定位到按钮样式，打开<code>/layout/_partial/post-details-toc.ejs</code>,<kbd>Ctrl</kbd>+<kbd>F</kbd>输入<code>#floating-toc-btn .btn-floating </code>，修改样式：</p><pre><code class="line-numbers language-css">#floating-toc-btn .btn-floating &#123;    width: 32px;    height: 32px;&#125;#floating-toc-btn .btn-floating i &#123;    line-height: 48px;    font-size: 1.2rem;    position: absolute;    bottom: -8px;    left: 0px;&#125;</code></pre><blockquote><p>position：absolute表示设置绝对定位，一般配bai合“top”和“left”属性同时使用进行定位</p></blockquote><h4 id="修改博客文章目录颜色"><a href="#修改博客文章目录颜色" class="headerlink" title="修改博客文章目录颜色"></a>修改博客文章目录颜色</h4><p>通过谷歌浏览器开发者模式定位到按钮样式，打开<code>/layout/_partial/post-details-toc.ejs</code>,<kbd>Ctrl</kbd>+<kbd>F</kbd>输入<code>#toc-content .is-active-link </code>，修改样式：</p><pre><code class="line-numbers language-css">#toc-content .is-active-link &#123;    color: #66a6ff;&#125;</code></pre><p>通过谷歌浏览器开发者模式定位到按钮样式，打开<code>/layout/_partial/post-details-toc.ejs</code>,Ctrl+F输入<code>#toc-content .toc-link:hover</code>，修改样式：</p><pre><code class="line-numbers language-css">#toc-content .toc-link:hover &#123;    color: #66a6ff;    font-weight: 700;    text-decoration: underline;&#125;</code></pre><h4 id="修改文章链接颜色"><a href="#修改文章链接颜色" class="headerlink" title="修改文章链接颜色"></a>修改文章链接颜色</h4><p>/source/css/matery.css:</p><pre><code class="line-numbers language-css">#articleContent a &#123;    padding: 0 2px;    color: #66a6ff;    font-weight: 500;    text-decoration: underline;    word-wrap: break-word;&#125;</code></pre><pre><code class="line-numbers language-css">blockquote &#123;    border-left: 5px solid #66a6ff;    padding: 1rem 0.8rem 0.2rem 0.8rem;    color: #666;    background-color: rgba(66, 185, 131, .1);&#125;// 修改引用左侧竖线颜色</code></pre><h4 id="定制进度条"><a href="#定制进度条" class="headerlink" title="定制进度条"></a>定制进度条</h4><ul><li>更改底栏进度条色彩</li></ul><p>source/css/matery.css中搜索<code>.progress-bar &#123;</code>并设置:</p><pre><code class="line-numbers language-css">.progress-bar &#123;   height: 4px;   position: fixed;   bottom: 0px;   z-index: 300;   background: linear-gradient(to right, #4285f4 0%,  #ea4335 75%, #fbbc05 80%, #4285f4 85%, #34a853 90%, #ea4335 100%);   opacity: 1.0;&#125;</code></pre><ul><li>更改浏览器默认的进度条样式</li></ul><p>source/css/matery.css中最后添加：</p><p>考虑到进度条重复，故将width设置为0.1px隐藏导航条，方便以后需要时调用：</p><pre><code class="line-numbers language-css">  /* 定义滚动条样式 */  ::-webkit-scrollbar &#123;    width: 0.1px;    height: 6px;    background-color: rgba(240, 240, 240, 0);  &#125;  /*定义滚动条轨道 内阴影+圆角*/  ::-webkit-scrollbar-track &#123;    box-shadow: inset 0 0 0px rgba(240, 240, 240, .5);    border-radius: 7px;    background-color: rgba(240, 240, 240, .5);  &#125;  /*定义滑块 内阴影+圆角*/  ::-webkit-scrollbar-thumb &#123;    border-radius: 10px;    box-shadow: inset 0 0 0px rgba(240, 240, 240, .5);    background-color: rgba(0, 0, 0, 0.5);  &#125;</code></pre><h4 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h4><ul><li>添加“社会主义核心价值观”文字点击效果</li></ul><p>在 /themes/matery/source/js 新建文件<code>click_show_text.js</code>，并添加如下代码:</p><pre><code class="line-numbers language-js">&quot;use strict&quot;;   var a_idx=0;   function delay()&#123;   $(&quot;.buryit&quot;).removeAttr(&quot;onclick&quot;)   &#125;   jQuery(document).ready(function(n)&#123;   n(&quot;body&quot;).click(function(e)&#123;   var t=new Array(&quot;富强&quot;,&quot;民主&quot;,&quot;文明&quot;,&quot;和谐&quot;,&quot;自由&quot;,&quot;平等&quot;,&quot;公正&quot;,&quot;法治&quot;,&quot;爱国&quot;,&quot;敬业&quot;,&quot;诚信&quot;,&quot;友善&quot;),   o=n(&quot;&lt;span/&gt;&quot;).text(t[a_idx]);       a_idx=(a_idx+1)%t.length;       var a=e.pageX,i=e.pageY;       o.css(&#123;       &quot;z-index&quot;:5,top:i-20,left:a,position:&quot;absolute&quot;,&quot;font-weight&quot;:&quot;bold&quot;,color:&quot;#ea4335&quot;&#125;),           n(&quot;body&quot;).append(o),o.animate(&#123;top:i-180,opacity:0&#125;,3e3,function()&#123;o.remove()&#125;)&#125;),setTimeout(&quot;delay()&quot;,2e3)&#125;);</code></pre><p>在主题配置文件<code>_config.yml</code>下添加：</p><pre><code class="line-numbers language-yml"># 社会主义核心价值观文字点击效果click_show_text:  enable: true</code></pre><p>在<code>themes/source/layout/</code>引用文件：</p><pre><code class="line-numbers language-js">&lt;script src=&quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(&#39;/js/click_show_text.js&#39;) %&gt;&quot;&gt;&lt;/script&gt;</code></pre><h4 id="激活评论系统"><a href="#激活评论系统" class="headerlink" title="激活评论系统"></a>激活评论系统</h4><p>主题中配置多种评论系统，个人认为最好用的时<code>Valine</code>:</p><ul><li>注册</li><li>登录</li><li>APPID 和 APPKey 复制</li><li>将对应的内容输入到主题配置文件中：</li></ul><pre><code class="line-numbers language-yml"># Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.valine:  enable: true  appId: #粘贴APPID  appKey: #粘贴APPKey  notify: false  verify: false  visitor: true  avatar: &#39;mm&#39; # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide  pageSize: 10  placeholder: &#39;just go go&#39; # Comment Box placeholder  background: /medias/comment_bg.png</code></pre><p>配置好一个评论系统之后，可以将其他不需要的评论系统删除</p><blockquote><p>删除操作注意对文件做好备份，以防出错</p></blockquote><p>删除需要三处：主题配置文件相关代码、使用到评论模板页面的ejs文件、删除某个评论模板ejs文件</p><p>由于评论模块位于<code>post</code>、<code>concat</code>、<code>frieds</code>等页面，需要找到每个页面的<code>.ejs</code>文件，将代码删除</p><ul><li><p>删除Gitalk评论模块</p><ul><li>主题配置文件删除：</li></ul></li></ul><pre><code class="line-numbers language-yml">    # Gitalk 评论模块的配置，默认为不激活    gitalk:      enable: false      owner:      repo:      oauth:        clientId:        clientSecret:      admin:    # Gitment 评论模块的配置，默认为不激活    gitment:      enable: false      owner:      repo:      oauth:        clientId:        clientSecret:    # Disqus评论模块的配置，默认为不激活    disqus:      enable: false      shortname:    # Livere 来必力评论模块的配置，默认为不激活    livere:      enable: false      uid:    # MiniValine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.    # See: https://github.com/MiniValine/MiniValine    minivaline:      enable: false      appId: zhM0AOiqle17oPoE84CoYw1e-gzGzoHsz # Your leancloud application appid      appKey: itmzT1JbXfAjVwMqDhGPzU45 # Your leancloud application appkey      mode: DesertsP # DesertsP or xCss      placeholder: Write a Comment # Comment box placeholder      math: true # Support MathJax.      md: true # Support Markdown.      enableQQ: false # Enable QQ avatar API.      NoRecordIP: false # Do not record commenter IP.      visitor: true # Article reading statistics.      maxNest: 6 # Sub-comment maximum nesting depth.      pageSize: 6 # Pagination size.      adminEmailMd5: de8a7aa53d07e6b6bceb45c64027763d # The MD5 of Admin Email to show Admin Flag.[Just Only DesertsP Style mode]      tagMeta: # The String Array of Words to show Flag.[Just Only xCss Style mode]        - 管理员        - 小伙伴        - 访客      master: # The MD5 String Array of master Email to show master Flag.[Just Only xCss Style mode]        - de8a7aa53d07e6b6bceb45c64027763d      friends: # The MD5 String Array of friends Email to show friends Flag.[Just Only xCss Style mode]        - b5bd5d836c7a0091aa8473e79ed4c25e        - adb7d1cd192658a55c0ad22a3309cecf        - 3ce1e6c77b4910f1871106cb30dc62b0        - cfce8dc43725cc14ffcd9fb4892d5bfc      # MiniValine&#39;s display language depends on user&#39;s browser or system environment      # If you want everyone visiting your site to see a uniform language, you can set a force language value      # Available values: en  | zh-CN | (and many more)      # More i18n info: https://github.com/MiniValine/minivaline-i18n      lang:      # Expression Url.      # https://github.com/MiniValine/MiniValine/blob/master/.github/FAQ.md#how-to-customize-emoticons      emoticonUrl:        - https://cdn.jsdelivr.net/npm/alus@latest        - https://cdn.jsdelivr.net/gh/MiniValine/qq@latest        - https://cdn.jsdelivr.net/gh/MiniValine/Bilibilis@latest        - https://cdn.jsdelivr.net/gh/MiniValine/tieba@latest        - https://cdn.jsdelivr.net/gh/MiniValine/twemoji@latest        - https://cdn.jsdelivr.net/gh/MiniValine/weibo@latest        gitalk: /libs/gitalk/gitalk.min.js        minivaline:https://cdn.jsdelivr.net/npm/minivaline/dist/MiniValine.min.js</code></pre><ul><li>contact.ejs删除：</li></ul><pre><code class="line-numbers language-js"> &lt;% if (theme.gitalk &amp;&amp; theme.gitalk.enable) &#123; %&gt; &lt;%- partial(&#39;_partial/gitalk&#39;) %&gt; &lt;% &#125; %&gt; &lt;% if (theme.gitment.enable) &#123; %&gt; &lt;%- partial(&#39;_partial/gitment&#39;) %&gt; &lt;% &#125; %&gt; &lt;% if (theme.disqus.enable) &#123; %&gt; &lt;%- partial(&#39;_partial/disqus&#39;) %&gt; &lt;% &#125; %&gt; &lt;% if (theme.livere &amp;&amp; theme.livere.enable) &#123; %&gt; &lt;%- partial(&#39;_partial/livere&#39;) %&gt; &lt;% &#125; %&gt; &lt;% if (theme.minivaline &amp;&amp; theme.minivaline.enable) &#123; %&gt; &lt;%- partial(&#39;_partial/minivaline&#39;) %&gt; &lt;% &#125; %&gt;</code></pre><ul><li>friends.ejs删除：</li></ul><pre><code class="line-numbers language-js">&lt;% if (theme.gitalk &amp;&amp; theme.gitalk.enable) &#123; %&gt;&lt;%- partial(&#39;_partial/gitalk&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.gitment.enable) &#123; %&gt;&lt;%- partial(&#39;_partial/gitment&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.disqus.enable) &#123; %&gt;&lt;%- partial(&#39;_partial/disqus&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.livere &amp;&amp; theme.livere.enable) &#123; %&gt;&lt;%- partial(&#39;_partial/livere&#39;) %&gt;&lt;% &#125; %&gt;</code></pre><ul><li>删除post-detail.ejs：</li></ul><pre><code class="line-numbers language-js">&lt;% if (theme.gitalk &amp;&amp; theme.gitalk.enable) &#123; %&gt;    &lt;%- partial(&#39;_partial/gitalk&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.gitment.enable) &#123; %&gt;    &lt;%- partial(&#39;_partial/gitment&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.disqus.enable) &#123; %&gt;    &lt;%- partial(&#39;_partial/disqus&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.livere &amp;&amp; theme.livere.enable) &#123; %&gt;&lt;%- partial(&#39;_partial/livere&#39;) %&gt;&lt;% &#125; %&gt;&lt;% if (theme.minivaline &amp;&amp; theme.minivaline.enable) &#123; %&gt;&lt;%- partial(&#39;_partial/minivaline&#39;) %&gt;&lt;% &#125; %&gt;</code></pre><p>​    </p><ul><li>删除gitalk.ejs、gitment.ejs、gitment.ejs、disqus.ejs、livere.ejs、minivaline.ejs</li></ul><h4 id="在线聊天功能去除"><a href="#在线聊天功能去除" class="headerlink" title="在线聊天功能去除"></a>在线聊天功能去除</h4><ul><li>删除主题全局配置文件代码：</li></ul><pre><code class="line-numbers language-yml"># DaoVoice online contactdaovoice:  enable: false  app_id:# Tidio online contacttidio:  enable: false  public_key:</code></pre><ul><li>删除layout.ejs代码：</li></ul><pre><code class="line-numbers language-js">    &lt;% if (theme.tidio.enable) &#123; %&gt;        &lt;script src=&quot;//code.tidio.co/&lt;%- theme.tidio.public_key %&gt;.js&quot;&gt;&lt;/script&gt;        &lt;script&gt;            $(document).ready(function () &#123;                setInterval(change_Tidio, 50);                function change_Tidio() &#123;                    var tidio=$(&quot;#tidio-chat iframe&quot;);                    if(tidio.css(&quot;display&quot;)==&quot;block&quot;&amp;&amp; $(window).width()&gt;977 )&#123;                        document.getElementById(&quot;tidio-chat-iframe&quot;).style.bottom= ($(&quot;div#backTop.top-scroll&quot;).css(&quot;display&quot;)==&quot;none&quot; &amp;&amp;$(window).width()&gt;977)&gt;0? &quot;-40px&quot; : ($(&quot;div.toc-title&quot;).length&amp;&amp;$(window).width()&gt;977)&gt;0?&quot;&lt;%if(theme.toc.showToggleBtn)&#123;%>85px<%&#125;else&#123;%>20px<%&#125;%&gt;&quot;:&quot;20px&quot;;                        document.getElementById(&quot;tidio-chat-iframe&quot;).style.right=&quot;-15px&quot;;                        document.getElementById(&quot;tidio-chat-iframe&quot;).style.height=parseInt(tidio.css(&quot;height&quot;))&gt;=520?&quot;520px&quot;:tidio.css(&quot;height&quot;);                        document.getElementById(&quot;tidio-chat-iframe&quot;).style.zIndex=&quot;997&quot;;                    &#125;                    else if(tidio.css(&quot;display&quot;)==&quot;block&quot;&amp;&amp;$(window).width()&gt;601 &amp;&amp;$(window).width()&lt;992 )&#123;                        document.getElementById(&quot;tidio-chat-iframe&quot;).style.bottom= ($(&quot;div#backTop.top-scroll&quot;).css(&quot;display&quot;)==&quot;none&quot; &amp;&amp; 601&lt; $(window).width()&lt;992)&gt;0? &quot;-40px&quot;:&quot;20px&quot; ;                        document.getElementById(&quot;tidio-chat-iframe&quot;).style.right=&quot;-15px&quot;;                        document.getElementById(&quot;tidio-chat-iframe&quot;).style.zIndex=&quot;997&quot;;                    &#125;                    else if(tidio.css(&quot;display&quot;)==&quot;block&quot;&amp;&amp;$(window).width()&lt;601 &amp;&amp; parseInt(tidio.css(&quot;height&quot;))&lt;230)&#123;                        document.getElementById(&quot;tidio-chat-iframe&quot;).style.bottom= ($(&quot;div#backTop.top-scroll&quot;).css(&quot;display&quot;)==&quot;none&quot; &amp;&amp; $(window).width()&lt;601)&gt;0? &quot;-10px&quot;:&quot;45px&quot; ;                        document.getElementById(&quot;tidio-chat-iframe&quot;).style.zIndex=&quot;997&quot;;                    &#125;                    if( tidio.css(&quot;display&quot;)==&quot;block&quot;&amp;&amp;$(window).width()&lt;601 &amp;&amp; parseInt(tidio.css(&quot;height&quot;))&gt;=230)&#123;                        document.getElementById(&quot;tidio-chat-iframe&quot;).style.zIndex=&quot;998&quot;;                    &#125;                &#125;            &#125;);        &lt;/script&gt;    &lt;% &#125; %&gt;    &lt;% if (theme.daovoice.enable) &#123; %&gt;    &lt;script&gt;        (function (i, s, o, g, r, a, m) &#123;            i[&quot;DaoVoiceObject&quot;] = r;            i[r] = i[r] || function () &#123;                (i[r].q = i[r].q || []).push(arguments)            &#125;, i[r].l = 1 * new Date();            a = s.createElement(o), m = s.getElementsByTagName(o)[0];            a.async = 1;            a.src = g;            a.charset = &quot;utf-8&quot;;            m.parentNode.insertBefore(a, m)        &#125;)(window, document, &quot;script&quot;, (&#39;https:&#39; == document.location.protocol ? &#39;https:&#39; : &#39;http:&#39;) +            &quot;//widget.daovoice.io/widget/6984b559.js&quot;, &quot;daovoice&quot;)        daovoice(&#39;init&#39;, &#123;            app_id: &quot;&lt;%- theme.daovoice.app_id %&gt;&quot;        &#125;);        daovoice(&#39;update&#39;);    &lt;/script&gt;    &lt;% &#125; %&gt;</code></pre><h4 id="关闭转载功能"><a href="#关闭转载功能" class="headerlink" title="关闭转载功能"></a>关闭转载功能</h4><p>由于以后可能需要用到，故仅在主题配置文件中关闭：</p><pre><code class="line-numbers language-yml"># default 配置文章的默认转载规则# 您可以使用在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则# 可用的转载规则有：# 这些转载规则的意义请参考：https://creativecommons.org/choose/?lang=zh#选项： cc_by cc_by_nd cc_by_sa cc_by_nc cc_by_nc_nd cc_by_nc_sa cc0 noreprint（不允许转载 not allowed to reprint） pay（付费转载 pay for reprinting）reprint:  enable: false # whether enable reprint section 是否启用“转载规则限定模块”  default: cc_by</code></pre><h4 id="合并标签和文章分类页"><a href="#合并标签和文章分类页" class="headerlink" title="合并标签和文章分类页"></a>合并标签和文章分类页</h4><p>打开<code>layout/tags.ejs</code>,复制：</p><pre><code class="line-numbers language-yml">    &lt;%- partial(&#39;_widget/tag-cloud&#39;) %&gt;    &lt;% if (site.tags &amp;&amp; site.tags.length &gt; 0) &#123; %&gt;    &lt;%- partial(&#39;_widget/tag-wordcloud&#39;) %&gt;    &lt;% &#125; %&gt;</code></pre><p>由于属于直接粘贴会导致重叠，需要将文章标签的位置单独调整，故需要找到<code>_widget/tags-cloud.ejs</code>文件复制上，粘贴至<code>layout/categories.ejs</code>中，然后再<code>class=&quot;container chip-container&quot;</code>后加上<code>style=&quot;margin-top:25px;&quot;</code></p><pre><code class="line-numbers language-yml">&lt;%- partial(&#39;_partial/bg-cover&#39;) %&gt;&lt;main class=&quot;content&quot;&gt;    &lt;%- partial(&#39;_widget/category-cloud&#39;) %&gt;    &lt;%    var colorArr = [&#39;#F9EBEA&#39;, &#39;#F5EEF8&#39;, &#39;#D5F5E3&#39;, &#39;#E8F8F5&#39;, &#39;#FEF9E7&#39;,        &#39;#F8F9F9&#39;, &#39;#82E0AA&#39;, &#39;#D7BDE2&#39;, &#39;#A3E4D7&#39;, &#39;#85C1E9&#39;, &#39;#F8C471&#39;, &#39;#F9E79F&#39;, &#39;#FFF&#39;];    var colorCount = colorArr.length;    var hashCode = function (str) &#123;        if (!str &amp;&amp; str.length === 0) &#123;            return 0;        &#125;        var hash = 0;        for (var i = 0, len = str.length; i &lt; len; i++) &#123;            hash = ((hash &lt;&lt; 5) - hash) + str.charCodeAt(i);            hash |= 0;        &#125;        return hash;    &#125;;    var i = 0;    var isTag = is_tag();    %&gt;    &lt;div id=&quot;tags&quot; class=&quot;container chip-container&quot;style=&quot;margin-top:25px;&quot;&gt;        &lt;div class=&quot;card&quot;&gt;            &lt;div class=&quot;card-content&quot;&gt;                &lt;div class=&quot;tag-title center-align&quot;&gt;                    &lt;i class=&quot;fas fa-tags&quot;&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;%= __(&#39;postTagTitle&#39;) %&gt;                &lt;/div&gt;                &lt;div class=&quot;tag-chips&quot;&gt;                    &lt;% site.tags.map(function(tag) &#123; %&gt;                    &lt;%                        i++;                        var color = i &gt;= colorCount ? colorArr[Math.abs(hashCode(tag.name) % colorCount)]                                : colorArr[i - 1];                    %&gt;                    &lt;a href=&quot;&lt;%- url_for(tag.path) %&gt;&quot; title=&quot;&lt;%- tag.name %&gt;: &lt;%- tag.length %&gt;&quot;&gt;                        &lt;span class=&quot;chip center-align waves-effect waves-light                                &lt;% if (isTag &amp;&amp; tag.name == page.tag) &#123; %&gt; chip-active &lt;% &#125; else &#123; %&gt; chip-default &lt;% &#125; %&gt;&quot;                                data-tagname=&quot;&lt;%- tag.name %&gt;&quot; style=&quot;background-color: &lt;%- color %&gt;;&quot;&gt;&lt;%- tag.name %&gt;                            &lt;span class=&quot;tag-length&quot;&gt;&lt;%- tag.length %&gt;&lt;/span&gt;                        &lt;/span&gt;                    &lt;/a&gt;                    &lt;% &#125;); %&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;% if (site.tags &amp;&amp; site.tags.length &gt; 0) &#123; %&gt;    &lt;%- partial(&#39;_widget/tag-wordcloud&#39;) %&gt;    &lt;% &#125; %&gt;    &lt;% if (site.categories &amp;&amp; site.categories.length &gt; 0) &#123; %&gt;    &lt;%- partial(&#39;_widget/category-radar&#39;) %&gt;    &lt;% &#125; %&gt;&lt;/main&gt;</code></pre><p>最后在主题配置文件中关闭<code>tags</code>页面链接即可</p><h2 id="六、其他"><a href="#六、其他" class="headerlink" title="六、其他"></a>六、其他</h2><h3 id="1-自定义导航页"><a href="#1-自定义导航页" class="headerlink" title="1.自定义导航页"></a>1.自定义导航页</h3><ul><li><code>hexo new page navigation</code>新建页面</li><li>打开新建文件并编辑：</li></ul><pre><code class="line-numbers language-yml">---title: navigationdate: 2020-08-22 15:13:51type: &quot;navigation&quot;layout: &quot;navigation&quot;---</code></pre><ul><li>在主题配置中加入新页面：</li></ul><pre><code class="line-numbers language-yml">menu:  Index:    url: /    icon: fas fa-home  记录:    url: /categories #二级菜单中的主菜单链接    icon: fas fa-list    children:      - name: 设计        url:         icon: fas fa-book      - name: 计算机        url:         icon: fas fa-music      - name: 土木工程        url:         icon: fas fa-film      - name: 其他        url:         icon: fas fa-book  清单:    icon: fas fa-list    children:      - name: Windows软件        url: /windows    #将友情链接页面模板变成软件清单页面        icon: fas fa-address-book      - name: Mac软件        url:         icon: fas fa-film      - name: 资源列表        url:         icon: fas fa-book  Tags:    url: /tags    icon: fas fa-tags  导航:    url: /navigation    icon: fas fa-location-arrow  About:    url: /about    icon: fas fa-user-circle  Contact:    url: /contact    icon: fas fa-comments#  隐藏Archives页面，时间轴等保留，方便以后再使用#  Archives:#    url: /archives#    icon: fas fa-archive</code></pre><ul><li>在主题目录下<code>layout</code>下新建 <code>navigation.ejs</code>，除拓展名为<code>.ejs</code>外，文件名要求和之前的统一：</li></ul><h3 id="2-导航的关于页面"><a href="#2-导航的关于页面" class="headerlink" title="2.导航的关于页面"></a>2.导航的关于页面</h3><ul><li>添加关于页面按键（入口），在主题目录下打开<code>layout/nav.ejs</code>，按住<kbd>Ctrl</kbd>+<kbd>F</kbd>搜索<code>&lt;% if (theme.navabout) &#123; %&gt;</code>，下方加入代码：</li></ul><pre><code class="line-numbers language-js">&lt;li&gt;    &lt;a href=&quot;&lt;%= url_for(theme.navabout.url3) %&gt;&quot;&gt;        &lt;i class=&quot;&lt;%= theme.navabout.icon3 %&gt;&quot;&gt;&lt;/i&gt;        &lt;span class=&quot;tooltip-blue&quot;&gt;&lt;%= theme.navabout.name3 %&gt;&lt;/span&gt;    &lt;/a&gt;&lt;/li&gt;</code></pre><ul><li>创建新页面：</li></ul><pre><code>hexo new page aboutnav</code></pre><ul><li>打开index.md文件编辑：</li></ul><pre><code>---title: 关于layout: &quot;aboutnav&quot;type: &quot;aboutnav&quot;date: 2020-09-22 21:12:21---</code></pre><ul><li>在主题配置文件<code>_config.yml</code>下，搜索<code>navabout</code>并在子目录下添加：</li></ul><pre><code class="line-numbers language-yml">  name3: 关于  icon3: fas fa-info-circle  url3: /aboutnav</code></pre><blockquote><p>注意格式缩进对齐</p></blockquote><ul><li>在主题文件夹目录下/layout/新建aboutnav.ejs文件并写入：</li></ul><pre><code class="line-numbers language-html">---layout: false---&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;title&gt;关于|肆零肆&lt;/title&gt;&lt;style&gt;        .container_nav &#123;            width: 60%;            margin: 10% auto 0;            background-color: #ffffff;            padding: 0% 0%;            border-radius: 10px        &#125;        .ul_nav &#123;            padding-left: 20px;            line-height: 2.3        &#125;&lt;/style&gt;&lt;body&gt;    &lt;div class=&quot;container_nav&quot;&gt;        &lt;h1&gt;肆零肆导航-聚合导航网页使用指南&lt;/h1&gt;        &lt;h3&gt;网页特征&lt;/h3&gt;        &lt;ul class=&quot;ul_nav&quot;&gt;            &lt;li&gt;简洁舒适，无广告&lt;/li&gt;            &lt;li&gt;聚合搜索，多种搜索引擎自由选择&lt;/li&gt;            &lt;li&gt;夜间模式自由切换，保护你的双眼&lt;/li&gt;            &lt;li&gt;丰富的网页导航，一触即达&lt;/li&gt;            &lt;li&gt;黑科技网站聚合，高效生活&lt;/li&gt;            &lt;li&gt;细腻丝滑设计，沉浸其中&lt;/li&gt;            &lt;li&gt;设置搜索快捷方式，即刻搜索&lt;/li&gt;            &lt;li&gt;简洁强大，是初衷&lt;/li&gt;        &lt;/ul &gt;        &lt;h3&gt;使用技巧&lt;/h3&gt;        &lt;ul class=&quot;ul_nav&quot;&gt;        &lt;li&gt;打开网页光标自动至搜索栏；无需点击输入框，即可直接输入搜索内容&lt;/li&gt;        &lt;li&gt;搜索框内按入↑/↓，快速清除输入框内容&lt;/li&gt;        &lt;li&gt;滚轮下滑自动清空已输入内容&lt;/li&gt;        &lt;li&gt;输入搜索内容后回车即可搜索&lt;/li&gt;        &lt;li&gt;搜索回车/点击搜索后自动全选输入内容，方便快速下次编辑搜索内容&lt;/li&gt;        &lt;li&gt;回车/Tab键自动定位光标到输入框，无需鼠标点击🖱&lt;/li&gt;        &lt;li&gt;点击“回到顶部”按钮后，无需点击输入框即可直接搜索&lt;/li&gt;        &lt;/ul&gt;        &lt;h3&gt;其他说明&lt;/h3&gt;        &lt;ul class=&quot;ul_nav&quot;&gt;        &lt;li&gt;建议Ctrl + D收藏网站&lt;/li&gt;        &lt;li&gt;设置默认启动页（主页）：&lt;/li&gt;        &lt;li&gt;打开谷歌浏览器-设置-启动时-添加新网页-输入框输入：https://xmq.plus/nav-保存确定&lt;/li&gt;        &lt;li&gt;为了尽可能保证良好的使用体验，请使用谷歌浏览器&lt;/li&gt;        &lt;li&gt;谷歌浏览器下载地址:&lt;/li&gt;        &lt;a href=&quot;https://sumsung.lanzous.com/i87Jufckfif&quot;&gt;谷歌浏览器&lt;/a&gt;        &lt;/ul&gt;        &lt;a href=&quot;/nav&quot;&gt;回到首页&lt;/a&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><ul><li>效果图</li></ul><p><img src="https://images.xmq.plus/image-20200923082408087.png" alt="效果图"></p><ul><li>使用Typora创建页面</li></ul><p>上述方法利用纯Html不方便添加其他样式，可以借助Typora软件，使用Markdown写作完成后，直接生成Html：</p><img src="https://images.xmq.plus/image-20200923124454409.png" alt="Html export" style="zoom:50%;" /><ul><li>将生成好的Html使用文本编辑器打开，全选代码复制，粘贴到<code>aboutnav.ejs</code>中，并在代码最前面加入(不经过渲染)：</li></ul><pre><code>---layout: false---</code></pre><pre><code class="line-numbers language-html">---layout: false---&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&#39;UTF-8&#39;&gt;&lt;meta name=&#39;viewport&#39; content=&#39;width=device-width initial-scale=1&#39;&gt;&lt;title&gt;关于|肆零肆聚合导航网页使用指南&lt;/title&gt;&lt;link href=&#39;https://fonts.loli.net/css?family=Open+Sans:400italic,700italic,700,400&amp;subset=latin,latin-ext&#39; rel=&#39;stylesheet&#39; type=&#39;text/css&#39; /&gt;&lt;style type=&#39;text/css&#39;&gt;html &#123;overflow-x: initial !important;&#125;:root &#123; --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:&quot;Lucida Console&quot;,Consolas,&quot;Courier&quot;,monospace; &#125;html &#123; font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; &#125;body &#123; margin: 0px; padding: 0px; height: auto; bottom: 0px; top: 0px; left: 0px; right: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; tab-size: 4; &#125;iframe &#123; margin: auto; &#125;a.url &#123; word-break: break-all; &#125;a:active, a:hover &#123; outline: 0px; &#125;.in-text-selection, ::selection &#123; text-shadow: none; background: var(--select-text-bg-color); color: var(--select-text-font-color); &#125;#write &#123; margin: 0px auto; height: auto; width: inherit; word-break: normal; overflow-wrap: break-word; position: relative; white-space: normal; overflow-x: visible; padding-top: 40px; &#125;#write.first-line-indent p &#123; text-indent: 2em; &#125;#write.first-line-indent li p, #write.first-line-indent p * &#123; text-indent: 0px; &#125;#write.first-line-indent li &#123; margin-left: 2em; &#125;.for-image #write &#123; padding-left: 8px; padding-right: 8px; &#125;body.typora-export &#123; padding-left: 30px; padding-right: 30px; &#125;.typora-export .footnote-line, .typora-export li, .typora-export p &#123; white-space: pre-wrap; &#125;.typora-export .task-list-item input &#123; pointer-events: none; &#125;@media screen and (max-width: 500px) &#123;  body.typora-export &#123; padding-left: 0px; padding-right: 0px; &#125;  #write &#123; padding-left: 20px; padding-right: 20px; &#125;  .CodeMirror-sizer &#123; margin-left: 0px !important; &#125;  .CodeMirror-gutters &#123; display: none !important; &#125;&#125;#write li &gt; figure:last-child &#123; margin-bottom: 0.5rem; &#125;#write ol, #write ul &#123; position: relative; &#125;img &#123; max-width: 100%; vertical-align: middle; image-orientation: from-image; &#125;button, input, select, textarea &#123; color: inherit; font: inherit; &#125;input[type=&quot;checkbox&quot;], input[type=&quot;radio&quot;] &#123; line-height: normal; padding: 0px; &#125;*, ::after, ::before &#123; box-sizing: border-box; &#125;#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre &#123; width: inherit; &#125;#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p &#123; position: relative; &#125;p &#123; line-height: inherit; &#125;h1, h2, h3, h4, h5, h6 &#123; break-after: avoid-page; break-inside: avoid; orphans: 4; &#125;p &#123; orphans: 4; &#125;h1 &#123; font-size: 2rem; &#125;h2 &#123; font-size: 1.8rem; &#125;h3 &#123; font-size: 1.6rem; &#125;h4 &#123; font-size: 1.4rem; &#125;h5 &#123; font-size: 1.2rem; &#125;h6 &#123; font-size: 1rem; &#125;.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p &#123; margin-top: 1rem; margin-bottom: 1rem; &#125;.hidden &#123; display: none; &#125;.md-blockmeta &#123; color: rgb(204, 204, 204); font-weight: 700; font-style: italic; &#125;a &#123; cursor: pointer; &#125;sup.md-footnote &#123; padding: 2px 4px; background-color: rgba(238, 238, 238, 0.7); color: rgb(85, 85, 85); border-radius: 4px; cursor: pointer; &#125;sup.md-footnote a, sup.md-footnote a:hover &#123; color: inherit; text-transform: inherit; text-decoration: inherit; &#125;#write input[type=&quot;checkbox&quot;] &#123; cursor: pointer; width: inherit; height: inherit; &#125;figure &#123; overflow-x: auto; margin: 1.2em 0px; max-width: calc(100% + 16px); padding: 0px; &#125;figure &gt; table &#123; margin: 0px; &#125;tr &#123; break-inside: avoid; break-after: auto; &#125;thead &#123; display: table-header-group; &#125;table &#123; border-collapse: collapse; border-spacing: 0px; width: 100%; overflow: auto; break-inside: auto; text-align: left; &#125;table.md-table td &#123; min-width: 32px; &#125;.CodeMirror-gutters &#123; border-right: 0px; background-color: inherit; &#125;.CodeMirror-linenumber &#123; user-select: none; &#125;.CodeMirror &#123; text-align: left; &#125;.CodeMirror-placeholder &#123; opacity: 0.3; &#125;.CodeMirror pre &#123; padding: 0px 4px; &#125;.CodeMirror-lines &#123; padding: 0px; &#125;div.hr:focus &#123; cursor: none; &#125;#write pre &#123; white-space: pre-wrap; &#125;#write.fences-no-line-wrapping pre &#123; white-space: pre; &#125;#write pre.ty-contain-cm &#123; white-space: normal; &#125;.CodeMirror-gutters &#123; margin-right: 4px; &#125;.md-fences &#123; font-size: 0.9rem; display: block; break-inside: avoid; text-align: left; overflow: visible; white-space: pre; background: inherit; position: relative !important; &#125;.md-diagram-panel &#123; width: 100%; margin-top: 10px; text-align: center; padding-top: 0px; padding-bottom: 8px; overflow-x: auto; &#125;#write .md-fences.mock-cm &#123; white-space: pre-wrap; &#125;.md-fences.md-fences-with-lineno &#123; padding-left: 0px; &#125;#write.fences-no-line-wrapping .md-fences.mock-cm &#123; white-space: pre; overflow-x: auto; &#125;.md-fences.mock-cm.md-fences-with-lineno &#123; padding-left: 8px; &#125;.CodeMirror-line, twitterwidget &#123; break-inside: avoid; &#125;.footnotes &#123; opacity: 0.8; font-size: 0.9rem; margin-top: 1em; margin-bottom: 1em; &#125;.footnotes + .footnotes &#123; margin-top: 0px; &#125;.md-reset &#123; margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: top; background: 0px 0px; text-decoration: none; text-shadow: none; float: none; position: static; width: auto; height: auto; white-space: nowrap; cursor: inherit; -webkit-tap-highlight-color: transparent; line-height: normal; font-weight: 400; text-align: left; box-sizing: content-box; direction: ltr; &#125;li div &#123; padding-top: 0px; &#125;blockquote &#123; margin: 1rem 0px; &#125;li .mathjax-block, li p &#123; margin: 0.5rem 0px; &#125;li &#123; margin: 0px; position: relative; &#125;blockquote &gt; :last-child &#123; margin-bottom: 0px; &#125;blockquote &gt; :first-child, li &gt; :first-child &#123; margin-top: 0px; &#125;.footnotes-area &#123; color: rgb(136, 136, 136); margin-top: 0.714rem; padding-bottom: 0.143rem; white-space: normal; &#125;#write .footnote-line &#123; white-space: pre-wrap; &#125;@media print &#123;  body, html &#123; border: 1px solid transparent; height: 99%; break-after: avoid; break-before: avoid; font-variant-ligatures: no-common-ligatures; &#125;  #write &#123; margin-top: 0px; padding-top: 0px; border-color: transparent !important; &#125;  .typora-export * &#123; -webkit-print-color-adjust: exact; &#125;  html.blink-to-pdf &#123; font-size: 13px; &#125;  .typora-export #write &#123; break-after: avoid; &#125;  .typora-export #write::after &#123; height: 0px; &#125;  .is-mac table &#123; break-inside: avoid; &#125;&#125;.footnote-line &#123; margin-top: 0.714em; font-size: 0.7em; &#125;a img, img a &#123; cursor: pointer; &#125;pre.md-meta-block &#123; font-size: 0.8rem; min-height: 0.8rem; white-space: pre-wrap; background: rgb(204, 204, 204); display: block; overflow-x: hidden; &#125;p &gt; .md-image:only-child:not(.md-img-error) img, p &gt; img:only-child &#123; display: block; margin: auto; &#125;#write.first-line-indent p &gt; .md-image:only-child:not(.md-img-error) img &#123; left: -2em; position: relative; &#125;p &gt; .md-image:only-child &#123; display: inline-block; width: 100%; &#125;#write .MathJax_Display &#123; margin: 0.8em 0px 0px; &#125;.md-math-block &#123; width: 100%; &#125;.md-math-block:not(:empty)::after &#123; display: none; &#125;[contenteditable=&quot;true&quot;]:active, [contenteditable=&quot;true&quot;]:focus, [contenteditable=&quot;false&quot;]:active, [contenteditable=&quot;false&quot;]:focus &#123; outline: 0px; box-shadow: none; &#125;.md-task-list-item &#123; position: relative; list-style-type: none; &#125;.task-list-item.md-task-list-item &#123; padding-left: 0px; &#125;.md-task-list-item &gt; input &#123; position: absolute; top: 0px; left: 0px; margin-left: -1.2em; margin-top: calc(1em - 10px); border: none; &#125;.math &#123; font-size: 1rem; &#125;.md-toc &#123; min-height: 3.58rem; position: relative; font-size: 0.9rem; border-radius: 10px; &#125;.md-toc-content &#123; position: relative; margin-left: 0px; &#125;.md-toc-content::after, .md-toc::after &#123; display: none; &#125;.md-toc-item &#123; display: block; color: rgb(65, 131, 196); &#125;.md-toc-item a &#123; text-decoration: none; &#125;.md-toc-inner:hover &#123; text-decoration: underline; &#125;.md-toc-inner &#123; display: inline-block; cursor: pointer; &#125;.md-toc-h1 .md-toc-inner &#123; margin-left: 0px; font-weight: 700; &#125;.md-toc-h2 .md-toc-inner &#123; margin-left: 2em; &#125;.md-toc-h3 .md-toc-inner &#123; margin-left: 4em; &#125;.md-toc-h4 .md-toc-inner &#123; margin-left: 6em; &#125;.md-toc-h5 .md-toc-inner &#123; margin-left: 8em; &#125;.md-toc-h6 .md-toc-inner &#123; margin-left: 10em; &#125;@media screen and (max-width: 48em) &#123;  .md-toc-h3 .md-toc-inner &#123; margin-left: 3.5em; &#125;  .md-toc-h4 .md-toc-inner &#123; margin-left: 5em; &#125;  .md-toc-h5 .md-toc-inner &#123; margin-left: 6.5em; &#125;  .md-toc-h6 .md-toc-inner &#123; margin-left: 8em; &#125;&#125;a.md-toc-inner &#123; font-size: inherit; font-style: inherit; font-weight: inherit; line-height: inherit; &#125;.footnote-line a:not(.reversefootnote) &#123; color: inherit; &#125;.md-attr &#123; display: none; &#125;.md-fn-count::after &#123; content: &quot;.&quot;; &#125;code, pre, samp, tt &#123; font-family: var(--monospace); &#125;kbd &#123; margin: 0px 0.1em; padding: 0.1em 0.6em; font-size: 0.8em; color: rgb(36, 39, 41); background: rgb(255, 255, 255); border: 1px solid rgb(173, 179, 185); border-radius: 3px; box-shadow: rgba(12, 13, 14, 0.2) 0px 1px 0px, rgb(255, 255, 255) 0px 0px 0px 2px inset; white-space: nowrap; vertical-align: middle; &#125;.md-comment &#123; color: rgb(162, 127, 3); opacity: 0.8; font-family: var(--monospace); &#125;code &#123; text-align: left; vertical-align: initial; &#125;a.md-print-anchor &#123; white-space: pre !important; border-width: initial !important; border-style: none !important; border-color: initial !important; display: inline-block !important; position: absolute !important; width: 1px !important; right: 0px !important; outline: 0px !important; background: 0px 0px !important; text-decoration: initial !important; text-shadow: initial !important; &#125;.md-inline-math .MathJax_SVG .noError &#123; display: none !important; &#125;.html-for-mac .inline-math-svg .MathJax_SVG &#123; vertical-align: 0.2px; &#125;.md-math-block .MathJax_SVG_Display &#123; text-align: center; margin: 0px; position: relative; text-indent: 0px; max-width: none; max-height: none; min-height: 0px; min-width: 100%; width: auto; overflow-y: hidden; display: block !important; &#125;.MathJax_SVG_Display, .md-inline-math .MathJax_SVG_Display &#123; width: auto; margin: inherit; display: inline-block !important; &#125;.MathJax_SVG .MJX-monospace &#123; font-family: var(--monospace); &#125;.MathJax_SVG .MJX-sans-serif &#123; font-family: sans-serif; &#125;.MathJax_SVG &#123; display: inline; font-style: normal; font-weight: 400; line-height: normal; zoom: 90%; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; &#125;.MathJax_SVG * &#123; transition: none 0s ease 0s; &#125;.MathJax_SVG_Display svg &#123; vertical-align: middle !important; margin-bottom: 0px !important; margin-top: 0px !important; &#125;.os-windows.monocolor-emoji .md-emoji &#123; font-family: &quot;Segoe UI Symbol&quot;, sans-serif; &#125;.md-diagram-panel &gt; svg &#123; max-width: 100%; &#125;[lang=&quot;flow&quot;] svg, [lang=&quot;mermaid&quot;] svg &#123; max-width: 100%; height: auto; &#125;[lang=&quot;mermaid&quot;] .node text &#123; font-size: 1rem; &#125;table tr th &#123; border-bottom: 0px; &#125;video &#123; max-width: 100%; display: block; margin: 0px auto; &#125;iframe &#123; max-width: 100%; width: 100%; border: none; &#125;.highlight td, .highlight tr &#123; border: 0px; &#125;svg[id^=&quot;mermaidChart&quot;] &#123; line-height: 1em; &#125;mark &#123; background: rgb(255, 255, 0); color: rgb(0, 0, 0); &#125;.md-html-inline .md-plain, .md-html-inline strong, mark .md-inline-math, mark strong &#123; color: inherit; &#125;mark .md-meta &#123; color: rgb(0, 0, 0); opacity: 0.3 !important; &#125;@media print &#123;  .typora-export h1, .typora-export h2, .typora-export h3, .typora-export h4, .typora-export h5, .typora-export h6 &#123; break-inside: avoid; &#125;  .typora-export h1::after, .typora-export h2::after, .typora-export h3::after, .typora-export h4::after, .typora-export h5::after, .typora-export h6::after &#123; content: &quot;&quot;; display: block; height: 100px; margin-bottom: -100px; &#125;&#125;:root &#123;    --side-bar-bg-color: #fafafa;    --control-text-color: #777;&#125;@include-when-export url(https://fonts.loli.net/css?family=Open+Sans:400italic,700italic,700,400&amp;subset=latin,latin-ext);  html &#123;    font-size: 16px;&#125;body &#123;    font-family: &quot;Open Sans&quot;,&quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;    color: rgb(51, 51, 51);    line-height: 1.6;&#125;#write &#123;    max-width: 860px;      margin: 0 auto;      padding: 30px;&#125;@media only screen and (min-width: 1400px) &#123;    #write &#123;        max-width: 1024px;    &#125;&#125;@media only screen and (min-width: 1800px) &#123;    #write &#123;        max-width: 1200px;    &#125;&#125;#write &gt; ul:first-child,#write &gt; ol:first-child&#123;    margin-top: 30px;&#125;a &#123;    color: #4183C4;&#125;h1,h2,h3,h4,h5,h6 &#123;    position: relative;    margin-top: 1rem;    margin-bottom: 1rem;    font-weight: bold;    line-height: 1.4;    cursor: text;&#125;h1:hover a.anchor,h2:hover a.anchor,h3:hover a.anchor,h4:hover a.anchor,h5:hover a.anchor,h6:hover a.anchor &#123;    text-decoration: none;&#125;h1 tt,h1 code &#123;    font-size: inherit;&#125;h2 tt,h2 code &#123;    font-size: inherit;&#125;h3 tt,h3 code &#123;    font-size: inherit;&#125;h4 tt,h4 code &#123;    font-size: inherit;&#125;h5 tt,h5 code &#123;    font-size: inherit;&#125;h6 tt,h6 code &#123;    font-size: inherit;&#125;h1 &#123;    font-size: 2.25em;    line-height: 1.2;    border-bottom: 1px solid #eee;&#125;h2 &#123;    font-size: 1.75em;    line-height: 1.225;    border-bottom: 1px solid #eee;&#125;@media print &#123;    .typora-export h1,    .typora-export h2 &#123;        border-bottom: none;        padding-bottom: initial;    &#125;    .typora-export h1::after,    .typora-export h2::after &#123;        border-top: 1px solid #eee;        margin-top: .3em;    &#125;&#125;h3 &#123;    font-size: 1.5em;    line-height: 1.43;&#125;h4 &#123;    font-size: 1.25em;&#125;h5 &#123;    font-size: 1em;&#125;h6 &#123;   font-size: 1em;    color: #777;&#125;p,blockquote,ul,ol,dl,table&#123;    margin: 0.8em 0;&#125;li&gt;ol,li&gt;ul &#123;    margin: 0 0;&#125;hr &#123;    height: 2px;    padding: 0;    margin: 16px 0;    background-color: #e7e7e7;    border: 0 none;    overflow: hidden;    box-sizing: content-box;&#125;li p.first &#123;    display: inline-block;&#125;ul,ol &#123;    padding-left: 30px;&#125;ul:first-child,ol:first-child &#123;    margin-top: 0;&#125;ul:last-child,ol:last-child &#123;    margin-bottom: 0;&#125;blockquote &#123;    border-left: 4px solid #dfe2e5;    padding: 0 15px;    color: #777777;&#125;blockquote blockquote &#123;    padding-right: 0;&#125;table &#123;    padding: 0;    word-break: initial;&#125;table tr &#123;    border-top: 1px solid #dfe2e5;    margin: 0;    padding: 0;&#125;table tr:nth-child(2n),thead &#123;    background-color: #f8f8f8;&#125;table tr th &#123;    font-weight: bold;    border: 1px solid #dfe2e5;    border-bottom: 0;    margin: 0;    padding: 6px 13px;&#125;table tr td &#123;    border: 1px solid #dfe2e5;    margin: 0;    padding: 6px 13px;&#125;table tr th:first-child,table tr td:first-child &#123;    margin-top: 0;&#125;table tr th:last-child,table tr td:last-child &#123;    margin-bottom: 0;&#125;.CodeMirror-lines &#123;    padding-left: 4px;&#125;.code-tooltip &#123;    box-shadow: 0 1px 1px 0 rgba(0,28,36,.3);    border-top: 1px solid #eef2f2;&#125;.md-fences,code,tt &#123;    border: 1px solid #e7eaed;    background-color: #f8f8f8;    border-radius: 3px;    padding: 0;    padding: 2px 4px 0px 4px;    font-size: 0.9em;&#125;code &#123;    background-color: #f3f4f4;    padding: 0 2px 0 2px;&#125;.md-fences &#123;    margin-bottom: 15px;    margin-top: 15px;    padding-top: 8px;    padding-bottom: 6px;&#125;.md-task-list-item &gt; input &#123;  margin-left: -1.3em;&#125;@media print &#123;    html &#123;        font-size: 13px;    &#125;    table,    pre &#123;        page-break-inside: avoid;    &#125;    pre &#123;        word-wrap: break-word;    &#125;&#125;.md-fences &#123;    background-color: #f8f8f8;&#125;#write pre.md-meta-block &#123;    padding: 1rem;    font-size: 85%;    line-height: 1.45;    background-color: #f7f7f7;    border: 0;    border-radius: 3px;    color: #777777;    margin-top: 0 !important;&#125;.mathjax-block&gt;.code-tooltip &#123;    bottom: .375rem;&#125;.md-mathjax-midline &#123;    background: #fafafa;&#125;#write&gt;h3.md-focus:before&#123;    left: -1.5625rem;    top: .375rem;&#125;#write&gt;h4.md-focus:before&#123;    left: -1.5625rem;    top: .285714286rem;&#125;#write&gt;h5.md-focus:before&#123;    left: -1.5625rem;    top: .285714286rem;&#125;#write&gt;h6.md-focus:before&#123;    left: -1.5625rem;    top: .285714286rem;&#125;.md-image&gt;.md-meta &#123;    /*border: 1px solid #ddd;*/    border-radius: 3px;    padding: 2px 0px 0px 4px;    font-size: 0.9em;    color: inherit;&#125;.md-tag &#123;    color: #a7a7a7;    opacity: 1;&#125;.md-toc &#123;     margin-top:20px;    padding-bottom:20px;&#125;.sidebar-tabs &#123;    border-bottom: none;&#125;#typora-quick-open &#123;    border: 1px solid #ddd;    background-color: #f8f8f8;&#125;#typora-quick-open-item &#123;    background-color: #FAFAFA;    border-color: #FEFEFE #e5e5e5 #e5e5e5 #eee;    border-style: solid;    border-width: 1px;&#125;/** focus mode */.on-focus-mode blockquote &#123;    border-left-color: rgba(85, 85, 85, 0.12);&#125;header, .context-menu, .megamenu-content, footer&#123;    font-family: &quot;Segoe UI&quot;, &quot;Arial&quot;, sans-serif;&#125;.file-node-content:hover .file-node-icon,.file-node-content:hover .file-node-open-state&#123;    visibility: visible;&#125;.mac-seamless-mode #typora-sidebar &#123;    background-color: #fafafa;    background-color: var(--side-bar-bg-color);&#125;.md-lang &#123;    color: #b4654d;&#125;.html-for-mac .context-menu &#123;    --item-hover-bg-color: #E6F0FE;&#125;#md-notification .btn &#123;    border: 0;&#125;.dropdown-menu .divider &#123;    border-color: #e5e5e5;&#125;.ty-preferences .window-content &#123;    background-color: #fafafa;&#125;.ty-preferences .nav-group-item.active &#123;    color: white;    background: #999;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body class=&#39;typora-export os-windows&#39;&gt;&lt;div id=&#39;write&#39;  class=&#39;&#39;&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;肆零肆导航-聚合导航网页使用指南&quot; class=&quot;md-header-anchor&quot;&gt;&lt;/a&gt;&lt;span&gt;肆零肆导航-聚合导航网页使用指南&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://images.xmq.plus/image-20200923095419036.png&quot; alt=&quot;主页&quot;  /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;h3&gt;&lt;a name=&quot;网页特征&quot; class=&quot;md-header-anchor&quot;&gt;&lt;/a&gt;&lt;span&gt;网页特征&lt;/span&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;简洁舒适，无广告&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;聚合搜索，多种搜索引擎自由选择&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;夜间模式自由切换，保护你的双眼&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;丰富的网页导航，一触即达&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;黑科技网站聚合，高效生活&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;细腻丝滑设计，沉浸其中&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;设置搜索快捷方式，即刻搜索&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;简洁强大，是初衷&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;h3&gt;&lt;a name=&quot;使用技巧&quot; class=&quot;md-header-anchor&quot;&gt;&lt;/a&gt;&lt;span&gt;使用技巧&lt;/span&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;打开网页光标自动锁定搜索栏；无需点击输入框，即可直接输入搜索内容&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;kbd&gt;&lt;span&gt;Enter&lt;/span&gt;&lt;/kbd&gt;&lt;span&gt;/&lt;/span&gt;&lt;kbd&gt;&lt;span&gt;Tab&lt;/span&gt;&lt;/kbd&gt;&lt;span&gt;键自动定位光标到输入框，无需鼠标点击&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://images.xmq.plus/Tab.gif&quot; alt=&quot;Tab&quot; style=&quot;zoom: 67%;&quot; /&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;输入搜索内容后&lt;/span&gt;&lt;kbd&gt;&lt;span&gt;Enter&lt;/span&gt;&lt;/kbd&gt;&lt;span&gt;即可搜索&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;kbd&gt;&lt;span&gt;Enter&lt;/span&gt;&lt;/kbd&gt;&lt;span&gt;/点击🖱搜索后自动全选输入内容，方便快速下次编辑搜索内容&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;搜索框内按入&lt;/span&gt;&lt;kbd&gt;&lt;span&gt;↑&lt;/span&gt;&lt;/kbd&gt;&lt;span&gt;/&lt;/span&gt;&lt;kbd&gt;&lt;span&gt;↓&lt;/span&gt;&lt;/kbd&gt;&lt;span&gt;，快速清除输入框内容&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://images.xmq.plus/clear.gif&quot; alt=&quot;clear&quot; style=&quot;zoom: 67%;&quot; /&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;滚轮下滑自动清空已输入内容&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://images.xmq.plus/scroll.gif&quot; alt=&quot;scroll&quot; style=&quot;zoom:67%;&quot; /&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;点击&lt;/span&gt;&lt;code&gt;回到顶部&lt;/code&gt;&lt;span&gt;按钮，无需点击输入框即可直接搜索&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;h3&gt;&lt;a name=&quot;其他说明&quot; class=&quot;md-header-anchor&quot;&gt;&lt;/a&gt;&lt;span&gt;其他说明&lt;/span&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;建议&lt;/span&gt;&lt;kbd&gt;&lt;span&gt;Ctrl&lt;/span&gt;&lt;/kbd&gt;&lt;span&gt; +&lt;/span&gt;&lt;kbd&gt;&lt;span&gt;D&lt;/span&gt;&lt;/kbd&gt;&lt;span&gt;收藏网站&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;为了尽可能保证良好的使用体验，请使用谷歌浏览器，谷歌浏览器下载地址:&lt;/span&gt;&lt;a href=&#39;https://sumsung.lanzous.com/i87Jufckfif&#39;&gt;&lt;span&gt;谷歌浏览器&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;设置默认启动页（主页）：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;打开谷歌浏览器-设置-启动时-添加新网页-输入框输入：&lt;/span&gt;&lt;a href=&#39;https://xmq.plus/nav&#39;&gt;&lt;span&gt;https://xmq.plus/nav&lt;/span&gt;&lt;/a&gt;&lt;span&gt;-保存确定&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;h3&gt;&lt;a name=&quot;效果展示&quot; class=&quot;md-header-anchor&quot;&gt;&lt;/a&gt;&lt;span&gt;效果展示&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://images.xmq.plus/search.gif&quot; alt=&quot;search&quot; style=&quot;zoom:67%;&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://images.xmq.plus/change.gif&quot; alt=&quot;switch&quot;  /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://images.xmq.plus/image-20200923104326356.png&quot; alt=&quot;nav&quot;  /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href=&#39;https://xmq.plus/nav&#39;&gt;&lt;span&gt;←回到首页&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span&gt;copyright © 2020 xmq.plus All rights reserved.  湘ICP备2020018001号&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><ul><li>Typora生成效果</li></ul><p><a href="/aboutnav">导航-关于页面</a></p><h3 id="4-建立软件清单页面"><a href="#4-建立软件清单页面" class="headerlink" title="4.建立软件清单页面"></a>4.建立软件清单页面</h3><p>创建新页面<code>hexo new page mac</code>，更改新建<code>index.md</code>文件：</p><pre><code>---title: Mac软件date: 2020-08-27 22:31:51type: &quot;mac&quot;layout: &quot;mac&quot;---</code></pre><p>在<code>themes/layout/</code>下新建文件<code>mac.ejs</code>:</p><pre><code class="line-numbers language-js">&lt;%- partial(&#39;_partial/bg-cover&#39;) %&gt;&lt;style&gt;    .friends-container &#123;        margin-top: -100px;        margin-bottom: 30px;    &#125;    .friends-container .tag-title &#123;        margin-bottom: 10px;        color: #3C4858;        font-size: 1.75rem;        font-weight: 400;    &#125;    .frind-ship img &#123;        border-radius: 10%;    &#125;    /* 以下是按钮样式 */    .frind-ship &#123;        padding: 10px 20px;    &#125;    .frind-ship .title &#123;        display: flex;        align-items: center;    &#125;    .frind-ship .title div &#123;        color: #fff;        padding-left: 10px;    &#125;    .frind-ship .title img &#123;        width: 100px;        height: 100px;        flex-shrink: 0;    &#125;    .frind-ship .title h1 &#123;        padding-bottom: 5px;        border-bottom: 2px solid #fff;        position: relative;        top:-15px;        left: 3px;    &#125;    .friend-button &#123;        display: flex;        justify-content: center;        margin-bottom: -27px;    &#125;    .friend-button a &#123;        border-radius: 40px;    &#125;    .friend-all .tag-post &#123;        margin-bottom: 30px;    &#125;    .button-caution &#123;        background-color: #FF4351;        border-color: #FF4351;        color: #FFF;    &#125;    .button &#123;        font-weight: 300;        font-size: 16px;        font-family: &quot;Helvetica Neue Light&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Lucida Grande&quot;, sans-serif;        text-decoration: none;        text-align: center;        line-height: 40px;        height: 40px;        padding: 0 40px;        margin: 0;        display: inline-block;        appearance: none;        cursor: pointer;        border: none;        -webkit-box-sizing: border-box;        -moz-box-sizing: border-box;        box-sizing: border-box;        -webkit-transition-property: all;        transition-property: all;        -webkit-transition-duration: .3s;        transition-duration: .3s;    &#125;    .title &#123;        margin-bottom: 0rem !important;    &#125;    .card &#123;        margin: 3rem 0 1rem 0 !important;    &#125;    .button-glow.button-caution &#123;        -webkit-animation-name: glowing-caution;        animation-name: glowing-caution;    &#125;    @-webkit-keyframes glowing-caution &#123;        from &#123;            -webkit-box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);            box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);        &#125;        50% &#123;            -webkit-box-shadow: 0 0 20px rgba(255, 67, 81, 0.8);            box-shadow: 0 0 20px rgba(255, 67, 81, 0.8);        &#125;        to &#123;            -webkit-box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);            box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);        &#125;    &#125;    @keyframes glowing-caution &#123;        from &#123;            -webkit-box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);            box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);        &#125;        50% &#123;            -webkit-box-shadow: 0 0 20px rgba(255, 67, 81, 0.8);            box-shadow: 0 0 20px rgba(255, 67, 81, 0.8);        &#125;        to &#123;            -webkit-box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);            box-shadow: 0 0 0 rgba(255, 67, 81, 0.3);        &#125;    &#125;    .button-caution:hover &#123;        background-color: #ff7680;        border-color: #ff7680;        color: #FFF;        text-decoration: none;    &#125;    .frind-card1 &#123;        background-image: linear-gradient(to right, #4facfe 0%, #00f2fe 100%);    &#125;    .frind-card2 &#123;        background-image: linear-gradient(135deg, #667eea 0%, #764ba2 100%);    &#125;    .frind-card3 &#123;        background-image: linear-gradient(to right, #b8cbb8 0%, #b8cbb8 0%, #b465da 0%, #cf6cc9 33%, #ee609c 66%, #ee609c 100%);    &#125;    .frind-card4 &#123;        background-image: linear-gradient(to right, #6a11cb 0%, #2575fc 100%);    &#125;    .frind-card5 &#123;        background-image: linear-gradient(to top, #c471f5 0%, #fa71cd 100%);    &#125;    .frind-card6 &#123;        background-image: linear-gradient(to top, #48c6ef 0%, #6f86d6 100%);    &#125;    .frind-card7 &#123;        background-image: linear-gradient(to top, #0ba360 0%, #3cba92 100%);    &#125;    .frind-card8 &#123;        background-image: linear-gradient(to top, #0c3483 0%, #a2b6df 100%, #6b8cce 100%, #a2b6df 100%);    &#125;    .frind-card9 &#123;        background-image: linear-gradient(to right, #ff758c 0%, #ff7eb3 100%);    &#125;    .frind-card10 &#123;        background-image: linear-gradient(to top, #f77062 0%, #fe5196 100%);    &#125;    article .card &#123;        overflow: visible !important;    &#125;&lt;/style&gt;&lt;main class=&quot;content&quot;&gt;    &lt;div class=&quot;container friends-container&quot;&gt;        &lt;div class=&quot;card&quot;&gt;            &lt;div class=&quot;card-content&quot;&gt;                &lt;div class=&quot;tag-title center-align&quot;&gt;                    &lt;i class=&quot;fab fa-windows&quot;&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;Mac软件清单                &lt;/div&gt;                &lt;article id=&quot;friends-link&quot;&gt;                    &lt;% if (site.data &amp;&amp; site.data.mac) &#123; %&gt;                    &lt;% var friends = site.data.mac; %&gt;                    &lt;div class=&quot;row tags-posts friend-all&quot;&gt;                        &lt;% for (var i = 0, len = friends.length; i &lt; len; i++) &#123; %&gt;                        &lt;% var friend = friends[i]; %&gt;                        &lt;div class=&quot;col s12 m6 l4 friend-div&quot; data-aos=&quot;zoom-in-up&quot;&gt;                            &lt;div class=&quot;card frind-card&lt;%- ((i % 10) +1) %&gt;&quot;&gt;                                &lt;div class=&quot;frind-ship&quot;&gt;                                    &lt;div class=&quot;title&quot;&gt;                                        &lt;img src=&quot;&lt;%- url_for(friend.avatar) %&gt;&quot; alt=&quot;img&quot;&gt;                                        &lt;div&gt;                                            &lt;h1 class=&quot;friend-name&quot;&gt;&lt;%= friend.name %&gt;&lt;/h1&gt;                                            &lt;p style=&quot;position: relative;top: -35px;&quot;&gt;&lt;%= friend.introduction %&gt;&lt;/p&gt;                                        &lt;/div&gt;                                    &lt;/div&gt;                                    &lt;div class=&quot;friend-button&quot;&gt;                                        &lt;a href=&quot;&lt;%- url_for(friend.url) %&gt;&quot; target=&quot;_blank&quot;                                            class=&quot;button button-glow button-rounded button-caution&quot;&gt;                                            &lt;%= friend.title %&gt;                                        &lt;/a&gt;                                    &lt;/div&gt;                                &lt;/div&gt;                            &lt;/div&gt;                        &lt;/div&gt;                        &lt;% &#125; %&gt;                    &lt;/div&gt;                    &lt;% &#125; %&gt;                &lt;/article&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class=&quot;card&quot;&gt;            &lt;div class=&quot;card-content&quot;&gt;                &lt;p style=&quot;text-align: center;&quot;&gt;软件密码：1234&lt;/p&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/main&gt;&lt;script&gt;    $(function () &#123;        $(&#39;#friends-link&#39;).masonry(&#123;            itemSelector: &#39;.friend-div&#39;        &#125;);    &#125;);&lt;/script&gt;</code></pre><blockquote><p>如需单独设置封面可将顶栏<code>&lt;%- partial(&#39;_partial/bg-cover&#39;) %&gt;</code>替换为相应ejs中的内容，相应修改即可。</p></blockquote><h3 id="5-文章生成永久链接"><a href="#5-文章生成永久链接" class="headerlink" title="5.文章生成永久链接"></a>5.文章生成永久链接</h3><p>主题默认的文章链接配置是：</p><pre><code class="line-numbers language-yml">permalink: :year/:month/:day/:title</code></pre><p>这种生成的链接地址很长，文章版权的链接地址会出现一大串字符编码，一点也不好看。因此需要修改文章生成链接的格式。</p><p>首先再根目录下执行下面的命令：</p><p><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlinkGitHub 地址</a></p><pre><code class="line-numbers language-yml">npm install hexo-abbrlink --save</code></pre><p>然后站点配置文件下添加如下配置：</p><pre><code class="line-numbers language-yml">abbrlink:    alg: crc16   #算法： crc16(default) and crc32    rep: hex     #进制： dec(default) and hex: dec #输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制</code></pre><p>再将站点配置文件的 permalink 的值修改为：</p><pre><code class="line-numbers language-yml">permalink: posts/:abbrlink.html  # 此处可以自己设置，也可以直接使用 /:abbrlink</code></pre><p>生成文章的链接格式就会是如下样例（官方样例）:</p><pre><code class="line-numbers language-yml">crc16 &amp; hexhttps://post.zz173.com/posts/66c8.htmlcrc16 &amp; dechttps://post.zz173.com/posts/65535.htmlcrc32 &amp; hexhttps://post.zz173.com/posts/8ddf18fb.htmlcrc32 &amp; dechttps://post.zz173.com/posts/1690090958.html</code></pre><p>生成完后，原 md 文件的 Front-matter 内会增加 abbrlink 字段，值为生成的 ID 。这个字段确保了在我们修改了 Front-matter 内的博客标题 title 或创建日期 date 字段之后而不会改变链接地址。</p><h3 id="6-“关于”页面增加简历"><a href="#6-“关于”页面增加简历" class="headerlink" title="6.“关于”页面增加简历"></a>6.“关于”页面增加简历</h3><p>修改<code>/themes/matery/layout/about.ejs</code>，找到<code>&lt;div class=&quot;card&quot;&gt;</code>标签，然后找到它对应的<code>&lt;/div&gt;</code>标签，接在后面新增一个<code>card</code>，语句如下：</p><pre><code class="line-numbers language-html">&lt;div class=&quot;card&quot;&gt;    &lt;div class=&quot;card-content&quot;&gt;        &lt;div class=&quot;card-content article-card-content&quot;&gt;                &lt;div class=&quot;title center-align&quot; data-aos=&quot;zoom-in-up&quot;&gt;                    &lt;i class=&quot;fa fa-address-book&quot;&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;%- __(&#39;myCV&#39;) %&gt;                &lt;/div&gt;                &lt;div id=&quot;articleContent&quot; data-aos=&quot;fade-up&quot;&gt;                    &lt;%- page.content %&gt;                &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt;</code></pre><p>这样就会多出一张<code>card</code>，然后可以在<code>/source/about/index.md</code>下面写上你的简历了，当然这里的位置随你自己设置，你也可以把简历作为第一个<code>card</code>。</p><h3 id="7-压缩代码"><a href="#7-压缩代码" class="headerlink" title="7.压缩代码"></a>7.压缩代码</h3><p>因为 hexo 生成的 html、css、js 等都有很多的空格或者换行，而空格和换行也是占用字节的，所以需要将空格换行去掉也就是我要进行的 “压缩”。</p><p>有人说空格换行能占多少字节？确实占不了多少，但是一个人访问是这么多字节，那么一百人，一万人呢？加起来这量就不少了吧，这都是流量啊！这也是很多 css/js 文件的后缀为.min.js 或.min.css 的原因。虽然我们可能没那么多访问量，但是能减小一点资源文件的大小也是对访问速度有那么一点提升的。</p><p>我们采用 gulp 代码压缩方式。</p><p>使用方法：</p><p>进入站点根目录下依次执行下面的命令：</p><pre><code class="line-numbers language-bash"># 全局安装gulp模块npm install gulp -g# 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行npm install gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save# 额外的功能模块npm install gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save</code></pre><p>在 Hexo 根目录新建文件 gulpfile.js，并复制以下内容到文件中，有中文注释，可以根据自己需求修改。（注意：文件名不能错，一定为 gulpfile.js，否则会出错！）</p><pre><code class="line-numbers language-JS">var gulp = require(&quot;gulp&quot;);var debug = require(&quot;gulp-debug&quot;);var cleancss = require(&quot;gulp-clean-css&quot;); //css压缩组件var uglify = require(&quot;gulp-uglify&quot;); //js压缩组件var htmlmin = require(&quot;gulp-htmlmin&quot;); //html压缩组件var htmlclean = require(&quot;gulp-htmlclean&quot;); //html清理组件var imagemin = require(&quot;gulp-imagemin&quot;); //图片压缩组件var changed = require(&quot;gulp-changed&quot;); //文件更改校验组件var gulpif = require(&quot;gulp-if&quot;); //任务 帮助调用组件var plumber = require(&quot;gulp-plumber&quot;); //容错组件（发生错误不跳出任务，并报出错误内容）var isScriptAll = true; //是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)var isDebug = true; //是否调试显示 编译通过的文件var gulpBabel = require(&quot;gulp-babel&quot;);var es2015Preset = require(&quot;babel-preset-es2015&quot;);var del = require(&quot;del&quot;);var Hexo = require(&quot;hexo&quot;);var hexo = new Hexo(process.cwd(), &#123;&#125;); // 初始化一个hexo对象// 清除public文件夹gulp.task(&quot;clean&quot;, function () &#123;    return del([&quot;public/**/*&quot;]);&#125;);// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return// 创建静态页面 （等同 hexo generate）gulp.task(&quot;generate&quot;, function () &#123;    return hexo.init().then(function () &#123;        return hexo            .call(&quot;generate&quot;, &#123;                watch: false            &#125;)            .then(function () &#123;                return hexo.exit();            &#125;)            .catch(function (err) &#123;                return hexo.exit(err);            &#125;);    &#125;);&#125;);// 启动Hexo服务器gulp.task(&quot;server&quot;, function () &#123;    return hexo        .init()        .then(function () &#123;            return hexo.call(&quot;server&quot;, &#123;&#125;);        &#125;)        .catch(function (err) &#123;            console.log(err);        &#125;);&#125;);// 部署到服务器gulp.task(&quot;deploy&quot;, function () &#123;    return hexo.init().then(function () &#123;        return hexo            .call(&quot;deploy&quot;, &#123;                watch: false            &#125;)            .then(function () &#123;                return hexo.exit();            &#125;)            .catch(function (err) &#123;                return hexo.exit(err);            &#125;);    &#125;);&#125;);// 压缩public目录下的js文件gulp.task(&quot;compressJs&quot;, function () &#123;    return gulp        .src([&quot;./public/**/*.js&quot;, &quot;!./public/libs/**&quot;]) //排除的js        .pipe(gulpif(!isScriptAll, changed(&quot;./public&quot;)))        .pipe(gulpif(isDebug, debug(&#123; title: &quot;Compress JS:&quot; &#125;)))        .pipe(plumber())        .pipe(            gulpBabel(&#123;                presets: [es2015Preset] // es5检查机制            &#125;)        )        .pipe(uglify()) //调用压缩组件方法uglify(),对合并的文件进行压缩        .pipe(gulp.dest(&quot;./public&quot;)); //输出到目标目录&#125;);// 压缩public目录下的css文件gulp.task(&quot;compressCss&quot;, function () &#123;    var option = &#123;        rebase: false,        //advanced: true, //类型：Boolean 默认：true [是否开启高级优化（合并选择器等）]        compatibility: &quot;ie7&quot; //保留ie7及以下兼容写法 类型：String 默认：&#39;&#39;or&#39;*&#39; [启用兼容模式； &#39;ie7&#39;：IE7兼容模式，&#39;ie8&#39;：IE8兼容模式，&#39;*&#39;：IE9+兼容模式]        //keepBreaks: true, //类型：Boolean 默认：false [是否保留换行]        //keepSpecialComments: &#39;*&#39; //保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀    &#125;;    return gulp        .src([&quot;./public/**/*.css&quot;, &quot;!./public/**/*.min.css&quot;]) //排除的css        .pipe(gulpif(!isScriptAll, changed(&quot;./public&quot;)))        .pipe(gulpif(isDebug, debug(&#123; title: &quot;Compress CSS:&quot; &#125;)))        .pipe(plumber())        .pipe(cleancss(option))        .pipe(gulp.dest(&quot;./public&quot;));&#125;);// 压缩public目录下的html文件gulp.task(&quot;compressHtml&quot;, function () &#123;    var cleanOptions = &#123;        protect: /&lt;\!--%fooTemplate\b.*?%--&gt;/g, //忽略处理        unprotect: /&lt;script [^&gt;]*\btype=&quot;text\/x-handlebars-template&quot;[\s\S]+?&lt;\/script&gt;/gi //特殊处理    &#125;;    var minOption = &#123;        collapseWhitespace: true, //压缩HTML        collapseBooleanAttributes: true, //省略布尔属性的值 &lt;input checked=&quot;true&quot;/&gt; ==&gt; &lt;input /&gt;        removeEmptyAttributes: true, //删除所有空格作属性值 &lt;input id=&quot;&quot; /&gt; ==&gt; &lt;input /&gt;        removeScriptTypeAttributes: true, //删除&lt;script&gt;的type=&quot;text/javascript&quot;        removeStyleLinkTypeAttributes: true, //删除&lt;style&gt;和&lt;link&gt;的type=&quot;text/css&quot;        removeComments: true, //清除HTML注释        minifyJS: true, //压缩页面JS        minifyCSS: true, //压缩页面CSS        minifyURLs: true //替换页面URL    &#125;;    return gulp        .src(&quot;./public/**/*.html&quot;)        .pipe(gulpif(isDebug, debug(&#123; title: &quot;Compress HTML:&quot; &#125;)))        .pipe(plumber())        .pipe(htmlclean(cleanOptions))        .pipe(htmlmin(minOption))        .pipe(gulp.dest(&quot;./public&quot;));&#125;);// 压缩 public/medias 目录内图片gulp.task(&quot;compressImage&quot;, function () &#123;    var option = &#123;        optimizationLevel: 5, //类型：Number 默认：3 取值范围：0-7（优化等级）        progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片        interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染        multipass: false //类型：Boolean 默认：false 多次优化svg直到完全优化    &#125;;    return gulp        .src(&quot;./public/medias/**/*.*&quot;)        .pipe(gulpif(!isScriptAll, changed(&quot;./public/medias&quot;)))        .pipe(gulpif(isDebug, debug(&#123; title: &quot;Compress Images:&quot; &#125;)))        .pipe(plumber())        .pipe(imagemin(option))        .pipe(gulp.dest(&quot;./public&quot;));&#125;);// 执行顺序： 清除public目录 -&gt; 产生原始博客内容 -&gt; 执行压缩混淆 -&gt; 部署到服务器gulp.task(    &quot;build&quot;,    gulp.series(        &quot;clean&quot;,        &quot;generate&quot;,        &quot;compressHtml&quot;,        &quot;compressCss&quot;,        &quot;compressJs&quot;,        &quot;compressImage&quot;,        gulp.parallel(&quot;deploy&quot;)    ));// 默认任务gulp.task(    &quot;default&quot;,    gulp.series(        &quot;clean&quot;,        &quot;generate&quot;,        gulp.parallel(&quot;compressHtml&quot;, &quot;compressCss&quot;, &quot;compressJs&quot;,&quot;compressImage&quot;)    ));//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</code></pre><p>以后的执行方式有两种：</p><ul><li>直接在 Hexo 根目录执行 gulp 或者 gulp default ，这个命令相当于 hexo cl&amp;&amp;hexo g 并且再把代码和图片压缩。</li><li>在 Hexo 根目录执行 gulp build ，这个命令与第 1 种相比是：在最后又加了个 hexo d ，等于说生成、压缩文件后又帮你自动部署了。</li></ul><blockquote><p>值得注意的是：这个加入了图片压缩，如果不想用图片压缩可以把第 154 行的 “compressImage”, 和第 165 行的 ,”compressImage” 去掉即可</p></blockquote><h2 id="七、常见问题"><a href="#七、常见问题" class="headerlink" title="七、常见问题"></a>七、常见问题</h2><h3 id="1-文章代码块乱码"><a href="#1-文章代码块乱码" class="headerlink" title="1.文章代码块乱码"></a>1.文章代码块乱码</h3><p><strong>问题描述：</strong> 一是代码块中的 <code>&#123; &#125;</code> 被转义，二是代码块中的代码可能会被渲染，甚至会影响整个文章页面的布局</p><img src="https://images.xmq.plus/image-20200925163012097.png" alt="代码显示异常" style="zoom: 67%;" /><p><img src="https://images.xmq.plus/image-20200925163102717.png" alt="代码显示异常"></p><p><strong>解决办法：</strong>卸载现有新版本，更换<a href="mailto:&#x68;&#x65;&#120;&#111;&#x40;&#x34;&#46;&#x32;&#46;&#x31;">&#x68;&#x65;&#120;&#111;&#x40;&#x34;&#46;&#x32;&#46;&#x31;</a>版本</p><p><strong>具体步骤：</strong></p><ul><li><p>将版本降为低版本</p><p>先卸载现有版本 npm uninstall hexo-cli -g</p></li><li><p>然后重新安装<code>npm hexo@4.2.1</code></p><pre><code class="line-numbers language-bash">npm install hexo@4.2.1npm install hexo-cli -g</code></pre></li><li><p>重新创建一个文件夹<code>matery</code>，重新<code>hexo init matery</code></p></li><li><p>将所有文件跳过式移动到新文件夹中(千万不要点替换文件)</p></li><li><p>然后再将自己的根目录下的<code>_config.yml</code>替换到新文件夹下根目录位置</p></li><li><p>删除自带主题<code>landscape</code></p></li><li><p>以后不要安装<code>Prism_plugin</code>插件，否则会出现同样的问题</p></li><li><p>卸载插件命令：<code>npm un -S hexo-prism-plugin</code></p></li></ul><h3 id="2-卸载代码高亮插件后代码无法高亮"><a href="#2-卸载代码高亮插件后代码无法高亮" class="headerlink" title="2.卸载代码高亮插件后代码无法高亮"></a>2.卸载代码高亮插件后代码无法高亮</h3><p><strong>问题描述：</strong>卸载代码高亮插件Prism_plugin后代码无法高亮</p><p><strong>解决办法：</strong>Prism_plugin插件在metary主题中无法正常使用，就换一种方式。</p><p><strong>具体办法：</strong></p><ul><li><p>1.进入prismjs官网：<a href="https://prismjs.com/download.html">https://prismjs.com/download.html</a></p></li><li><p>2.选择主题、语言、其他插件</p></li></ul><p>选择 theme 主题、language 支持的语言（不要选太多，够用就好）、plugin 插件（可以选Line Numbers、Copy to Clipboard Button，其他的看自己需求）；然后点击下载按钮就行了；</p><p><img src="https://images.xmq.plus/image-20200926155658145.png" alt="下载"></p><ul><li>3.文件放置位置</li></ul><p>step1. 在themes\matery\source\js下新建prism文件夹，用来存放js与css代码。</p><p>step2. 找到此文件hexo-theme-matery\layout_partial\head.ejs打开，在标签之前黏贴以下代码：</p><pre><code class="line-numbers language-html">&lt;link rel=&quot;stylesheet&quot; href=&quot;/js/prism/prism.css&quot;&gt; </code></pre><blockquote><p>如果不存在可以直接放在layout.ejs文件<head></head>中</p></blockquote><p>step3. 找到此文件hexo-theme-matery\layout_partial\footer.ejs打开，在最后部分黏贴以下代码：</p><pre><code class="line-numbers language-js">&lt;script src=&quot;/js/prism/prism.js&quot; async&gt;&lt;/script&gt;</code></pre><p>step4. 记得在hexo的根目录_config.yml下设置enable: false</p><p><code>highlight:  enable: false </code></p><p>step5. 重新生成博客文件，重启本地服务。</p><p><code>$ hexo clean  hexo generate $ hexo server</code></p><h3 id="3-代码压缩插件压缩后无法显示博客文章"><a href="#3-代码压缩插件压缩后无法显示博客文章" class="headerlink" title="3.代码压缩插件压缩后无法显示博客文章"></a>3.代码压缩插件压缩后无法显示博客文章</h3><p><strong>问题描述</strong>：代码压缩脚本gulp生成的文章博客无法显示</p><p><strong>解决办法：</strong>查看网页文章链接是否带有<code>.html</code>后缀，在配置文件中加上即可</p><p><strong>具体步骤：</strong></p><p>根目录下修改配置文件_config.yml：</p><pre><code class="line-numbers language-yml">pretty_urls:    trailing_index: true # 是否在永久链接中保留尾部的 index.html，设置为 false 时去除    trailing_html: true # 是否在永久链接中保留尾部的.html, 设置为false时去除(对尾部的index.html无效)</code></pre><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://hexo.io/zh-cn/">Hexo官方</a></li><li><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">hexo-theme-matery</a></li><li><a href="https://yafine-blog.cn/posts/4ab2.html">Hexo+github 搭建博客 (超级详细版，精细入微)</a></li><li><a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></li><li><a href="https://zhangxiaocai.cn/posts/a53a9069.html">matery常见问题解决</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WJ-7B型扣件安装说明会议记录</title>
      <link href="posts/90ce95e6.html"/>
      <url>posts/90ce95e6.html</url>
      
        <content type="html"><![CDATA[<p>2020.08.24    星期一</p><h2 id="培训流程："><a href="#培训流程：" class="headerlink" title="培训流程："></a>培训流程：</h2><p>1.培训人员对本工程或本工程中的一项细节进行详细解说。</p><p>2.培训人员提出存在的疑问，培训人员进行答疑。</p><h2 id="培训内容："><a href="#培训内容：" class="headerlink" title="培训内容："></a>培训内容：</h2><p>1.WJ-7B扣件的组成及安装注意事项</p><h2 id="一、部件组成及说明"><a href="#一、部件组成及说明" class="headerlink" title="一、部件组成及说明"></a>一、部件组成及说明</h2><p><img src="https://images.xmq.plus/20200829085935.png" alt="WJ-7B扣件组成"></p><img src="https://images.xmq.plus/20200829114106.jpg" alt="WJ-7B标准套件" style="zoom: 25%;" /><ol><li>弹条</li></ol><p><img src="https://images.xmq.plus/20200829090918.png" alt="弹条型号"></p><blockquote><p>一般地段使用W1弹条，直径14mm；小阻力地段使用X2型，直径13mm</p></blockquote><img src="https://images.xmq.plus/20200829114223.png" alt="X2弹条" style="zoom: 50%;" /><ol start="2"><li>轨下垫板</li></ol><p>轨下垫板分为A、 B两类， A类兼顾货运的客运专线， B类用于无货运的客运专线。每一类又分为一般地段使用的<strong>橡胶垫板</strong>和桥上使用的<strong>复合垫板</strong>两种。  </p><p><img src="https://images.xmq.plus/20200829091427.png" alt="轨下垫板"></p><blockquote><p>一般地段使用橡胶垫板，小阻力地段采用复合垫板</p></blockquote><img src="https://images.xmq.plus/20200829114423.png" alt="橡胶垫板" style="zoom:50%;" /><img src="https://images.xmq.plus/20200829114609.png" alt="复合垫板" style="zoom:50%;" /><ol start="3"><li>绝缘块</li></ol><p>绝缘块分为9号和10号两种，正常安装时采用9号绝缘块，当绝缘块与铁垫板挡肩的缝隙大于1mm时更换为10号绝缘块。  </p><img src="https://images.xmq.plus/20200829091745.png" alt="绝缘块" style="zoom:80%;" /><blockquote><p>10号绝缘块如需要，自行购买。</p></blockquote><p>9号绝缘块</p><img src="https://images.xmq.plus/20200829114858.png" alt="9号绝缘块" style="zoom: 80%;" /><ol start="4"><li>绝缘缓冲垫板</li></ol><p>绝缘缓冲垫板分为2mm和6mm两种厚度，正常安装时采用6mm厚垫板，钢轨高低位置负调整时采用2mm的垫板。  </p><img src="https://images.xmq.plus/20200829092108.png" alt="绝缘缓冲垫板" style="zoom:50%;" /><p>绝缘缓冲垫板与铁垫板送过来时已经配套</p><img src="https://images.xmq.plus/20200829115117.png" alt="绝缘缓冲垫板与铁垫板" style="zoom:80%;" /><ol start="5"><li>预埋套管</li></ol><p>该部件预先埋设于混凝土轨枕或轨道板中，埋设精度应满足图示的要求，且预埋套管顶面应低于轨枕或轨道板承轨面0~0.5mm。预埋套管埋设后，如不在轨枕厂进行扣件预组装，应加盖塑料（或其他材料）盖以防雨水和泥污进入。 </p><p><img src="https://images.xmq.plus/20200829092715.png" alt="预埋套管"></p><img src="https://images.xmq.plus/20200829093155.jpg" alt="轨枕预埋套管" style="zoom:67%;" /><blockquote><p>使用塑料盖盖号的轨枕</p></blockquote><ol start="6"><li>调高垫板</li></ol><p>调高垫板分<strong>轨下调高垫板</strong>和<strong>铁垫板下调高垫板</strong>两种，分别放置于轨下垫板与铁垫板之间和铁垫板与绝缘缓冲垫板之间。</p><ul><li>轨下调高垫板按厚度分为0.5mm、 1mm、 2mm、 5mm和8mm五种规格。  </li></ul><img src="https://images.xmq.plus/20200829093641.png" alt="轨下调高垫板" style="zoom:67%;" /><blockquote><p>需要另行购买</p></blockquote><ul><li>铁垫板下调高垫板</li></ul><p>铁垫板下调高垫板放置于铁垫板与绝缘缓冲垫板之间。铁垫板下调高垫板只有一种规格，厚度为8mm。  </p><img src="https://images.xmq.plus/20200829093744.png" alt="铁垫板下调高垫板" style="zoom:67%;" /><blockquote><p>需要另行购买</p></blockquote><h2 id="二、铺轨顺序及要求"><a href="#二、铺轨顺序及要求" class="headerlink" title="二、铺轨顺序及要求"></a>二、铺轨顺序及要求</h2><ol><li>安装前准备工作</li></ol><ul><li>选择弹条型号和轨下垫板</li><li>准备9号绝缘块和适当的10号绝缘块</li><li>准备6mm厚绝缘缓冲垫板 </li><li>清除轨枕泥污，摘除的塑料盖，清除杂物和积水，在套管中注入约15g铁路专用防护油脂</li></ul><img src="https://images.xmq.plus/20200829094614.png" alt="清理轨枕" style="zoom:67%;" /><ol start="2"><li>预安装</li></ol><p>步骤1：安放绝缘缓冲垫板</p><img src="https://images.xmq.plus/20200829094850.png" alt="安放绝缘缓冲垫板" style="zoom:67%;" /><p>步骤2：安放铁垫板</p><p>安放铁垫板，使<strong>轨底坡朝向轨道内侧</strong>（按铁垫板上的箭头方向）。铁垫板的螺栓孔中心应与预埋套管中心对正。</p><p><img src="https://images.xmq.plus/20200829095646.png" alt="安放铁垫板"></p><blockquote><p>正常安装下不需要放置铁垫板下调高垫板，绝缘缓冲垫板上直接放置铁垫板</p></blockquote><p><img src="https://images.xmq.plus/20200829095618.png" alt="铁垫板放置"></p><p>单根轨枕上安装两块铁垫板后的效果图：</p><p><img src="https://images.xmq.plus/20200829100055.png" alt="安放效果图"></p><p>步骤3：安放平垫块</p><p>将平垫块安放在铁垫板上，并使平垫块距圆孔中心较长一侧朝内。</p><p><img src="https://images.xmq.plus/20200829100313.png" alt="安放平垫圈"></p><img src="https://images.xmq.plus/20200829121341.png" alt="平垫块" style="zoom:67%;" /><p>核对方法</p><img src="https://images.xmq.plus/20200829100856.png" alt="标记线对齐" style="zoom:67%;" /><img src="https://images.xmq.plus/20200829121626.png" alt="标记线对齐" style="zoom:67%;" /><p>步骤4：安放重型弹簧垫圈和锚固螺栓</p><p>将锚固螺栓套上弹簧垫圈，先用手旋入预埋套管中。在锚固螺栓拧紧前调整铁垫板位置，使铁垫板上外侧标记线与平垫块上的标记线对齐，然后用可控制扭矩的扳手或机具以<strong>100~150N.m</strong>的扭矩紧固锚固螺栓。  </p><img src="https://images.xmq.plus/20200829100551.png" alt="安放锚固螺栓" style="zoom:67%;" /><blockquote><p>锚固螺栓初调扭矩100~150N·m</p></blockquote><ol start="3"><li>现场最终安装</li></ol><p>步骤1：安放轨下垫板 </p><p>清除铁垫板承轨面泥污，将轨下垫板按正确的方位安放在铁垫板承轨面上。  </p><img src="https://images.xmq.plus/20200829101047.png" alt="安装橡胶垫板" style="zoom:67%;" /><p>橡胶垫铺设方位：</p><img src="https://images.xmq.plus/20200829101230.png" alt="橡胶垫铺设方法" style="zoom:67%;" /><img src="https://images.xmq.plus/20200829121740.png" alt="橡胶垫板摆放" style="zoom:50%;" /><p>步骤2：安放钢轨</p><p>清除轨底上下面的泥污，将钢轨安放在轨下垫板的中间位置。  </p><p><img src="https://images.xmq.plus/20200829101334.png" alt="安放钢轨"></p><p>步骤3：安放绝缘块</p><p>将9号绝缘块安放在钢轨和铁垫板挡肩之间，不得猛烈敲击使其入位，绝缘块与钢轨接触面应密贴。如绝缘块与铁垫板挡肩的缝隙大于1mm时，应调换为10号绝缘块。</p><p><img src="https://images.xmq.plus/20200829101451.png" alt="安放钢轨"></p><p><img src="https://images.xmq.plus/20200829101548.png" alt="安放示意"></p><p>步骤4：安放T型螺栓</p><p>将T型螺栓螺纹部分涂油，然后安放。  </p><p><img src="https://images.xmq.plus/20200829101746.png" alt="防护油脂"></p><blockquote><p>涂油是为了防止螺栓锈蚀，且在运营期间需要定期涂油。</p></blockquote><p>将T型螺栓头部按照如图所示的角度，插入铁垫板</p><p><img src="https://images.xmq.plus/20200829102005.png" alt="插入铁垫板"></p><p>T型螺栓头部插入铁垫板后，按<strong>顺时针方向</strong>旋转T型螺栓90° ，螺栓头部到预定位置</p><img src="https://images.xmq.plus/20200829121839.png" alt="T型螺栓" style="zoom: 50%;" /><p>步骤5：安放弹条 </p><p>将弹条后端两支撑点安放在铁垫板两支撑台上凹槽内，前端扣压住绝缘块</p><p><img src="https://images.xmq.plus/20200829102210.png" alt="安放弹条"></p><img src="https://images.xmq.plus/20200829121938.png" alt="弹条放置" style="zoom:67%;" /><p>步骤6：安放平垫圈和螺母，紧固弹条</p><p>安放平垫圈和螺母，上提T型螺栓，用手拧紧螺母（螺母与螺栓应对正，切忌斜拧），确认螺栓垂直后，再用可控制扭矩的扳手或机具拧紧螺母，使弹条安装到位。</p><p><img src="https://images.xmq.plus/20200829102423.png" alt="安放平垫圈和螺母紧固弹条"></p><blockquote><p>安装建议：</p><p>通常情况下， W1型弹条的理论安装扭矩在120N.m左右， X2型弹条的理论安装扭矩在80N.m左右。在现场大规模安装前，建议先取10个扣件节点进行安装，以测出使弹条能按照以上“安装到位标准”达到正确安装位置的实际安装扭矩，然后以实际扭矩的均值进行大规模安装。安装时采用可控制扭矩的扳手或机具，防止扭矩过大造成弹条产生残变和绝缘块损坏或扭矩过小弹条安装不到位。</p></blockquote><img src="https://images.xmq.plus/20200829122031.png" alt="紧固弹条" style="zoom: 67%;" /><p>步骤7 拧紧锚固螺栓  </p><p>确认轨距和轨向合适后，采用可控制扭矩的扳手或机具以<strong>300~350N.m</strong>的扭矩拧紧锚固螺栓。</p><p><img src="https://images.xmq.plus/20200829103222.png" alt="拧紧锚固螺栓"></p><blockquote><p>特别提示：</p><p>在铺设轨枕或轨道板的过程中，应对所有外露的扣件部件采用适当的防护措施进行包装，以保持清洁。  </p></blockquote><p>安装完成</p><img src="https://images.xmq.plus/20200829105842.jpg" alt="WJ-7B一般地段安装完成图" style="zoom: 33%;" /><h2 id="三、安装调整"><a href="#三、安装调整" class="headerlink" title="三、安装调整"></a>三、安装调整</h2><ol><li>调整轨距和轨向 </li></ol><p>检查轨距和轨向，如有不合适:</p><ul><li>松开锚固螺栓；  </li><li>用改道器卡住钢轨铁垫板予以调整，使轨距和轨向合适;</li><li>用可控制扭矩的扳手或机具以300~350N.m的扭矩拧紧锚固螺栓。</li></ul><p><strong>卡阻现象</strong></p><p><img src="https://images.xmq.plus/20200829103928.png" alt="卡阻现象"></p><p>发生卡阻现象时，应将平垫块掉头使用</p><p><img src="https://images.xmq.plus/20200829104104.png" alt="平垫块掉头"></p><ol start="2"><li>调整钢轨高低</li></ol><p>钢轨高低位置调整量为**-4~+26mm**，可按下表选用所需厚度的绝缘缓冲垫板和调高垫板进行调整。 </p><p> <img src="https://images.xmq.plus/20200829104424.png" alt="选用厚度"></p><ul><li>钢轨高低位置负调整时</li></ul><p>应先卸下锚固螺栓，提升钢轨，将下6mm厚的绝缘缓冲垫板更换为2mm厚的绝缘缓冲垫板，钢轨复位后检查轨向和轨距，必要时进行调整，确认合适后用可控制扭矩的扳手或机具以300~350N.m的扭矩拧紧锚固螺栓，然后根据调整量，在轨下垫板和铁垫板间垫入所需厚度的轨下调高垫板。</p><p><img src="https://images.xmq.plus/20200829104608.png" alt="更换绝缘缓冲垫板"></p><ul><li>轨下调高垫板调整时</li></ul><p>应先松开弹条，取出绝缘块，提升钢轨，在轨下垫板和铁垫板间垫入所需厚度的轨下调高垫板，钢轨落下后再用可控制扭矩的扳手或机具拧紧螺母，使弹条安装到位。轨下垫板总厚度不得超过10mm， 数量不得超过2块，并应把最薄的垫板放置在下面， 以防轨下调高垫板窜出。（当调高量需0.5mm级别时，可紧贴铁垫板承轨面加垫0.5mm后的轨下调高垫板，数量可为3块。）</p><p><img src="https://images.xmq.plus/20200829104839.png" alt="轨下调高垫板调整"></p><ul><li>铁垫板下调高垫板调整 </li></ul><p>应先卸下锚固螺栓，提升钢轨，在铁垫板和绝缘缓冲垫板之间垫入所需厚度的铁垫板下调高垫板，钢轨复位后检查轨距和轨向，必要时进行调整，确认合适后用可控制扭矩的扳手或机具以300~350N.m的扭矩拧紧锚固螺栓。铁垫板下调高垫板，总厚度不得超过16mm，数量不得超过2块。</p><p><img src="https://images.xmq.plus/20200829104954.png" alt="铁垫板下调高垫板调整"></p><h2 id="四、养护维修要求"><a href="#四、养护维修要求" class="headerlink" title="四、养护维修要求"></a>四、养护维修要求</h2><p>特别要防止绝缘缓冲垫板排水口（上图红圈位置）堵塞。  </p><p><img src="https://images.xmq.plus/20200829104143.png" alt="绝缘缓冲垫板排水口"></p><h2 id="五、参考引用"><a href="#五、参考引用" class="headerlink" title="五、参考引用"></a>五、参考引用</h2><ul><li>WJ-7型扣件安装作业指导</li><li>JYD-03-07-S-GD-01-01 正线扣件及轨枕</li></ul>]]></content>
      
      
      <categories>
          
          <category> 土木工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扣件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux学习笔记</title>
      <link href="posts/b30ceb9f.html"/>
      <url>posts/b30ceb9f.html</url>
      
        <content type="html"><![CDATA[<ul><li><code>mkdir</code>    创建目录</li></ul><p><code>mkdir -p /dir1/dir2</code>     连续创建目录 </p><ul><li><code>touch</code>    创建文件</li></ul><p>创建以<code>file[n]</code>命名的一万个文件：</p><p><code>touch file&#123;1..10000&#125;</code></p><ul><li><code>&gt;</code>    重定向</li></ul><p>重定向<code>&gt;</code>,会清除文件里以前所有的数据；</p><p>利用重定向将内容写入<code>file.txt</code>文本：</p><p><code>echo ‘I am Studying Linux’&gt;file.txt</code></p><ul><li><code>&gt;&gt;</code>    内容追加</li></ul><p>利用重定向将内容写入<code>file.txt</code>文本，只在文件尾部追加需要的内容</p><p><code>echo ‘I am Studying Linux’&gt;&gt;file.txt</code></p><blockquote><p>可追加多行</p></blockquote><ul><li><code>cat</code>命令重定向</li></ul><p><code>cat &gt;file.txt #回车并直接写入需要内容，按ctrl+C/D结束</code></p><ul><li><code>cat</code>命令内容追加：</li></ul><p><code>cat &gt;&gt;file.txt #cat命令内容追加，按ctrl+C/D结束</code></p><ul><li><code>cat</code>命令多行内容追加：</li></ul><pre><code class="line-numbers language-bash">cat &gt;&gt;file.txt&lt;&lt;xmq&gt;line1&gt;line2&gt;line3&gt;xmq</code></pre><blockquote><p>自定义设置字符作为开始与结束的标志</p></blockquote><p>创建内容并同时写入内容：</p><pre><code class="line-numbers language-bash">echo &quot;写入的内容&quot; &gt;/usr/data/file.txt</code></pre><blockquote><p>凡是用echo、touch创建的都是“文件”</p></blockquote><ul><li><code>&lt;</code>    输入重定向</li></ul><pre><code class="line-numbers language-bash">cat &lt;file.txt #即 cat file.txt</code></pre><pre><code class="line-numbers language-bash">cat &gt;abc.txt &lt;file1.txt #将file1.txt中的内容重定向到abc.txt文件</code></pre><pre><code class="line-numbers language-bash">tr &quot; &quot; &quot;\n&quot;&lt;a.txt &gt;&gt;a.txt #将a.txt中的空格改成换行符，并追加到a.txt后</code></pre><blockquote><p>箭头方向即数据流向，输入重定向，将文件中的数据流向给命令</p></blockquote><ul><li><code>2&gt;&gt;</code>错误内容追加</li></ul><p>输入错误命令，并将错误结果追加到<code>file.txt</code>中</p><pre><code class="line-numbers language-bash">lls &gt;&gt;file1.txt 2&gt;&gt;file2.txt ls &gt;&gt;file1.txt 2&gt;&gt;file2.txt #正确内容追加到file1，错误内容追加到file2</code></pre><pre><code class="line-numbers language-bash">ls &amp;&gt;&gt;file1.txt #正确和错误的内容全部追加到fiel1lls &gt;&gt;file1.txt 2&gt;&amp;1 #标准错误输出同标准正确输出一致，全部追加到file1</code></pre><ul><li>总结：</li></ul><p><code>&gt;</code>或<code>1&gt;</code>    输出重定向：把前面输出的东西输入到后边的文件中，会清除文件原有内容。</p><p><code>&gt;&gt;</code>或<code>1&gt;&gt;</code>    追加重定向：把前面输出的东西追加到后边的文件尾部，不会清除文件原有内容。</p><p><code>0&lt;</code>或<code>&lt;</code>    输入重定向：输入重定向用于改变命令的输入，后面指定输入内容，前面跟文件名。</p><p><code>0&lt;&lt;</code>或<code>&lt;&lt;</code>    追加输入重定向：后跟字符串，用来表示“输入结束”，也可用<code>ctrl+D</code>来结束输入。</p><p><code>2&gt;</code>    错误重定向：把错误信息输入到后边的文件中，会删除原文文件内容。</p><p><code>2&gt;&gt;</code>    错误追加重定向：把错误信息追加到后边的文件中，不会删除原文文件内容。</p><blockquote><p>说明：</p><p>1、箭头的指向就是数据的流向。</p><p>数字说明：</p><p>标准输入：    代码为0，使用&lt;或&lt;&lt;。数据流向：从右到左。</p><p>标准正常输出：    代码为1，使用&gt;或&gt;&gt;。数据（正确的数据）流向：从左到右。</p><p>标准错误输出：    代码为2，使用2&gt;或&gt;&gt;。 数据（错误的数据）流向：从左到右。</p></blockquote><ul><li><code>cat</code>    查看文件内容</li></ul><p>查看某一文件下所有文件内容：</p><pre><code class="line-numbers language-bash">find /data/data/ -type f |xargs cat</code></pre><ul><li><p><code>xargs</code>    从标准输入获取内容创建和执行命令行 </p><p>常用命令：<code>xargs -n 数字</code>分组</p></li></ul><pre><code class="line-numbers language-bash">$ echo 1 2 3 4 5 6 7 8 &gt;a.txt$ cat &lt;a.txt1 2 3 4 5 6 7 8$ xargs -n 4 &lt;a.txt1 2 3 45 6 7 8</code></pre><ul><li><p><code>cp</code>    复制文件</p><p><code>cp -r 文件夹路径</code>    -r，递归复制，用于复制文件夹</p><p><code>cp -a 文件夹路径</code>    复制，用于复制文件夹,保持文件属性，如果文件为链接文件将复制链接</p></li><li><p><code>rm -f 文件名</code>  -f （force）强制删除 </p><p><code>rm -rf 目录名</code>  -r （recursive）递归，删除目录</p><p><code>rm -v 文件名</code>  -v 提示已删除的文件</p></li></ul><blockquote><p>rm命令使用比较危险，删除后无法恢复。一般使用find命令删除文件</p></blockquote><ul><li><code>find</code></li></ul><p>按时间查找文件：</p><pre><code class="line-numbers language-bash">find /data -mtime +7 #+7表示七天以前的文件，7表示查找第7天的文件，-7表示最近7天</code></pre><p>查找某一个路径下类型为“文件“的数据：</p><p><code>find /data -type f</code> </p><p>查找某一个路径下类型为“文件“名称为<code>file.txt</code>的数据：</p><p><code>find /data -type f -name &quot;file.txt&quot;</code></p><ul><li><code>find</code>的<code>-exec</code>  对查找到的数据进行处理</li></ul><p>对某一个路径下类型为“文件“名称为<code>file.txt</code>的数据进行删除：</p><pre><code class="line-numbers language-bash">find /data -type f -name &quot;file.txt&quot; -exec rm &#123;&#125; \; #&#123;&#125;表示查找的内容，即将查找到的内容进行删除find /data -type f -name &quot;file.txt&quot; |xargs rm -f #通过管道符号|将数据传给rm，xargs将查找到的数据变成一行，等同于rm -f a.txt b.txt c.txt</code></pre><blockquote><p>一般使用该命令删除，好处在于设置的条件比较多，不容易误删</p><p>-type f    （file）文件    -type d    （directory）目录    -type c(    character) 字符    -type    b    (block)块设备、磁盘     -type  s(socket)</p></blockquote><ul><li><code>|</code>    管道符：将上一个命令的数据传递给下一个命令进行处理，管道符可多次使用。</li></ul><p>对某一个路径下类型为“文件“名称为<code>file.txt</code>的数据进行移动：</p><pre><code class="line-numbers language-bash">mv `find aaa/ -type f -name &quot;*.txt&quot; ` bbb/</code></pre><p><code>!</code>    可取反    <code>-a</code>取交集    <code>-o</code>   取并集，或者</p><p><code>-</code>   上一次所在的目录</p><p><code>~</code>   当前用户的家目录 </p><p><code>.</code>    当前目录</p><p><code>..</code>     上一级目录</p><ul><li><p><code>grep</code>    过滤命令（Linux三剑客之一），过滤需要的内容，使用<code>-v</code>表示排除；</p><p>查看<code>file.txt</code>文件中除<code>abc</code>字符以外的内容</p><p><code>grep -v abc file.txt</code> </p><p>查看<code>file.txt</code>文件中含<code>abc</code>字符的内容</p><p><code>grep abc file.txt</code> </p></li></ul><blockquote><p>grep num -A/-B/-C num file.txt </p><p>-A除了显示匹配一行之外，并显示该行之后的num行；</p><p>-B 除了显示匹配的一行之外，并显示该行之前的num行；</p><p>-C    除了显示匹配的一行之外，并显示该行之前后的各num行。</p></blockquote><ul><li><code>head -n 文件名</code>  表示读取文件的前<code>n</code>行,默认前十行</li><li><code>tail -n</code> 表示读取文件的后<code>n</code>行，默认为十行</li></ul><p>查看文件前十行和后十行内容。并将数据在一行输出：</p><pre><code class="line-numbers language-bash">$ seq 20 &gt;file.txt    #排序$ head file.txt | xargs #xargs 将数据变为一行1 2 3 4 5 6 7 8 9 10$ tail file.txt | xargs11 12 13 14 15 16 17 18 19 20</code></pre><ul><li><p><code>yum install Irzsz telnet tree nmap nc -y #-y表示直接同意安装</code>   使用<code>yum</code>安装常用命令（如果没有）</p></li><li><p><code>LANG=en</code>  改成英文版本   <code>LANG=&quot;zh_CN.UTF-8&quot;</code>     改成中文版本</p></li><li><p><code>alias</code>  设置/查看系统命令名别</p></li></ul><p>别名的作用：</p><p>（1）给危险得命令加一些参数保护，防止人为误操作。</p><p>（2）把很多复杂的字符串或命令变成一个简单的字符串命令。</p><p>为<code>rm</code>设置别名,告之不允许使用:</p><pre><code class="line-numbers language-bash">alias rm=&#39;echo this command does not allow to use.&#39;</code></pre><ul><li><code>unalias 命令</code>    删除别名，尽量不使用，并且重启系统后失效</li></ul><blockquote><p>alias设置别名，内容保存在系统内存中，无法永久保存，重启系统后失效；</p><p>要定义永久别名，需要将数据存储到文件目录中：</p><p>/etc/profile    全局生效</p><p>~/.bashrc    当前用户生效</p></blockquote><ul><li><code>cp</code>    直接覆盖文件不提示</li></ul><p>如何执行拷贝命令，遇到同名文件直接（让Linux系统不提示）覆盖</p><pre><code class="line-numbers language-bash">$ touch /tmp/test.txt$ touch /mnt/test.txt$ \cp /mnt/test.txt /tmp/ #加反斜号直接覆盖,使用反斜线，作用在于屏蔽别名。（使用alias命令查看）$ /bin/cp /mnt/test.txt /tmp/ #加上命令全路径，直接覆盖执行</code></pre><ul><li><code>seq 数字</code>    生成序列</li><li><code>seq -s &quot;分隔符&quot;</code>      <code>-s</code>指定分隔符</li></ul><pre><code class="line-numbers language-bash">$ seq 100 &gt;file.txt    #从数字1排到100生成100行数据文件$ seq 3 10 #从数字3到10生成数据$ seq 1 2 10 #从数字1到10每隔2位数生成数据，相当于等差数列，等差为2</code></pre><ul><li><code>sed</code>  <code>stream editor</code>,流编辑器，实现对文件的增删改替查换。<code>Linux</code>命令三剑客之一</li></ul><p><code>sed &#39;s#需要替换的内容#替换的内容#g&#39; file.txt  </code>       #s表示替换，g表示全局，#表示分隔符，也可使用其他任何字符替代。</p><pre><code class="line-numbers language-bash">$ cat &gt;&gt;file.txt &lt;&lt;input&gt; this is first line&gt; this is second line&gt; input$ sed &#39;s/first/second/g&#39; file.txtthis is second linethis is second line</code></pre><blockquote><p>有4种可用的替换标记：</p><ul><li><p>数字，表明同一行文本中替换具体第几处的数据；</p></li><li><p>g，表明新文本将会替换所有匹配的文本；</p></li><li><p>p，表明原先行的内容要打印出来（即修改行重复显示一行）；</p></li><li><p>w file，将替换的结果写到文件中。</p></li></ul></blockquote><p>示例1：</p><pre><code class="line-numbers language-bash">echo &quot;111 111 111&quot; &gt;file.txtsed -i &#39;s/111/222/2&#39; file.txtcat file.txt111 222 111</code></pre><p>示例2：</p><pre><code class="line-numbers language-bash">$ cat file.txt 111 111 111222 222 222$ sed &#39;s/222/333/p&#39; file.txt111 111 111333 222 222333 222 222sed &#39;s/222/333/gp&#39; file.txt111 111 111333 333 333333 333 333$ sed &#39;s/222/333/gpw file_new.txt&#39; file.txt111 111 111333 333 333333 333 333$ cat file_new.txt 333 333 333$ cat file.txt 111 111 111222 222 222</code></pre><ul><li><code>sed -e</code>    在命令行使用多个编辑器命令</li></ul><pre><code class="line-numbers language-bash">$ cat file.txt111 111 111222 222 222$ sed -e &#39;s/111/333/g;s/222/444/g&#39; file.txt333 333 333444 444 444</code></pre><ul><li><code>sed -f xxx.sed file.txt</code>    从文件中读取编辑器命令</li></ul><pre><code class="line-numbers language-bash">$ cat xxx.seds/aaa/bbb/s/ccc/ddd/s/eee/fff/</code></pre><blockquote><p>用于每次需要重复替换多个相同的字符</p></blockquote><ul><li><code>sed -i</code>     将替换结果写入到文件中</li></ul><p>将<code>/data/data/</code>目录下所有文件中<code>aaa</code>替换为<code>bbb</code>：</p><pre><code class="line-numbers language-bash">$ find /data/data/ -type f |xargs sed -i &#39;s/aaa/bbb/g&#39; #-i表示修改文件内容，如果不带-i将仅仅输出到上，而不存入文件中。</code></pre><p><strong>自我练习：</strong></p><p>在文件<code>file.txt</code>中将任意一行中<code>tabs1</code>的字符后一行添加内容：<code>name:www.google.com</code>：</p><pre><code class="line-numbers language-bash">$ cat file.txttabs1:name:www.baidu.comurl:www.baidu.comimg:/soft/one.png$ sed -i &#39;s/tabs1/tabs1\nname:www.googole.com/g&#39; file.txt #\n表示换行tabs1:name:www.google.comname:www.baidu.comurl:www.baidu.comimg:/soft/one.png</code></pre><p>将目录下<code>.txt</code>格式的文件中的数据<code>one</code>改成<code>two</code>：</p><pre><code class="line-numbers language-bash">$ cat *oneoneoneone$ find -type f -name &quot;*.txt&quot; |xargs sed -i &#39;s/one/two/g&#39; #第一种方法$ cat *[sumsung@localhost aaa]$ cat *twotwotwotwo$ sed -i &#39;s/two/one/g&#39; `find -type f -name &quot;*.txt&quot;` &amp;&amp; cat * #第二种方法，``里面的命令将会先执行oneoneoneone</code></pre><ul><li><code>sed -n</code>    不产生命令输出，sed处理的结果将不会输出到<code>CLI</code>中,通常与<code>p</code>标记一同使用，用于仅仅输出替换的数据行内容。</li></ul><p>打印某一行：</p><p><code>sed -n &#39;20&#39;p file.txt</code></p><p>打印最后一行：</p><p><code>sed -n &#39;$&#39;p file.txt</code></p><p><strong>总结：</strong></p><p><code>sed</code>命令选项总结：</p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-e</td><td>在命令行使用多个编辑器命令</td></tr><tr><td>-f</td><td>从文件中读取编辑器命令</td></tr><tr><td>-i</td><td>将替换结果写入到文件中</td></tr><tr><td>-n</td><td>不产生命令输出，sed处理的结果将不会输出到<code>CLI</code>中</td></tr></tbody></table><p><code>sed</code>替换标记总结：</p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>数字</td><td>表明同一行文本中替换具体第几处的数据</td></tr><tr><td>g</td><td>表明全局替换</td></tr><tr><td>p</td><td>表明原先行的内容要打印出来（即修改行重复显示一行）；</td></tr><tr><td>w file</td><td>将替换的结果写入文件中</td></tr></tbody></table><ul><li><code>awk</code>  过滤、输出内容。</li></ul><p>查看某一行：</p><p><code>awk NR==19 file.txt</code></p><p>只查看<code>file.txt</code>文件（100行）内第20行到30行的内容：</p><pre><code class="line-numbers language-bash">$ head -30 file.txt|tail -10 #用法太low$ sed -n &#39;20,30&#39;p file.txt # -n的目的是用于取消默认输出,p代表打印（print）$ awk &#39;NR&gt;19&amp;&amp;NR&lt;31&#39; file.txt #NR代表行号$ grep 20 -A 10 file.txt #-A除了显示匹配一行之外，并显示该行之后的num行；-B 除了显示匹配的一行之外，并显示该行之前的num行；-C    除了显示匹配的一行之外，并显示该行之前后的各num行</code></pre><p><strong>快捷键总结：</strong></p><ul><li><code>tab</code>键 三下可列出/补全命令</li><li><code>ctrl + c</code>   终止当前任务命令或程序</li><li><code>ctrl + d</code>   退出当前用户环境。相当于<code>exit</code>、<code>logout</code></li><li><code>ctrl + l </code>   清屏<code>clear</code></li><li><code>ctrl shitf c</code> CRT里复制的命令</li><li><code>ctrl shift v</code>  CRT里的粘贴命令</li><li><code>ctrl A</code>  光标定位到开头</li><li><code>ctrl E</code>  光标定位到结尾</li><li><code>ctrl U</code> 清理前面的内容</li><li><code>ctrl K</code>  清理后面的内容</li><li><code>ctrl R</code>  搜索</li></ul><h1 id="72"><a href="#72" class="headerlink" title="72"></a>72</h1>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站SEO优化</title>
      <link href="posts/5ca47eb5.html"/>
      <url>posts/5ca47eb5.html</url>
      
        <content type="html"><![CDATA[<h1 id="网站SEO优化"><a href="#网站SEO优化" class="headerlink" title="网站SEO优化"></a><center>网站SEO优化</center></h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>SEO是由英文Search Engine Optimization缩写而来， 中文意译为“搜索引擎优化”。</p></blockquote><p>在建站之初,各个搜索引擎是无法搜索到我们的网站,首先要做的就是让各大搜索引擎收录我们的站点，爬虫抓取网站，才能通过搜索引擎找到我们的网站。对于<code>Hexo</code>博客来说，如果你是部署在<code>GitHub Pages</code>，那么你是无法被百度收录的，因为<code>GitHub</code>禁止了百度爬虫，最常见的解决办法是双线部署到<code>Coding Pages</code>和<code>GitHub Pages</code>,这样百度爬虫可以爬取到 Coding 上的内容，从而实现百度收录。另外百度收录的所需的时间较长，大约半个月左右才会看到效果！</p><p>判断自己站点是否被收录：在搜索引擎中输入<code>site:&lt;域名&gt;</code>,如果如下图所示就是说明我们的网站并没有被百度收录。</p><p><img src="https://images.xmq.plus/SEO0.png" alt="百度网站未收录此网站"></p><p>下面借助谷歌及百度两大搜索引擎分别使用两种不同的方法介绍如何收录网站。</p><h2 id="一、百度收录"><a href="#一、百度收录" class="headerlink" title="一、百度收录"></a>一、百度收录</h2><h3 id="（1）、验证网站所有权"><a href="#（1）、验证网站所有权" class="headerlink" title="（1）、验证网站所有权"></a>（1）、验证网站所有权</h3><p>登录<a href="http://zhanzhang.baidu.com/">百度站长搜索资源平台</a>，登录成功之后在站点管理中点击添加网站。</p><p><img src="https://images.xmq.plus/addwebsite.png" alt="添加网站"></p><blockquote><p>注意，这里需要输入我们自己购买的域名,不能使用<code>xxx.github.io</code>之类域名.因为<code>github</code>是不允许百度的<code>spider</code>（蜘蛛）爬取<code>github</code>上的内容的，所以如果想让你的站点被百度收录，只能使用自己购买的域名。</p></blockquote><p><img src="https://images.xmq.plus/enterwebsite.png" alt="输入站点地址"></p><p>在填完网址后需要验证网站的所有权，验证网站所有权的方式有三种：</p><ul><li>文件验证</li><li><code>html</code>标签验证</li><li><code>CNAME</code>解析验证</li></ul><p><img src="https://images.xmq.plus/thewaysofseo.png" alt="三种验证方式"></p><p>在这里我们第一种方式使用文件验证介绍网站收录。</p><ol><li><strong>下载验证文件至根目录下的<code>source</code>文件夹中。</strong></li></ol><p><img src="https://images.xmq.plus/saveasrootsource.png" alt="验证文件存博客根目录下source文件中"></p><ol start="2"><li><strong>使用<code>vi</code>命令编写验证文件，为防止文件<code>Hexo</code>被解析，在验证文件上方设置布局为<code>layout：false</code>:</strong></li></ol><pre><code class="line-numbers language-bash">---layout: false---</code></pre><p>如图：</p><p><img src="https://images.xmq.plus/addsomecodeforseo.png" alt="防止解析"></p><blockquote><p>收录网站所说的验证文件需放入目录根文件下，是指生成部署后的文件夹的根目录，也就是要生成到本地<code>plublic</code>文件夹中，或部署到远程仓库的根目录。因此，我们直接将验证文件放在本地博客根目录是无法部署生成到远程仓库的。<br>根目录下<code>source</code>文件夹:除<code>_posts</code>文件夹之外，开头命名为<code>_</code>(下划线)的文件 <code>/ </code>文件夹和隐藏的文件将会被忽略。<code>Markdown </code>和 <code>HTML</code> 文件会被解析并放到 <code>public</code>文件夹，而其他文件会被拷贝过去。<br>因此，将验证文件放入<code>source</code>文件夹中,并设置<code>layout: false</code>防止被解析。才能正常将验证原文件部署到远程仓库的根目录。</p></blockquote><ol start="3"><li><strong>重新部署到远程仓库之后点击验证即可。</strong></li></ol><p><img src="https://images.xmq.plus/seosuccess.png" alt="验证成功"></p><h3 id="2-、生成网站地图"><a href="#2-、生成网站地图" class="headerlink" title="(2)、生成网站地图"></a>(2)、生成网站地图</h3><p>站点地图的作用是告诉搜索引擎你的网站结构等信息，让搜索引擎更智能抓取内容。我们需要使用<code>npm</code>自动生成网站的<code>sitemap</code>，然后将生成的<code>sitemap</code>提交到百度和其他搜索引擎。</p><ol><li><strong>安装sitemap插件</strong></li></ol><pre><code class="line-numbers language-bash">npm install hexo-generator-sitemap --save     npm install hexo-generator-baidu-sitemap --save</code></pre><ol start="2"><li><strong>修改博客配置文件</strong></li></ol><p>在根目录配置文件.yml中修改url为你的站点地址</p><p><img src="https://images.xmq.plus/changesURL.png" alt="修改URL"></p><p>执行完<code>hexo g</code>命令之后就会在网站根目录生成<code>sitemap.xml</code>文件和<code>baidusitemap.xml</code>文件，可以通过：<code>https://你的域名/baidusitemap.xml</code>, 查看该文件是否生成，其中<code>sitemap.xml</code>文件是搜索引擎通用的文件，<code>baidusitemap.xml</code>是百度专用的<code>sitemap</code>文件。</p><ol start="3"><li><strong>向百度提交链接</strong></li></ol><p>然后我们就可以将我们生成的<code>sitemap</code>文件提交给百度，还是在百度站长平台，找到链接提交，这里我们可以看到有三种提交方式，API提交和<code>sitemap</code>、手动提交。还有一种方法是加入<code>JS</code>代码的自动提交。</p><blockquote><p>如何选择链接提交方式<br><br><strong>API提交</strong>：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。<br><strong>自动推送</strong>：最为便捷的提交方式，请将自动推送的<code>JS</code>代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。<br>**<code>sitemap</code>**：您可以定期将网站链接放到<code>sitemap</code>中，然后将<code>sitemap</code>提交给百度。百度会周期性的抓取检查您提交的<code>sitemap</code>，对其中的链接进行处理，但收录速度慢于主动推送。<br>手动提交：一次性提交链接给百度，可以使用此种方式。</p></blockquote><p>一般主动提交比手动提交效果好，这里介绍主动提交的三种方法</p><p>从效率上来说：</p><blockquote><p>API提交&gt;自动提交&gt;<code>sitemap</code></p></blockquote><p><img src="https://images.xmq.plus/Sitemap.png" alt="链接提交方式"></p><ol start="4"><li><strong>API提交</strong></li></ol><p>安装插件<code>hexo-baidu-url-submit</code></p><pre><code class="line-numbers language-bash">npm install hexo-baidu-url-submit --save</code></pre><pre><code class="line-numbers language-yml">baidu_url_submit:     count: 80 # 提交最新的多少个链接    host: www.sunhwee.com # 在百度站长平台中添加的域名     token: xxxxxxxxxxxxxx # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!     path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里</code></pre><p>再加入新的部署<code>deploy</code>：</p><pre><code class="line-numbers language-yml">deploy:- type: baidu_url_submitter</code></pre><p>如图所示：</p><p><img src="https://images.xmq.plus/baidu_url_submit.png" alt="修改配置文件"></p><p>密钥的获取位置在网页抓取中的链接提交这一块,如下所示:</p><p><img src="https://images.xmq.plus/token.png" alt="token"></p><p>执行<code>hexo deploy</code>，新的链接就会被推送了。</p><p><img src="https://images.xmq.plus/SEOdeploy.png" alt="链接推送"></p><ol start="5"><li><strong>API提交</strong></li></ol><p>在主题配置文件下设置,将<code>baidupush</code>设置为<code>true</code>:</p><pre><code class="line-numbers language-yml"># 百度搜索资源平台提交链接baiduPush: true</code></pre><p>然后主题文件目录加入下面代码，一般在目录<code>/themes/matery/layout/_partial</code>中的<code>head.ejs</code>中加入下面<code>JS</code>代码（有可能你的目录不是这样，原理类似），这样全站都有了：</p><pre><code class="line-numbers language-js">&lt;% if (theme.baidu_push) &#123; %&gt;     &lt;script&gt;        (function()&#123;             var bp = document.createElement(&#39;script&#39;);             var curProtocol = window.location.protocol.split(&#39;:&#39;)[0];            if (curProtocol === &#39;https&#39;) &#123;                 bp.src = &#39;https://zz.bdstatic.com/linksubmit/push.js&#39;; &#125; else &#123; bp.src = &#39;http://push.zhanzhang.baidu.com/push.js&#39;; &#125;                 var s = document.getElementsByTagName(&quot;script&quot;)[0];                 s.parentNode.insertBefore(bp, s);                 &#125;)();     &lt;/script&gt; &lt;% &#125; %&gt;</code></pre><p>这样每次访问博客中的页面就会自动向百度提交<code>sitemap</code>。</p><ol start="6"><li><strong><code>sitemap</code>方式</strong></li></ol><p>将我们上一步生成的sitemap文件提交到百度就可以了~</p><p><img src="https://images.xmq.plus/handon.png" alt="sitemap"></p><p>让大家看一下现在的成果:<br>被看了,收录结果还没出来。太慢了。</p><h2 id="二、谷歌收录"><a href="#二、谷歌收录" class="headerlink" title="二、谷歌收录"></a>二、谷歌收录</h2><p>相比于百度，google的效率实在不能更快，貌似一天左右站点就被收录了，其实方法是和百度是一样的。</p><h3 id="1-、验证网站所有权"><a href="#1-、验证网站所有权" class="headerlink" title="(1)、验证网站所有权"></a>(1)、验证网站所有权</h3><p>谷歌收录使用另外一种方式收录，无需下载验证文件放入根目录，只需添加一条DNS解析记录即可~</p><ol><li><strong>登录<a href="https://www.google.com/webmasters/#?modal_active=none">谷歌站长平台</a>:</strong></li></ol><p><img src="https://images.xmq.plus/loginsiteseo.png" alt="登录网站"></p><ol start="2"><li><strong>添加自己的域名：</strong></li></ol><p><img src="https://images.xmq.plus/enterurlseo.png" alt="添加域名"></p><ol start="3"><li><strong>验证所有权</strong></li></ol><p>将生成的记录复制：</p><p><img src="https://images.xmq.plus/seoowner.png" alt="验证所有权"></p><p>登录到自己域名的提供商网站添加解析记录：</p><p><img src="https://images.xmq.plus/addrecording.png" alt="添加解析记录"></p><ol start="4"><li><strong>然后点击验证即可</strong></li></ol><p><img src="https://images.xmq.plus/passseo.png" alt="验证通过"></p><h3 id="（2）、生成站点地图"><a href="#（2）、生成站点地图" class="headerlink" title="（2）、生成站点地图"></a>（2）、生成站点地图</h3><ol><li><strong>到谷歌的<code>Search Console</code>，添加自己的<code>sitemap</code>地址</strong></li></ol><p>利用之前生成的<code>sitemap</code>，部署完成之后即可直接输入：</p><p><img src="https://images.xmq.plus/sitemap.png" alt="添加sitemap地址"></p><ol start="2"><li><strong>收录成功</strong></li></ol><p>接下来只需要等就好了，相比于百度，谷歌的时间会很快。</p><p><img src="https://images.xmq.plus/seopass1.png" alt="收录成功"></p><h2 id="三、其他SEO优化"><a href="#三、其他SEO优化" class="headerlink" title="三、其他SEO优化"></a>三、其他SEO优化</h2><h3 id="1-、提交robots-txt"><a href="#1-、提交robots-txt" class="headerlink" title="(1)、提交robots.txt:"></a>(1)、提交robots.txt:</h3><p>等待被谷歌收录之后，发现搜索结果有一些我们不需要的页面被显示在搜索结果中：</p><p><img src="https://images.xmq.plus/20200712113600.png"></p><p>面对这样的问题我可以在网站根目录下添加<code>robots.txt</code>文件，<code>robots.txt</code>是一种存放于网站根目录下的<code>ASCII</code>编码的文本文件，它的作用是告诉搜索引擎此网站中哪些内容是可以被爬取的，哪些是禁止爬取的。</p><p><code>robots.txt</code> 放在博客目录下的<code>source</code>文件夹中，博客生成后在站点目录 <code>/public/</code>下。</p><p>每个人的内容不一样，给一个参考：</p><pre><code class="line-numbers language-txt">User-agent: *Allow: /Allow: /posts/Disallow: /about/Disallow: /archives/Disallow: /js/Disallow: /css/Disallow: /contact/Disallow: /fonts/Disallow: /friends/Disallow: /libs/Disallow: /medias/Disallow: /page/Disallow: /tags/Disallow: /categories/</code></pre><ul><li><p>相关参考</p><ul><li><a href="https://fedoryx.github.io/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%9C%E7%B4%A2-SEO-%E4%BC%98%E5%8C%96-%E8%B0%B7%E6%AD%8C%E7%AF%87/">SEO优化-谷歌篇</a></li><li><a href="https://blog.csdn.net/fanghua_vip/article/details/79535639">CSDN-给自己的网站加上robots.txt</a></li></ul></li></ul><p>编写完以上内容再重新部署一下，然后到百度资源平台的数据监控-&gt;Robots点击检测并更新 看能不能检测到。<br>也可进入<code>Google Search Console</code>- 抓取 -<code>robots.txt</code>测试工具进行测试。</p><h3 id="（2）、URL优化"><a href="#（2）、URL优化" class="headerlink" title="（2）、URL优化"></a>（2）、URL优化</h3><p>一般来说，SEO搜索引擎优化认为，网站的最佳结构是 用户从首页点击三次就可以到达任何一个页面，但是我们使用Hexo编译的站点结构的URL是：域名/年/月/日/文章标题四层的结构，这样的URL结构很不利于SEO，爬虫就会经常爬不到我们的文章，于是，我们需要优化一下网站文章的URL</p><ul><li>方案一：</li></ul><p>直接改成域名/文章标题的形式，在Hexo配置文件中修改<code>permalink</code>如下：</p><pre><code class="line-numbers language-yml"># URL## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;url: https://blog.sky03.cnroot: /permalink: :title.htmlpermalink_defaults:</code></pre><p>这个方式有个不好的地方：</p><p>直接以文章的标题作为URL，而我们所写的文章的标题一般都是中文，但是URL只能用字母数字和标点符号表示，所以中文的URL只能被转义成一堆符号，而且还特别长。</p><ul><li>方案二：</li></ul><p>安装固定链接插件：<code>hexo-abbrlink</code></p><p>插件作用：自动为每篇文章生成一串数字作每篇文章的URI地址。每篇文章的Front-matter中会自动增加一个配置项：abbrlink: xxxxx，该项的值就是当前文章的URI地址。</p><p>Hexo根目录执行：</p><pre><code class="line-numbers language-bash">npm install hexo-abbrlink --save</code></pre><p>Hexo配置文件末尾加入以下配置：</p><pre><code class="line-numbers language-yml"># hexo-abbrlink config 、固定文章地址插件abbrlink:  alg: crc16  #算法选项：crc16、crc32，区别见之前的文章，这里默认为crc16丨crc32比crc16复杂一点，长一点  rep: dec    #输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制Hexo配置文件中修改permalink如下：</code></pre><pre><code class="line-numbers language-yml"># URL## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;url: https://blog.sky03.cnroot: /permalink: posts/:abbrlink.htmlpermalink_defaults:</code></pre><p>这样站点结构就变成了：域名<code>/posts/xxx.html</code></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="posts/3c50d03d.html"/>
      <url>posts/3c50d03d.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、Markdown标题"><a href="#一、Markdown标题" class="headerlink" title="一、Markdown标题"></a>一、Markdown标题</h3><p>有两种形式：</p><ul><li><strong>使用=和-标记一级和二级标题</strong></li></ul><p>示例：</p><pre><code>我展示的是一级标题===================我展示的是二级标题-------------------</code></pre><p>效果：</p><hr><h1 id="我展示的是一级标题"><a href="#我展示的是一级标题" class="headerlink" title="我展示的是一级标题"></a>我展示的是一级标题</h1><h2 id="我展示的是二级标题"><a href="#我展示的是二级标题" class="headerlink" title="我展示的是二级标题"></a>我展示的是二级标题</h2><hr><ul><li><strong>使用#号标记</strong></li></ul><p>示例：</p><pre><code>#一级标题##二级标题###三级标题####四级标题#####五级标题######六级标题</code></pre><p>效果：</p><hr><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a><center>一级标题</center></h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a><center>二级标题</center></h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a><center>三级标题</center></h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a><center>四级标题</center></h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a><center>五级标题</center></h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a><center>六级标题</center></h6><hr><h3 id="二、字体"><a href="#二、字体" class="headerlink" title="二、字体"></a>二、字体</h3><p>示例：</p><pre><code>*斜体文本*  **粗体文本**   ***粗斜体文本***_斜体文本_  __粗体文本__   ____粗斜体文本___</code></pre><p>效果：</p><hr><p><em>斜体文本</em>  <strong>粗体文本</strong>   <strong><em>粗斜体文本</em></strong></p><p><em>斜体文本</em>  <strong>粗体文本</strong>   <strong><em>粗斜体文本</em></strong></p><hr><h3 id="三、分割线"><a href="#三、分割线" class="headerlink" title="三、分割线"></a>三、分割线</h3><p>示例：</p><pre><code>**** * *- - ---------</code></pre><p>效果：</p><hr><hr><hr><hr><h3 id="四、删除线"><a href="#四、删除线" class="headerlink" title="四、删除线"></a>四、删除线</h3><p>如果需要给文字添加删除线，只需要在文字的两端加上两个波浪线~~</p><p>示例：</p><p><code>~~markdown~~ markdown</code></p><p>效果：</p><hr><p><del>markdown</del> markdown</p><hr><h3 id="五、下划线"><a href="#五、下划线" class="headerlink" title="五、下划线"></a>五、下划线</h3><p>示例：</p><pre><code>&lt;u&gt;markdown&lt;/u&gt; markdown</code></pre><p>效果：</p><hr><p><u>markdown</u> markdown</p><hr><h3 id="六、脚注"><a href="#六、脚注" class="headerlink" title="六、脚注"></a>六、脚注</h3><p>使用[^+标注名称]表示脚注，然后在下方注释脚注的内容。</p><p>示例：</p><pre><code>[^markdown][^markdown]:markdown</code></pre><p>效果：</p><hr><p><a href="markdown">^markdown</a></p><hr><h3 id="七、列表"><a href="#七、列表" class="headerlink" title="七、列表"></a>七、列表</h3><ul><li><strong>无序列表</strong></li></ul><p>示例：</p><pre><code>* 第一项+ 第二项- 第三项</code></pre><p>效果：</p><hr><ul><li>第一项</li></ul><ul><li>第二项</li></ul><ul><li>第三项</li></ul><hr><ul><li><strong>有序列表</strong><br>示例：<br>```</li></ul><ol><li>第一项</li><li>第二项</li><li>第三项<pre><code>效果：</code></pre></li></ol><hr><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><hr><ul><li><strong>列表嵌套</strong></li></ul><ol><li>第一项<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><h2 id="八、Markdown-区块"><a href="#八、Markdown-区块" class="headerlink" title="八、Markdown 区块"></a>八、Markdown 区块</h2><ul><li><strong>基本嵌套</strong></li></ul><p>示例：</p><pre><code>&gt; 区块应用&gt; markdown&gt; markdown</code></pre><p>效果：</p><blockquote><p>区块应用<br><br>markdown<br><br>markdown</p></blockquote><ul><li><strong>嵌套区块</strong></li></ul><p>示例：</p><pre><code>&gt; 最外层&gt;&gt; 第一层嵌套&gt;&gt;&gt;第二层嵌套</code></pre><p>效果：</p><hr><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote><hr><h2 id="九、Markdown代码"><a href="#九、Markdown代码" class="headerlink" title="九、Markdown代码"></a>九、Markdown代码</h2><ul><li><strong>单行代码</strong></li></ul><p>示例：<br>`markdown`代码</p><p>效果：</p><hr><p><code>markdown</code>代码</p><hr><ul><li><strong>多行代码</strong></li></ul><p>示例：</p><pre><code>` ` `markdownmarkdown` ` `</code></pre><p>效果：</p><hr><pre><code>markdownmarkdown</code></pre><hr><h2 id="十、Markdown链接"><a href="#十、Markdown链接" class="headerlink" title="十、Markdown链接"></a>十、Markdown链接</h2><ul><li><strong>[链接名称](链接地址)</strong></li></ul><p>示例：</p><pre><code>[GitHub](https://github.com/)</code></pre><p>效果：</p><hr><p><a href="https://github.com/">GitHub</a></p><hr><ul><li><strong>&lt;链接地址&gt;</strong></li></ul><p>示例：</p><pre><code>&lt;https://github.com/&gt;</code></pre><p>效果：</p><hr><p><a href="https://github.com/">https://github.com/</a></p><hr><ul><li><strong>高级链接</strong></li></ul><p>我们可以通过变量来设置一个链接，变量赋值在文档末尾进行：</p><p>示例：</p><pre><code>这个链接用 1 作为网址变量 [Google][1]这个链接用 runoob 作为网址变量 [GitHub][GitHub]然后在文档的结尾为变量赋值（网址）  [1]: http://www.google.com/  [GitHub]: http://www.github.com/</code></pre><p>效果：</p><p>这个链接用 1 作为网址变量 <a href="http://www.google.com/">Google</a></p><p>这个链接用 runoob 作为网址变量 <a href="https://www.github.com/">GitHub</a></p><p>然后在文档的结尾为变量赋值（网址）</p><h2 id="十一、Markdown图片"><a href="#十一、Markdown图片" class="headerlink" title="十一、Markdown图片"></a>十一、Markdown图片</h2><ul><li>基本格式：</li></ul><pre><code>![alt 属性文本](图片地址)![alt 属性文本](图片地址 &quot;可选标题&quot;)</code></pre><p>示例：</p><pre><code>![肆零肆 图标](https://github.com/Sumsung524/learngit/blob/master/fourzerofour.png?raw=ture)![肆零肆 图标](https://github.com/Sumsung524/learngit/blob/master/fourzerofour.png?raw=ture &quot;GitHub&quot;)</code></pre><p>效果：</p><p><img src="https://github.com/Sumsung524/learngit/blob/master/fourzerofour.png?raw=ture" alt="肆零肆 图标"></p><p><img src="https://github.com/Sumsung524/learngit/blob/master/fourzerofour.png?raw=ture" alt="肆零肆 图标" title="肆零肆"></p><ul><li>引用格式</li></ul><p>示例：</p><pre><code>这个链接用 1 作为网址变量 [肆零肆][1].然后在文档的结尾为变量赋值（网址）[1]: https://github.com/Sumsung524/learngit/blob/master/Student-fourzerofour.png?raw=ture</code></pre><p>效果：</p><hr><p>这个链接用 1 作为网址变量 <a href="https://github.com/Sumsung524/learngit/blob/master/fourzerofour.png?raw=ture">肆零肆</a>.</p><p>然后在文档的结尾为变量赋值（网址）</p><hr><h2 id="十二、Markdown表格"><a href="#十二、Markdown表格" class="headerlink" title="十二、Markdown表格"></a>十二、Markdown表格</h2><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p><p>示例：</p><pre><code>|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |</code></pre><p>效果：<br>|  表头   | 表头  |<br>|  —-  | —-  |<br>| 单元格  | 单元格 |<br>| 单元格  | 单元格 |</p><ul><li>对齐方式</li></ul><p>示例：</p><pre><code>-: 设置内容和标题栏居右对齐。:- 设置内容和标题栏居左对齐。:-: 设置内容和标题栏居中对齐。</code></pre><p>效果：</p><hr><table><thead><tr><th align="left">左对齐 左对齐</th><th align="right">右对齐 右对齐</th><th align="center">居中对齐 居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><hr><h2 id="十三、Markdown高级技巧"><a href="#十三、Markdown高级技巧" class="headerlink" title="十三、Markdown高级技巧"></a>十三、Markdown高级技巧</h2><ul><li>支持的HTML元素</li></ul><p><code>目前支持的 HTML 元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等</code></p><p>示例</p><p><code>使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</code></p><p>效果：</p><hr><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><hr><p>示例：</p><p><code>使用 &lt;b&gt;Ctrl&lt;/b&gt;+&lt;b&gt;Alt&lt;/b&gt;+&lt;b&gt;Del&lt;/b&gt; 重启电脑</code><br>效果：</p><hr><p>使用 <b>Ctrl</b>+<b>Alt</b>+<b>Del</b> 重启电脑</p><hr><p>示例：</p><p><code>使用 &lt;i&gt;Ctrl&lt;/i&gt;+&lt;i&gt;Alt&lt;/i&gt;+&lt;i&gt;Del&lt;/i&gt; 重启电脑</code></p><p>效果：</p><hr><p>使用 <i>Ctrl</i>+<i>Alt</i>+<i>Del</i> 重启电脑</p><hr><p>示例：</p><p><code>使用 &lt;em&gt;Ctrl&lt;/em&gt;+&lt;em&gt;Alt&lt;/em&gt;+&lt;em&gt;Del&lt;/em&gt; 重启电脑</code></p><p>效果：</p><hr><p>使用 <em>Ctrl</em>+<em>Alt</em>+<em>Del</em> 重启电脑</p><hr><p>示例：</p><p><code>使用 &lt;sup&gt;Ctrl&lt;/sup&gt;+&lt;sup&gt;Alt&lt;/sup&gt;+&lt;sup&gt;Del&lt;/sup&gt; 重启电脑</code></p><p>效果：</p><hr><p>使用 <sup>Ctrl</sup>+<sup>Alt</sup>+<sup>Del</sup> 重启电脑</p><hr><p>示例：</p><p><code>使用 &lt;sub&gt;Ctrl&lt;/sub&gt;+&lt;sub&gt;Alt&lt;/sub&gt;+&lt;sub&gt;Del&lt;/sub&gt; 重启电脑</code></p><p>效果：</p><hr><p>使用 <sub>Ctrl</sub>+<sub>Alt</sub>+<sub>Del</sub> 重启电脑</p><hr><p>示例：</p><p><code>使用 &lt;br&gt;Ctrl&lt;/br&gt;+&lt;br&gt;Alt&lt;/br&gt;+&lt;br&gt;Del&lt;/br&gt; 重启电脑</code></p><p>效果：</p><hr><p>使用 <br>Ctrl</br>+<br>Alt</br>+<br>Del</br> 重启电脑</p><hr><ul><li><strong>转义</strong></li></ul><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符</p><p>Markdown 使用反斜杠转义特殊字符</p><pre><code>\*\*星号*\*\**星号**</code></pre><p>**星号<em>\</em>\</p><p><strong>星号</strong></p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><pre><code>\   反斜线`   反引号*   星号_   下划线&#123;&#125;  花括号[]  方括号()  小括号#   井字号+   加号-   减号.   英文句点!   感叹号</code></pre><h2 id="十四、Markdown小技巧"><a href="#十四、Markdown小技巧" class="headerlink" title="十四、Markdown小技巧"></a>十四、Markdown小技巧</h2><ul><li><strong>首行缩进</strong></li></ul><p>示例：</p><pre><code>&amp;emsp; 首行缩进 //全角缩进&amp;ensp; 首行缩进 //半角缩进无缩进</code></pre><p>效果：</p><hr><p>&emsp; 首行缩进</p><p>&ensp; 首行缩进</p><p>无缩进</p><hr><ul><li><strong>文本高亮</strong></li></ul><p>示例：</p><p><code>==文本高亮==</code></p><p>效果：</p><hr><p>==文本高亮==</p>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020.08.02日一标现场记录</title>
      <link href="posts/c0a6179b.html"/>
      <url>posts/c0a6179b.html</url>
      
        <content type="html"><![CDATA[<p>2020.8.2日一标现场</p><h2 id="轨道施工工艺流程图"><a href="#轨道施工工艺流程图" class="headerlink" title="轨道施工工艺流程图"></a>轨道施工工艺流程图</h2><p><img src="https://images.xmq.plus/20200818170230.jpg" alt="轨道施工工艺流程图"></p><blockquote><p>对照施工工艺流程可看到现场真实的多种流程步骤，方便理清思绪。</p></blockquote><h2 id="一、现场概况"><a href="#一、现场概况" class="headerlink" title="一、现场概况"></a>一、现场概况</h2><p><img src="https://images.xmq.plus/20200802132015.png" alt="现场概况"></p><ul><li>圆形隧道</li></ul><p><img src="https://images.xmq.plus/20200802144726.png" alt="洞形隧道"></p><ul><li>明挖隧道</li></ul><p><img src="https://images.xmq.plus/20200802144843.png" alt="明挖隧道"></p><ul><li>U形槽</li></ul><p><img src="https://images.xmq.plus/20200802144517.png" alt="U形槽"></p><h2 id="二、行程"><a href="#二、行程" class="headerlink" title="二、行程"></a>二、行程</h2><h3 id="1、铺轨基地"><a href="#1、铺轨基地" class="headerlink" title="1、铺轨基地"></a>1、铺轨基地</h3><p>最先进入的是一标的铺轨基地，基地中有：</p><ul><li>入场第一个材料存放区放的是：钢轨</li></ul><p><img src="https://images.xmq.plus/20200802151947.jpg" alt="钢轨材料堆放地"></p><blockquote><p>炉批号：相当于钢材的身份证。炉号指炼钢的炉罐号，批号是钢材热处理的标号。每批产品都要做力学分析，工艺性能考察等。炉批号是钢材可追溯性证明。可以认为同炉号化学元素相同，同批号力学性能相同。</p></blockquote><p>每一根钢轨端面头部都有标签，标签中包括钢轨标准号，轨型、钢牌号、炉号、长度等。标签条码应包含钢轨热压印标志的完整信息。</p><p><img src="https://images.xmq.plus/20200802201150.jpg" alt="钢轨标签"></p><blockquote><p>TB/T 2344：技术规范，《43kg/m~75kg/m钢轨订货技术条件》</p><p>25000：25m标准轨；材质：U75V；60：60kg/m钢轨</p><p>需求方：CRCC（中国铁建）；制造厂名称：武钢（武汉钢铁（集团）公司）</p></blockquote><p>根据《JYD·03·01-S-GD-01 地下线一般整体道床图》地下线都是使用的60轨，因此该基地存放的都是60钢轨。</p><p><img src="https://images.xmq.plus/20200802205049.jpg" alt="钢轨热打印"></p><ul><li>第二个摆放材料的区域就是：轨枕堆放区</li></ul><p><img src="https://images.xmq.plus/20200802224556.jpg" alt="轨枕堆放区"></p><p>轨枕摆放细节:</p><p><img src="https://images.xmq.plus/20200802224813.jpg" alt="轨枕堆放细节"></p><blockquote><p>轨枕堆放时，需要在下面放置两根木条；</p><p>轨枕中的孔洞用于穿过钢筋</p></blockquote><ul><li>第三个地段就是：轨排组装区</li></ul><p><img src="https://images.xmq.plus/20200802230004.jpg" alt="轨排组装区"></p><blockquote><p>组装区的上方设有两台龙门吊，用于轨排的码放或将轨排运送到工作区。</p></blockquote><ul><li>WJ-7B型扣件</li></ul><p><img src="https://images.xmq.plus/20200802230553.jpg" alt="WJ-7B型扣件详图"></p><p>除地下线道岔使用II型弹条扣件，地下线一般或减振地段都是使用的WJ-7B型扣件（一般或减振）。参观的地段没有涉及地下线道岔区，所以基地扣件都是WJ-7B型扣件（一般或减振）。</p><ul><li>钢筋加工场</li></ul><p><img src="https://images.xmq.plus/20200802230808.jpg" alt="钢筋加工棚"></p><blockquote><p>按照要求对进场的钢筋进行折弯</p></blockquote><ul><li>连接端子存放区</li></ul><p><img src="https://images.xmq.plus/20200818160717.jpg" alt="连接端子存放区"></p><ul><li>基底凿毛</li></ul><p><img src="https://images.xmq.plus/20200818162344.jpg" alt="基底凿毛"></p><blockquote><p>凿毛可采用风镐和钢钎将基底凿成宽度和深度都为10mm，纵横距离不大于100mm的凹凸面，并清除松散屑物和积水，以保证道床和基底良好衔接。</p></blockquote><ul><li>轨排支撑架</li></ul><p><img src="https://images.xmq.plus/20200818163503.jpg" alt="轨排支撑架"></p><blockquote><p>用途：轨面高程、轨距、轨向等调整</p></blockquote><p><img src="https://images.xmq.plus/20200818164215.jpg" alt="轨排支撑架详图"></p><ul><li>绑扎道床钢筋网</li></ul><p><img src="https://images.xmq.plus/20200818163148.jpg" alt="绑扎道床钢筋网"></p><blockquote><p>绑扎钢筋：整体道床采用双层钢筋网，由下至上进行绑扎，绑扎牢固，不漏绑；</p></blockquote><ul><li>焊接扁钢及各种预埋件</li></ul><p><img src="https://images.xmq.plus/20200803153505.jpg" alt="纵向钢筋搭接接处"></p><blockquote><p>结构段：整体道床相邻两个变形缝之间的道床</p><p>结构段内的纵向钢筋的搭接处必须焊接，搭接焊长度不小于钢筋直径的6倍，在搭接处需要对钢筋进行两面焊接，焊缝高度不小于6m。</p><p>在整体道床结构段两侧端头部位引出连接端子</p><p>镀锌扁钢不小于50×8mm的镀锌扁钢焊接成闭合圆</p><p>扁钢与与纵向钢筋必须焊接</p><p>连接端子与侧边扁钢的焊接非常重要，需进行可靠双面焊接，焊接缝长度必须不小于钢筋直径长度6倍，焊缝厚不低于6mm。</p></blockquote><p>两个结构段之间的钢筋不需要焊接起来，而是通过用线将两个连接端子连接起来达到杂散电流的目的。以便后期出现问题提供解决办法。如果直接通过两结构段之间的纵向钢筋连接起来达到杂散电流的目的，后期出现问题很难解决。</p><ul><li>模板安装</li></ul><p><img src="https://images.xmq.plus/20200818165138.jpg" alt="模板安装"></p><ul><li>急救箱</li></ul><p><img src="https://images.xmq.plus/20200818165920.jpg" alt="急救箱"></p><blockquote><p>用于临时连接钢轨</p></blockquote><ul><li>混凝土道床养护</li></ul><p><img src="https://images.xmq.plus/20200818165446.jpg" alt="混凝土养护"></p><ul><li>走行轨支撑</li></ul><p><img src="https://images.xmq.plus/20200818165728.jpg" alt="走行轨支撑"></p><ul><li>道床伸缩缝</li></ul><p><img src="https://images.xmq.plus/20200818164919.jpg" alt="设置伸缩缝"></p><ul><li>浇筑完成的整体道床</li></ul><p><img src="https://images.xmq.plus/20200818164634.jpg" alt="浇筑完成的整体道床"></p>]]></content>
      
      
      <categories>
          
          <category> 土木工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基地 </tag>
            
            <tag> 地下线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地下线整体道床轨道施工</title>
      <link href="posts/156c04c6.html"/>
      <url>posts/156c04c6.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、土建结构移交"><a href="#一、土建结构移交" class="headerlink" title="一、土建结构移交"></a>一、土建结构移交</h2><ul><li><p>参与人员：工程部测量和技术人员、机电人员；</p></li><li><p>情况调查：对混凝土下料口、隧道内止排水情况、预埋件、预留管道、水电接口等施工情况调查</p></li><li><p>提前准备：做好各种施工的技术方案、机械设备、水电准备工作。</p></li></ul><p>出现问题上报及时监理</p><h2 id="二、基标测设"><a href="#二、基标测设" class="headerlink" title="二、基标测设"></a>二、基标测设</h2><ol><li><p>基标测设的依据：上道工序提供的基桩（导线点及水准点）</p></li><li><p>复测：对上道工序提供的导线点及水准点进行复测，导线测量的闭合差和水准测量的误差应满足规范的精度要求。</p></li><li><p>控制基标和加密基标测设：控制基标和加密基标设置于道床两侧水沟内</p></li></ol><p><img src="https://images.xmq.plus/20200801105255.png" alt="控制基标和加密基标设置"></p><h2 id="三、基底凿毛"><a href="#三、基底凿毛" class="headerlink" title="三、基底凿毛"></a>三、基底凿毛</h2><p>  凿毛可采用风镐和钢钎将基底凿成宽度和深度都为10mm，纵横距离不大于100mm的凹凸面，并清除松散屑物和积水，以保证道床和基底良好衔接。凿出的垃圾要及时清扫干净并袋装，用轨道车和龙门吊搬运出隧道，统一运走。</p><img src="https://images.xmq.plus/20200801110226.png" alt="风镐" style="zoom:50%;" /><img src="https://images.xmq.plus/20200801110436.png" alt="钢钎" style="zoom: 33%;" /><h2 id="四、铺设洞内龙门吊走行线"><a href="#四、铺设洞内龙门吊走行线" class="headerlink" title="四、铺设洞内龙门吊走行线"></a>四、铺设洞内龙门吊走行线</h2><ul><li>由于洞内小龙门吊无法左右移动，龙门吊走行线中心线必须与线路中心线一致；</li><li>龙门吊轨顶标高应高于道床面标高，确保龙门吊走行时不会冲撞基标；</li><li>轨下采用钢制支撑架，用膨胀螺栓固定在隧道底板上；</li><li>用膨胀螺栓固定在隧道底板上。两相邻支撑架中间采用槽钢支腿加固，以防产生过大的变形而影响龙门吊的走行；</li></ul><h2 id="五、铺设道床钢筋网"><a href="#五、铺设道床钢筋网" class="headerlink" title="五、铺设道床钢筋网"></a>五、铺设道床钢筋网</h2><ul><li><p>钢筋进场：</p><ul><li>具有质量证明书或试验报告单，每捆钢筋应有标志；</li><li>按GB1499《钢筋混凝土用热轧带肋钢筋》、GB13013《钢筋混凝土用热轧光圆钢筋》的规定抽取试样进行力学性能试验；</li></ul></li><li><p>铺轨基地加工钢筋：严格按照图纸截断和弯制；</p></li><li><p>成品钢筋利用轨道车从下料口运至各作业面进行绑扎、焊接；</p></li><li><p>绑扎钢筋：整体道床采用双层钢筋网，由下至上进行绑扎，绑扎牢固，不漏绑；</p></li><li><p>焊接钢筋：满足GB50204-2015、满足防杂散电流的要求。</p></li></ul><h2 id="六、基地轨排拼装"><a href="#六、基地轨排拼装" class="headerlink" title="六、基地轨排拼装"></a>六、基地轨排拼装</h2><p>以轨节表为轨排拼装的依据，轨排拼装在拼装台座上进行</p><ol><li>叉车布枕，轨枕间距按照轨排表设置；</li><li>安装轨下垫板；</li><li>吊装钢轨至承轨槽；</li><li>安装扣件；</li><li>验收：特别注意检查轨距、轨枕位置及间距、轨距垫安装位置、扣件与轨枕是否密贴等；</li><li>龙门吊吊运：指定地点码放或轨排装车，装车时，最多装三层，先铺的装在上面，后铺的装在下面。</li><li>编号：按铺设顺序注明轨节编号。</li></ol><p>轨枕安装时，直线段两股钢轨的轨枕中心线应与线路中线垂直，曲线上则与线路中线的切线方向垂直。</p><p><img src="https://images.xmq.plus/20200801115554.png" alt="轨排安装"></p><h2 id="七、洞内轨排铺设及调试"><a href="#七、洞内轨排铺设及调试" class="headerlink" title="七、洞内轨排铺设及调试"></a>七、洞内轨排铺设及调试</h2><ol><li>轨道车牵引特制平板车运送轨排至作业区</li><li>用洞内的两台铺轨龙门吊将轨排吊至作业面安装</li><li>依据线路加密基标控制其中线和方向</li><li>用鱼尾板和急救器将其与已铺设定位的轨排连接</li><li>利用人工、轨排支撑架及侧向支撑初步调整轨道几何尺寸（轨排初步就位）</li><li>按照线路基标，用万能道尺、直角尺并通过上承式钢轨支撑架调整轨排高低</li><li>采用钢制螺旋顶杆调整轨道方向</li></ol><p><img src="C:%5CUsers%5CSumsung%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200801150201173.png" alt="上承式钢轨支撑架"></p><h2 id="八、相关专业接口及伸缩缝的设置"><a href="#八、相关专业接口及伸缩缝的设置" class="headerlink" title="八、相关专业接口及伸缩缝的设置"></a>八、相关专业接口及伸缩缝的设置</h2><ul><li>根据排水专业提供的资料，在废水泵站和排水管的位置设置集水坑</li><li>为人防门和防淹门预留合适的位置和接口条件</li><li>过轨管埋设在两轨枕之间的道床内，每个枕间最多埋设1根，距基底60mm左右</li></ul><h2 id="九、道床模板安装"><a href="#九、道床模板安装" class="headerlink" title="九、道床模板安装"></a>九、道床模板安装</h2><ul><li>地下线道床排水沟底混凝土宜与道床主体一次浇注成型，也可二次浇筑</li><li>施工时应特别注意断面不一致处的水沟顺接，确保水沟与结构的密封和排水通畅</li><li>为确保模板的稳定性和安装精度，在顺线路方向每隔0.5m，采用φ12的钻头在隧道基底钻孔，插入φ10的钢筋以固定模板的位置，采用内外交错方式在模板两侧钻空钉钢筋来固定模板，模板间采用特制夹具结合在一起。</li><li>模板上方用‘S’形弯钩连接到轨底板内侧，在轨枕和模板之间采用小方木支撑，以保证模板的稳定性</li></ul><p><img src="https://images.xmq.plus/20200801151535.png" alt="道床模板"></p><h2 id="十、浇筑混凝土"><a href="#十、浇筑混凝土" class="headerlink" title="十、浇筑混凝土"></a>十、浇筑混凝土</h2><p>混凝土浇筑可通过泵送或料斗运送</p><ul><li><p>料斗运送：</p><ul><li>混凝土罐车到达下料口</li><li>将混凝土通过下料管下到轨道平板车上的料斗内</li><li>轨道车将料斗运送到工作面</li><li>铺轨龙门吊吊起料斗运送到浇筑位置</li><li>卸料浇筑</li></ul></li></ul><h2 id="十一、混凝土养护"><a href="#十一、混凝土养护" class="headerlink" title="十一、混凝土养护"></a>十一、混凝土养护</h2><p>道床混凝土浇筑完毕，初凝完成后，立即用土工布覆盖混凝土表面，同时洒水润湿。养护过程中应随时保持土工布的润湿。其养护时间不得少于7天。</p>]]></content>
      
      
      <categories>
          
          <category> 土木工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 地下线 </tag>
            
            <tag> 整体道床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为你的Hexo博客添加新页面</title>
      <link href="posts/17f27652.html"/>
      <url>posts/17f27652.html</url>
      
        <content type="html"><![CDATA[<h1 id="为你的Hexo博客添加新页面"><a href="#为你的Hexo博客添加新页面" class="headerlink" title="为你的Hexo博客添加新页面"></a>为你的Hexo博客添加新页面</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>由于自己收藏了很多各式各样的网站，很多都很有价值，一直都在存在浏览器书签中，由于书签网站比较多，东西比较杂乱。需要整理，正好想将自己的网站整理出来放到自己的Blog上。于是想做一个书签网站分享页。</p></blockquote><p>今天来说下如何在 Hexo 博客中添加一个简单的静态导航页面！（针对主题文件格式为<code> ejs</code> 的）</p><p>首先看下效果吧！(以<code>Hexo-themes-matery</code>主题为例)</p><p><img src="https://images.xmq.plus/20200713180942.png" alt="书签"></p><h2 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h2><p>由于是要在导航栏中另起新的一页，因此需要新建一个页面：</p><pre><code class="line-numbers language-bash">hexo new page tabs # tabs 新建页面名称，可自由选择</code></pre><h2 id="修改页面格式"><a href="#修改页面格式" class="headerlink" title="修改页面格式"></a>修改页面格式</h2><p>修改<code>tabs</code>目录下的<code>index.md</code>的格式：</p><pre><code class="line-numbers language-markdown">title: 书签date: 2020-07-13 17:14:02type: &quot;tabs&quot;layout: &quot;tabs&quot;</code></pre><p>设置页面名称为“书签”，类型和布局为<code>tabs</code>。这一步是必须的，否则无法让<code>.ejs</code>文件生效，页面也将无法成功解析。</p><h2 id="在主题配置文件中添加新建页面"><a href="#在主题配置文件中添加新建页面" class="headerlink" title="在主题配置文件中添加新建页面"></a>在主题配置文件中添加新建页面</h2><p>需要将页面能在导航栏看到就需要在主题配置文件中加入新建的页面信息：</p><pre><code class="line-numbers language-yml"># main menu navigation url and icon# 配置菜单导航的名称、路径和图标icon.menu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle  Contact:    url: /contact    icon: fas fa-comments  Friends:    url: /friends  书签:        # 新建页面index.md文件中titile的参数    url: /tabs     # 表示路径，代表根目录source文件夹下tabs文件夹下    icon: fas fa-location-arrow     # 显示在导航栏上的图标    #fa-location-arrow来自https://fontawesome.com/icons?d=gallery</code></pre><h2 id="新建ejs文件"><a href="#新建ejs文件" class="headerlink" title="新建ejs文件"></a>新建ejs文件</h2><p>上一步将我们新建的页面放到了导航栏，能让我们有入口进入了，接下来就是布置进入这个新建页面后呈现的内容了。</p><p>在主题目录下<code>layout</code>下新建 <code>tabs.ejs</code>，除拓展名为<code>.ejs</code>外，文件名要求和之前的统一：</p><pre><code class="line-numbers language-html">&lt;div class=&quot;navi-height bg-cover pd-header &quot;&gt;    &lt;div class=&quot; link-box container&quot;&gt;        &lt;!-- 搜索框 --&gt;        &lt;div class=&quot;baidu baidu-2 large-screen&quot;&gt;            &lt;form name=&quot;f&quot; action=&quot;https://www.baidu.com/&quot; target=&quot;_blank&quot;&gt;                &lt;div id=&quot;Select-2&quot;&gt;                    &lt;div class=&quot;Select-box-2&quot; id=&quot;baidu&quot;&gt;                        &lt;ul style=&quot;height: 46px;&quot;&gt;                            &lt;li class=&quot;this_s&quot;&gt;百 · 度&lt;/li&gt;                            &lt;li class=&quot;bing_s&quot;&gt;必 · 应&lt;/li&gt;                            &lt;li class=&quot;google_s&quot;&gt;谷 · 歌&lt;/li&gt;                            &lt;li class=&quot;baidu_s&quot;&gt;百 · 度&lt;/li&gt; // &lt;li&gt;&lt;/li&gt;定义列表项                        &lt;/ul&gt;  // &lt;ul&gt;&lt;/ul&gt;定义无序列表                    &lt;/div&gt; &lt;input name=&quot;wd&quot; id=&quot;kw-2&quot; maxlength=&quot;100&quot; autocomplete=&quot;off&quot; type=&quot;text&quot;&gt;                &lt;/div&gt;                &lt;div class=&quot;qingkong&quot; id=&quot;qingkong&quot; title=&quot;清 · 空&quot; style=&quot;display: none;&quot;&gt;x&lt;/div&gt; &lt;input value=&quot;搜 · 索&quot;                    id=&quot;su-2&quot; type=&quot;submit&quot;&gt;                &lt;ul class=&quot;keylist&quot;&gt;&lt;/ul&gt;            &lt;/form&gt;        &lt;/div&gt; &lt;!-- 链接 --&gt;        &lt;div class=&quot;row tags-posts &quot;&gt;            &lt;div class=&quot;col s12 m6 l4 friend-div&quot; data-aos=&quot;zoom-in-up&quot;&gt;                &lt;div class=&quot;card&quot;&gt;                    &lt;div class=&quot;jj-list-tit&quot;&gt;娱乐 · 影视&lt;/div&gt;                    &lt;ul class=&quot;jj-list-con&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.jd.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;京东&lt;/a&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.taobao.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;淘宝&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.tmall.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;天猫&lt;/a&gt;&lt;/li&gt;                        &lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://v.qq.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;腾讯视频&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://www.iqiyi.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;爱奇艺&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;哔哩哔哩&lt;/a&gt; &lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://music.163.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;网易云音乐&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://y.qq.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;QQ音乐&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://www.kugou.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;酷狗音乐&lt;/a&gt;&lt;/li&gt;                    &lt;/ul&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;div class=&quot;col s12 m6 l4 friend-div&quot; data-aos=&quot;zoom-in-up&quot;&gt;                &lt;div class=&quot;card&quot;&gt;                    &lt;div class=&quot;jj-list-tit&quot;&gt;社区 · Code&lt;/div&gt;                    &lt;ul class=&quot;jj-list-con&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.mobaijun.com/contact/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;留言&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://github.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://coding.net/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Coding&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://juejin.im/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;掘金&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://gitee.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;码云&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.csdn.net/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;CSDN&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;简书&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://segmentfault.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;思否&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;云+社区&lt;/a&gt;&lt;/li&gt;                    &lt;/ul&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;div class=&quot;col s12 m6 l4 friend-div&quot; data-aos=&quot;zoom-in-up&quot;&gt;                &lt;div class=&quot;card&quot;&gt;                    &lt;div class=&quot;jj-list-tit&quot;&gt;实用 · 工具&lt;/div&gt;                    &lt;ul class=&quot;jj-list-con&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;https://mdnice.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Nice编辑器&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://translate.google.cn/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;谷歌翻译&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.uupoop.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;在线PS&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.processon.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;思维导图&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://wallhaven.cc/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;超清壁纸&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://cli.im/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;二维码&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://www.yinfans.me/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;音范思&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.52pojie.cn/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;吾爱破解&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://my.openwrite.cn/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;OW分发&lt;/a&gt;&lt;/li&gt;                    &lt;/ul&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;div class=&quot;col s12 m6 l4 friend-div&quot; data-aos=&quot;zoom-in-up&quot;&gt;                &lt;div class=&quot;card&quot;&gt;                    &lt;div class=&quot;jj-list-tit&quot;&gt;编程 · 学习&lt;/div&gt;                    &lt;ul class=&quot;jj-list-con&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;开源中国&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://htmldog.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;HTML狗&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.icourse163.org/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;中国大学慕课&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.imooc.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;慕课网&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://www.wxapp-union.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;小程序&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.runoob.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;菜鸟教程&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://blog.51cto.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;51CTO&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.shiyanlou.com/library/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;实验楼&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://spring.io/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Spring&lt;/a&gt;&lt;/li&gt;                    &lt;/ul&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;div class=&quot;col s12 m6 l4 friend-div&quot; data-aos=&quot;zoom-in-up&quot;&gt;                &lt;div class=&quot;card&quot;&gt;                    &lt;div class=&quot;jj-list-tit&quot;&gt;资讯 · 趋势&lt;/div&gt;                    &lt;ul class=&quot;jj-list-con&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.huxiu.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;虎嗅&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://insights.stackoverflow.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;技术调查&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://www.asciiworld.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;摸鱼&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://sspai.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;少数派&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://zh.wikihow.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;WikeHom&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.awesomes.cn/rank?sort=hot&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;前端趋势&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://github-trending.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;GitHub趋势&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.tiobe.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;编程趋势&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://trends.google.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Google趋势&lt;/a&gt;&lt;/li&gt;                    &lt;/ul&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;div class=&quot;col s12 m6 l4 friend-div&quot; data-aos=&quot;zoom-in-up&quot;&gt;                &lt;div class=&quot;card&quot;&gt;                    &lt;div class=&quot;jj-list-tit&quot;&gt;搜索 · 其他&lt;/div&gt;                    &lt;ul class=&quot;jj-list-con&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;https://ac.scmor.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;谷歌镜像&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://www.pansoso.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;网盘搜索&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://tool.mkblog.cn/music/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;音乐搜索&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.dytt8.net/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;电影天堂&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://carbon.now.sh/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;代码图片&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.zhipin.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Boos&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;图标库&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.qvdv.com/tools/qvdv-guid.html&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;在线工具&lt;/a&gt;                        &lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://zhongguose.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;中国色&lt;/a&gt;&lt;/li&gt;                    &lt;/ul&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;script&gt; /*选择搜索引擎*/ $(&#39;.Select-box ul&#39;).hover(function () &#123; $(this).css(&#39;height&#39;, &#39;auto&#39;) &#125;, function () &#123; $(this).css(&#39;height&#39;, &#39;40px&#39;) &#125;); $(&#39;.Select-box-2 ul&#39;).hover(function () &#123; $(this).css(&#39;height&#39;, &#39;auto&#39;) &#125;, function () &#123; $(this).css(&#39;height&#39;, &#39;46px&#39;) &#125;); $(&#39;.Select-box li&#39;).click(function () &#123; var _tihs = $(this).attr(&#39;class&#39;); var _html = $(this).html(); if (_tihs == &#39;baidu_s&#39;) &#123; _tihs = &#39;https://www.baidu.com/s&#39;; _name = &#39;wd&#39;; &#125; if (_tihs == &#39;google_s&#39;) &#123; _tihs = &#39;https://www.google.com/search&#39;; _name = &#39;q&#39;; &#125; if (_tihs == &#39;bing_s&#39;) &#123; _tihs = &#39;https://www.bing.com/search&#39;; _name = &#39;q&#39;; &#125; $(&#39;.baidu form&#39;).attr(&#39;action&#39;, _tihs); $(&#39;.this_s&#39;).html(_html); $(&#39;#kw&#39;).attr(&#39;name&#39;, _name); $(&#39;.Select-box ul&#39;).css(&#39;height&#39;, &#39;40px&#39;) &#125;); $(&#39;.Select-box-2 li&#39;).click(function () &#123; var _tihs = $(this).attr(&#39;class&#39;); var _html = $(this).html(); if (_tihs == &#39;baidu_s&#39;) &#123; _tihs = &#39;https://www.baidu.com/s&#39;; _name = &#39;wd&#39;; &#125; if (_tihs == &#39;google_s&#39;) &#123; _tihs = &#39;https://www.google.com/search&#39;; _name = &#39;q&#39;; &#125; if (_tihs == &#39;bing_s&#39;) &#123; _tihs = &#39;https://www.bing.com/search&#39;; _name = &#39;q&#39;; &#125; $(&#39;.baidu form&#39;).attr(&#39;action&#39;, _tihs); $(&#39;.this_s&#39;).html(_html); $(&#39;#kw-2&#39;).attr(&#39;name&#39;, _name); $(&#39;.Select-box-2 ul&#39;).css(&#39;height&#39;, &#39;48px&#39;) &#125;); //清空输入框内容 $(&#39;.qingkong&#39;).click(function () &#123; cls(); $(this).css(&#39;display&#39;, &#39;none&#39;) &#125;); function cls() &#123; var sum = 0; var t = document.getElementsByTagName(&quot;INPUT&quot;); for (var i = 0; i &lt; t.length; i++) &#123; if (t[i].type == &#39;text&#39;) &#123; ++sum; t[i].value = &quot;&quot;;//清空 &#125; &#125; &#125; //清空输入框按钮的显示和隐藏 function if_btn() &#123; var btn_obj = document.getElementById(&quot;kw&quot;) || document.getElementById(&quot;kw-2&quot;); var cls_btn = document.getElementById(&quot;qingkong&quot;); var btn_obj_val; var times; //当元素获得焦点时 if (btn_obj == &#39;&#39; || btn_obj == null) &#123; return false; //如果没有找到这个元素，则将函数返回，不继续执行 &#125; btn_obj.onfocus = function () &#123; times = setInterval(function () &#123; btn_obj_val = btn_obj.value; if (btn_obj_val != 0) &#123; cls_btn.style.display = &quot;block&quot;; &#125; else &#123; cls_btn.style.display = &quot;none&quot;; &#125; &#125;, 200); &#125; //元素失去焦点时 btn_obj.onblur = function () &#123; clearInterval(times); &#125; &#125; &lt;/script&gt;    &lt;/div&gt;&lt;/div&gt;&lt;style&gt;    * &#123;        margin: 0;        padding: 0;        font-family: &quot;微软雅黑&quot;    &#125;    ul,li,h1,h2,h3,h4,h5,h6,p,form,dl,dt,dd &#123;        margin: 0px;        padding: 0px;        font-size: 14px;        font-weight: normal;    &#125;    img &#123;        border-style: none;    &#125;    li &#123;        list-style: none;        float: left    &#125;    a &#123;        text-decoration: none    &#125;    .card &#123;        background-color: rgba(25, 240, 229, 0);        width: 96%;        margin-left: 2%    &#125;    .baidu &#123;        float: left;        margin-left: 100px;    &#125;    .baidu form &#123;        position: relative    &#125;    .Select-box ul &#123;        height: 40px;        position: absolute;        left: -1px;        top: 0px;        z-index: 9999;        background: #FFF;        border: 1px solid #ccc;        border-top: none;        overflow: hidden    &#125;    .Select-box li &#123;        width: 60px;        line-height: 40px;        font-size: 14px;        color: #484848;        border: 0;        cursor: pointer;    &#125;    .Select-box li:hover &#123;        background: #3385ff;        color: #FFF;    &#125;    .Select-box .this_s &#123;        color: #317ef3;    &#125;    .Select-box .this_s:hover &#123;        background: #FFF;        color: #317ef3;    &#125;    .qingkong &#123;        position: absolute;        right: 120px;        top: 12px;        width: 18px;        height: 18px;        background: rgba(0, 0, 0, 0.1);        border-radius: 18px;        line-height: 16px;        color: #666666;        cursor: pointer;        text-align: center;        font-size: 14px;        display: none;    &#125;    .qingkong:hover &#123;        background: rgba(0, 0, 0, 0.2);    &#125;    .qingkong:active &#123;        background: rgba(0, 0, 0, 0.3);    &#125;    .baidu-2 &#123;        width: 100%;        height: 110px;        margin: 0 auto;        background: none;        padding-top: 50px;    &#125;    .baidu-2 form &#123;        width: 520px;        margin: 0 auto;    &#125;    .baidu-2 input &#123;        padding: 13px 8px;        opacity: 0.9;        font-size: 15px;    &#125;    #Select-2 &#123;        float: left;    &#125;    .Select-box-2 &#123;        text-align: center;        float: left;        position: relative;    &#125;    .Select-box-2 ul &#123;        height: 46px;        position: absolute;        left: 0px;        top: 1px;        z-index: 9999;        background: rgba(255, 255, 255, 0.9);        border: 1px solid #ccc;        border-top: none;        overflow: hidden    &#125;    .Select-box-2 li &#123;        width: 60px;        line-height: 46px;        font-size: 15px;        color: #484848;        border: 0;        cursor: pointer;    &#125;    .Select-box-2 li:hover &#123;        background: #3385ff;        color: #FFF;    &#125;    .Select-box-2 .this_s &#123;        color: #317ef3;    &#125;    .Select-box-2 .this_s:hover &#123;        background: none;        color: #317ef3;    &#125;    #kw-2 &#123;        width: 335px;        outline: 0;        border: 1px solid #ccc;        background: rgba(255, 255, 255, 0.2);        color: #000000;        padding-left: 70px;        font-weight: bold;    &#125;    /*修改搜索框样式*/    #su-2 &#123;        width: 90px;        background: blue;        border: none;        border-top: #3385ff 1px solid;        border-bottom: 1px solid #2d78f4;        color: #FFF;        cursor: pointer;        /*去轮廓阴影*/        outline: none;    &#125;    /*光标移动到搜索框颜色*/    #su-2:hover &#123;        background: blue;        border-bottom: 1px solid blue;    &#125;    #su-2:active &#123;        background: blue;        box-shadow: inset 1px 1px 3px blue;        -webkit-box-shadow: inset 1px 1px 3px blue;    &#125;    .jj-list-tit &#123;        font-size: 16px;        line-height: 25px;        color: #ffffff;        width: 100%;        padding-left: 38.5%;    &#125;    .jj-list-con &#123;        overflow: hidden;        margin: 0 auto    &#125;    /*控制网站列表间距*/    .jj-list-con li &#123;        width: 31.333%;        margin: 1%;    &#125;    .link-3 &#123;        display: block;        background: rgba(0, 0, 0, .35);        color: #FFF;        font-size: 13px;        text-align: center;        line-height: 35px;        padding: 4px 0;        border-radius: 2px;        transition: all 0.2s    &#125;    .link-3:hover &#123;        background: rgba(0, 0, 0, .45);        font-size: 15px;        font-weight: bold    &#125;    /*1栏 小于584*/    @media only screen and (max-width: 584px) &#123;        .navi-height &#123;            height: 1300px;        &#125;        .link-box &#123;            margin-top: 5%;        &#125;        .large-screen &#123;            display: none;        &#125;    &#125;    /* 2栏 大于584 小于993px */    @media only screen and (min-width: 584px) and (max-width: 993px) &#123;        .navi-height &#123;            height: 800px;        &#125;        .link-box &#123;            margin-top: 5%;        &#125;        .large-screen &#123;            display: none;        &#125;    &#125;    /*3栏 大于993px*/    @media only screen and (min-width: 993px) &#123;        .navi-height &#123;            position: absolute;            width: 100%;            height: 100%;        &#125;    &#125;    /* 隐藏footer */    .page-footer &#123;        display: none;    &#125;&lt;/style&gt;&lt;% if (theme.banner.enable) &#123; %&gt;&lt;script&gt;    // 每天切换 banner 图.  Switch banner image every day.    var bannerUrl = &quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(&#39;/medias/banner/&#39;) %&gt;&quot; + new Date().getDay() + &#39;.jpg&#39;;    $(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(&#39; + bannerUrl + &#39;)&#39;);&lt;/script&gt;&lt;% &#125; else &#123; %&gt;&lt;script&gt;    $(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(&#39;/medias/banner/0.jpg&#39;) %&gt;)&#39;);&lt;/script&gt;&lt;% &#125; %&gt;</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>大体上看整个过程只有三步：</p><ul><li>使用<code>hexo new page page_name</code>命令新建页面出来；</li><li>设置新页面的布局格式；（使用的是<code>tabs.ejs</code>的布局文件）；</li><li>在配置文件中设置新建页面的写入导航栏列表中；</li><li>写好<code>tab.ejs</code>布局文件;</li><li><code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code>重新生成部署网页。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Hexo-themes-matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Shell脚本自定义命令</title>
      <link href="posts/c2771ad8.html"/>
      <url>posts/c2771ad8.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>无论是在搭建自己的个人博客过程中还是平时的工作生活中，都会有文件备份的习惯，有些文件往往比较重要，需要经常性的打包备份一次。就我在搭建Hexo博客而言，每次都要清理<code>public</code>文件夹后将文件进行打包备份，移动到其他文件夹或者网盘存储。每次重复性的，周期性的操作认为比较繁琐，因此想使用一个简单的脚本将重复繁琐的备份任务用一个命令解决。</p><p>开始吧~</p><h2 id="什么是shell"><a href="#什么是shell" class="headerlink" title="什么是shell"></a>什么是shell</h2><p>shell简单的说就是我们使用的命令解释器，你打开的终端就是shell。你部署hexo博客就是用的Git bash，其中bash属于shell中的一种。</p><h2 id="什么是shell脚本"><a href="#什么是shell脚本" class="headerlink" title="什么是shell脚本"></a>什么是shell脚本</h2><p>我们打开终端(shell)敲下一行行命令，是只能一条一条的发送命令。我所理解的shell脚本就是，可以将bash中一条一条敲下的命令组合到一起，命令之间可以相互联系，最终依次全部执行的文件。而且这类文件是一类带有<code>.sh</code>拓展名的文件。</p><ul><li>shell脚本如何编写？</li></ul><p>使用<code>vi</code>/<code>vim</code>编辑器、<code>VS code</code>、<code>Notepad++</code>等其他编辑器，以<code>shell scripts</code>的格式保存即可编写<code>.sh</code>文件。</p><p>使用<code>bash</code>中执行的命令都可以在<code>shell</code>脚本中执行。</p><p>如需要深入了解<code>shell</code>脚本可参考：<a href="https://www.runoob.com/linux/linux-shell.html">shell教程</a>。</p><ul><li>shell脚本如何运行？<ul><li>可双击<code>.sh</code>文件直接运行</li><li>在脚本文件目录下运行<code>sh xx.sh</code></li><li>添加环境变量PATH，使你的脚本变成一个命令。</li></ul></li></ul><h2 id="制作打包备份博客源代码的shell脚本"><a href="#制作打包备份博客源代码的shell脚本" class="headerlink" title="制作打包备份博客源代码的shell脚本"></a>制作打包备份博客源代码的shell脚本</h2><p>开始制作脚本之前，需要了解一下，在打包过程中，需要用到自己安装的压缩软件的打包命令。</p><p>我使用的是<a href="https://cn.bandisoft.com/bandizip/">Bandizip软件</a>，官网提供了软件相关的命令行代码，<a href="https://cn.bandisoft.com/bandizip/help/parameter/">Bandizip命令行参数</a>。其他软件可自行百度。此教程使用Bandizip示例。</p><p><img src="https://images.xmq.plus/20200712234406.png" alt="Bandizip命令行参数"></p><p>使用<code>vi</code>、<code>vim</code>、<code>VS code</code>等编辑器创建新文本，使用简单的命令组合制作脚本：</p><pre><code class="line-numbers language-bash">#!/bin/sh# 用于打包备份blog文件cd /c/Users/Sumsung524/Sumsung524.github.io # 定位到需要清理的位置echo &quot;已定位到目标文件夹&quot;hexo clean # 清理文件echo &quot;清理完成&quot;cd /c/Users/Sumsung524 # 定位到需要打包的位置echo &quot;已定位到打包位置&quot;bandizip.exe c -y $(date -d &quot;today&quot; +&quot;%Y.%m.%d&quot;).zip Sumsung524.github.io# 将Sumsung524.github.io文件夹打包，并以当天打包时间命名。# c表示打包文件，-y表示：所有询问都为是若无错误发生，则在任务完成时关闭（解）压缩窗口echo &quot;打包完成&quot;mv $(date -d &quot;today&quot; +&quot;%Y.%m.%d&quot;).zip /C/Users/Sumsung/OneDrive/MyBlog/Backup.zip# 将生成的打包文件移动到备份文件夹中echo &quot;移动成功&quot;cd /c/Users/Sumsung524/Sumsung524.github.io hexo generate # 回到原来的位置重新解析文件echo &quot;重新解析成功&quot;</code></pre><p>做好之后以<code>.sh</code>拓展名保存到一个位置（你也可以直接不带任何拓展名，同样可以直接运行命令，甚至更加方便）。其中<code>#!/bin/sh</code>代表是一个<code>shell</code>脚本文件（这个没有关系不大），<code>#</code>用于注释，<code>echo</code>表示输出内容，可以不用。<code>$(date -d &quot;today&quot; +&quot;%Y.%m.%d&quot;).zip</code>表示打包当天的日期。</p><p>如果你认为代码太复杂可以简化为：</p><pre><code class="line-numbers language-bash">#!/bin/shcd /c/Users/Sumsung524/Sumsung524.github.iohexo cleancd /c/Users/Sumsung524bandizip.exe c -y $(date -d &quot;today&quot; +&quot;%Y.%m.%d&quot;).zip Sumsung524.github.iomv $(date -d &quot;today&quot; +&quot;%Y.%m.%d&quot;).zip /C/Users/Sumsung/OneDrive/MyBlog/Backup.zipcd /c/Users/Sumsung524/Sumsung524.github.io hexo generate</code></pre><p>如果你需要在打包的时候需要对文件加上其他命名，可加入如下代码：</p><pre><code class="line-numbers language-bash">echo &quot;输入文件名&quot;read file_namebandizip.exe c -y $(date -d &quot;today&quot; +&quot;%Y.%m.%d&quot;)&quot;$&#123;file_name&#125;&quot;.zip Sumsung524.github.iomv *.zip /C/Users/Sumsung/OneDrive/MyBlog/Backup.zip</code></pre><p>在这里添加了一个叫<code>file_name</code>（名称自取）的变量，访问变量时，需要在变量名称之前添加<code>“$”</code>，如<code>“$ &#123;变量&#125;”</code>，将变量用<code>“&#123;&#125;”</code>括起来。</p><p>将<code>$(date -d &quot;today&quot; +&quot;%Y.%m.%d&quot;).zip</code>改为<code>*.zip</code>。会将所在目录下的所有<code>zip</code>格式移动到目标目录。</p><p>这样做好之后，运行脚本的时候就需要你设置文件名：</p><p><img src="https://images.xmq.plus/20200713161443.png" alt="要求输入文件名"></p><p>当然如果不想加文件名的时候可以选择直接回车。效果和之前脚本一样。</p><h2 id="添加PATH"><a href="#添加PATH" class="headerlink" title="添加PATH"></a>添加PATH</h2><p>做好脚本之后，测试一两次没有问题之后，我们将脚本保存到一个文件夹中，以便日后再用。但以后每次使用都要到脚本文件目录下执行脚本，要在前面输入很长一段的路径，很不方便。因此我们要找一个linux命令行在任意目录下启动任意的脚本的方法，就是给他添加一个PATH。</p><blockquote><p>简单说PATH就是一组路径的字符串变量，当你输入的命令不带任何路径时，LINUX会在PATH记录的路径中查找该命令。</p><ul><li>PATH的作用就是每次在Bash里面输入一个命令时, Bash都会去PATH列表里面去找对应的文件,找到了就执行, 脚本其实就是一个可执行的文件(ls, cd, mkdir..)</li><li>可以输入命令echo $PATH查看所有的路径,Bash就会在这些路径中依次查找</li></ul></blockquote><ul><li>临时设置PATH</li></ul><pre><code class="line-numbers language-bash">pwd #查看下脚本所在的绝对路径export PATH=&quot;脚本的绝对路径:$PATH&quot; # 这句话就是将脚本所在的目录加到PATH里</code></pre><p>上面的PATH在重启Bash后就会失效。</p><ul><li>永久设置PATH</li></ul><pre><code class="line-numbers language-bash">touch ~/.bashrc # 创建~/.bashrcvi ~/.bashrc # 编辑~/.bashrc在编辑器里写入 export PATH=&quot;local的绝对路径:$PATH&quot;source ~/.bashrc # 保存编辑,这句命令一定要写zip # zip是我的脚本文件名，直接输入你的文件名即可直接运行脚本。</code></pre><p><strong>注意:</strong></p><p>整个备份脚本文件已经做完了，以后可以轻松的使用一个自己自定义的命令（修改脚本文件名）即可完成文件备份了！在使用过程中有几个需要注意的点：</p><ol><li>不要去改动备份目标文件夹路径中文件夹的名称，或者改动之后相应的脚本位置也需要统一改动。</li><li>打包目录下不能存放其他<code>zip</code>格式的文件，否则会全部移动到目标路径文件夹下。</li><li>可以将备份文件的目标路径设置为网盘的备份文件夹（OneDrive、百度网盘、天翼云等），从而实现双备份。</li></ol><blockquote><p>个人使用的是Onedrive网盘同步盘，将目标文件夹下备份打包好的文件，等网盘同步之后，使用释放空间功能，将打包的文件上传到网盘而不保留到本地，既释放了空间，也实现的文件的备份。目标文件夹只相当于一个临时存储区。</p></blockquote><p><img src="https://images.xmq.plus/20200713163508.png" alt="Onedrive释放本地空间存储文件至云端"></p><p>另外，如需系统学习shell脚本请下载：<a href="https://sumsung.lanzous.com/iRRTvekg2na">Linux命令行与shell脚本编程大全.第3版</a>。</p><h2 id="其他实例"><a href="#其他实例" class="headerlink" title="其他实例"></a>其他实例</h2><h3 id="上传Github做笔记备份"><a href="#上传Github做笔记备份" class="headerlink" title="上传Github做笔记备份"></a>上传Github做笔记备份</h3><p>目的：新建命令gitbackup一键备份笔记，并根据日期提交git commit</p><p>操作：<br>新建文件gitbackup，VScode编辑命令，保存：</p><pre><code class="line-numbers language-BASH">#!/bin/sh# 定位到笔记文件路径下cd ~/matery/source/_postsgit add *# 提交备注日期时间git commit -m &quot;$(date -d &quot;today&quot; +&quot;%Y.%m.%d&quot;)&quot;# 查看上传内容git statusgit push origin master</code></pre><h3 id="简化上传博客命令"><a href="#简化上传博客命令" class="headerlink" title="简化上传博客命令"></a>简化上传博客命令</h3><p>自己的博客需要上传至腾讯托管和GitHub仓库<br>正常情况下需要清空、压缩、上传github、上传腾讯云</p><pre><code class="line-numbers language-BASH">hexo cl &amp;&amp; gulp &amp;&amp; hexo d &amp;&amp; tcb hosting deploy ~/matery/public -e sumsung-107420 &amp;&amp; hexo cl</code></pre><p>命令太长，想设置一个命令<code>uploadblog</code>代替上一段命令</p><p>新建<code>uploadblog</code> 文件，写入命令并保存:</p><pre><code class="line-numbers language-BASH">#!/bin/sh# 定位路径cd ~/matery/# 清理hexo clean# 压缩代码gulp# 上传githubhexo d# 上传腾讯云托管tcb hosting deploy ~/matery/public -e sumsung-107420# 清理hexo cl</code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新建文章自动打开本地Markdown编辑器</title>
      <link href="posts/efa3dd55.html"/>
      <url>posts/efa3dd55.html</url>
      
        <content type="html"><![CDATA[<h1 id="新建文章自动打开本地Markdown编辑器"><a href="#新建文章自动打开本地Markdown编辑器" class="headerlink" title="新建文章自动打开本地Markdown编辑器"></a>新建文章自动打开本地Markdown编辑器</h1><p>使用Hexo写新文章时，需要控制台执行 <code>hexo new &quot;文章名字&quot;</code>，这样就会在<code>_posts</code> 下生成一篇新文章，但需要手动打开，挺麻烦的。</p><p>只需要在站点根目录下新建 <code>scripts</code> 目录：</p><p><img src="https://images.xmq.plus/20200712121257.png" alt="新建Scripts目录"></p><p>然后在新建 :</p><p><img src="https://images.xmq.plus/20200712121646.png" alt="新建`js`文件"></p><p>在文件填入一下内容：</p><pre><code class="line-numbers language-js">var spawn = require(&#39;child_process&#39;).exec;// Hexo 2.x 用户复制这段//hexo.on(&#39;new&#39;, function(path)&#123;  //spawn(&#39;start  &quot;markdown编辑器绝对路径.exe&quot; &#39; + path);//&#125;);// Hexo 3 用户复制这段hexo.on(&#39;new&#39;, function(data)&#123;  spawn(&#39;start  &quot;C:\Program Files\Typora\Typora.exe&quot; &#39; + data.path);&#125;);</code></pre><p>其中 <code>&quot;C:\Program Files\Typora\Typora.exe&quot; </code>是我本地编辑器的路径，只需要改为你本地编辑器的路径即可，然后在执行 <code>hexo cl &amp;&amp; hexo g -d</code>，部署到 GitHub 即可，以后在发布文章就会自动打开编辑器。</p><p><img src="https://images.xmq.plus/20200712121839.png"></p><p>如果你是Mac平台Hexo用户，则将下列内容写入你的脚本：</p><pre><code class="line-numbers language-js">var exec = require(&#39;child_process&#39;).exec;// Hexo 2.x 用户复制这段hexo.on(&#39;new&#39;, function(path)&#123;  exec(&#39;open -a &quot;markdown编辑器绝对路径.app&quot; &#39; + path);&#125;);// Hexo 3 用户复制这段hexo.on(&#39;new&#39;, function(data)&#123;  exec(&#39;open -a &quot;markdown编辑器绝对路径.app&quot; &#39; + data.path);&#125;);</code></pre><p>保存并退出脚本之后，在命令行中键入：</p><pre><code class="line-numbers language-bash">hexo new &quot;newfile&quot;</code></pre><p>就顺利地自动打开了自动生成的md文件啦~</p><p>接下来每次新建的md笔记文件模板，打开根目录下scaffolds/post.md更改模板布局：</p><pre><code class="line-numbers language-markdown">---title: &#123;&#123; title &#125;&#125;img: &#39;&#39;toc: truetags:  - tag  - tagcategories: 计算机abbrlink: date: &#123;&#123; date &#125;&#125;---</code></pre><p>默认的模板只有日期和标题，自己可以添加更多设置。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子书资源获取方法</title>
      <link href="posts/8fd1c38f.html"/>
      <url>posts/8fd1c38f.html</url>
      
        <content type="html"><![CDATA[<h1 id="电子书资源获取方法"><a href="#电子书资源获取方法" class="headerlink" title="电子书资源获取方法"></a>电子书资源获取方法</h1><p>在如今，资源的获取能力也是一种能力！互联网时代，网络资源绝对是你无法想象的。很多资源只是你不知道的或者拿不到的，大多数原因在于自身，而不是网络上没有。<br>本人结合自身多年的搜索经验，整理分享一下如何在互联网上行之有效地找到想要的电子书资源的方法和思路。教大家如何尽量免费享用互联网资源就尽量享用（白 piao~），如果非要花钱的话那也就花个顶多几块钱，也不至于掉肉。<br>同时也想利用搜索电子书的方法和途径的讲解，阐述整个搜索所有资源的方法和思路。</p><ul><li>分为两大步骤，先搜索，后下载。</li><li>按照文章的顺序依次进行。直到找到或下载为止。</li></ul><h2 id="一、电子书资源搜索方法"><a href="#一、电子书资源搜索方法" class="headerlink" title="一、电子书资源搜索方法"></a>一、电子书资源搜索方法</h2><p>搜索，一提到搜索不能仅仅想到百度。如果你只能想到百度，那么你获取到的资源就只有百度能给你。资源的获取方式是多种的，要使用多种途径搜索。个人总结出三种找到电子书的方法。</p><ul><li>搜索引擎搜索</li><li>书籍搜索网站</li><li>其他平台搜索</li></ul><h3 id="1-搜索引擎直接搜索"><a href="#1-搜索引擎直接搜索" class="headerlink" title="1. 搜索引擎直接搜索"></a>1. 搜索引擎直接搜索</h3><ul><li><p>百度搜索</p><p>最直接、最快速的一步肯定是先直接搜索一下书名，如果可行，直接搜索并下载是最好的，下面所有的方法都无需进行。但由于版权等原因的存在，往往这个途径的适用范围很低。还需要其他的方法途径辅助。</p><p><img src="https://images.xmq.plus/20200712110448.png" alt="搜索示例：书名＋PDF/WROD"></p></li><li><p>谷歌搜索</p><p>有条件的可以使用谷歌搜索，一般而言，百度搜索不到的书籍，谷歌搜到的的可能性相比百度大很多。不仅仅是针对于电子书的搜索，其他所有内容的搜索都推荐将谷歌作为第一搜索，或者两者配合使用，资源的获取面就会大很多。谷歌搜索用英文的话可能效果也会更好。当然，搜书搜原名就好。</p><p><img src="https://images.xmq.plus/20200712110317.png" alt="搜索示例：书名+pdf"></p></li><li><p>搜索内容输入技巧</p><p><strong>搜索精简化</strong><br>同一个搜索引擎，每个人搜索会有不同的结果。因为每个人面对同一个问题，输入搜索栏的内容不尽相同，自然搜索的结果也会有千变万化，那么怎样的搜索方式才是合理的？怎么搜索才能让搜索引擎给到我们理想的结果。我们需要优化自己的搜索语句。尽可能的将问题的关键表达出来。尽可能地切中要害。排除无关紧要的词以影响搜索结果。<br><strong>使用高级搜索语法</strong><br>使用搜索引擎搜索语法，告诉搜索引擎我们具体想要的，不想要的。<br>语法可参考文章：<a href="https://mp.weixin.qq.com/s?__biz=MzA5NjEwNjE0OQ==&mid=2247486778&idx=1&sn=49a18d3579c06ec6b61007c582db2ce4&scene=19&ascene=7&devicetype=android-29&version=27000f51&nettype=WIFI&abtest_cookie=AAACAA==&lang=zh_CN&exportkey=ATbPf39vf3NFsi46ACigJf4=&pass_ticket=YPIQlcNBdyk624rUBNw7wYXlkiWmpz+pOeuzlXxtdiTfuRPbaH+QCvGv7IfnJrf+&wx_header=1">你真的会搜索吗？</a></p></li></ul><h3 id="2-书籍搜索网站搜索"><a href="#2-书籍搜索网站搜索" class="headerlink" title="2. 书籍搜索网站搜索"></a>2. 书籍搜索网站搜索</h3><p>书籍搜索网站可以是很多种，我只简单地对一些我个人在找书过程中常用的，也是比较常见的网站进行介绍。<br>之后我也会有搜书网站推荐，都可以试试。或者需要更多的搜书网站和不同类型的搜书网站，可自行百度和知乎搜索。</p><ul><li><p>鸠摩搜书</p><p>鸠摩搜书是很不错的搜书网站。找过一些同类网站，个人经验上来说，这个网站搜书的结果是同类网站中比较满意的。这个网站搜书一般都能搜索到，能够告诉你这本书在哪些地方有，甚至可以直接下载。</p></li><li><p>全国图书馆参考咨询联盟</p><p>淘宝上电子书代找绝大多数都是从这上面来的。你就知道这个网站的强大了。你想要的书籍基本上在这个网上输入书名，都可以找到。而且这个网站有一个文献传递的功能。自己注册一个账号（注册账号很简单）使用文献传递服务就可以获取你需要的图书资源。</p><p><img src="https://images.xmq.plus/20200712110815.png" alt="文献传递服务"></p></li></ul><p><strong>优点：</strong></p><ol><li>查到书的可能性能大。</li><li>电子书质量比较统一，清晰度较为满意，看起来比较舒服。</li></ol><p><strong>缺点：</strong></p><ol><li>每次申请只能申请50页。</li><li>不能无限制的申请文献传递。一般情况下是无法得到完整版的书籍。</li><li>通过邮箱的方式发送，发送的时间也不太确定，快的十来分钟，慢的说不定，好几天。官方说是不超过20天。</li><li>是属于扫描版本，无法直接复制书中文字。</li></ol><blockquote><p>如果需要快速拿到完整的书，可以使用浏览器中的油猴插件-红太狼的平底锅。安装好插件使用即可。但是需要付费。价格也不贵，一般定在三元一本，好就好在速度比较快，资源完整（毕竟动用了金钱）。当然也可以选择淘宝代下。好像淘宝代下也是用插件下来的。</p></blockquote><ul><li><p>网盘搜索引擎搜书</p><p>互联网上很多云服务，比如，百度网盘、天翼云、腾讯云、115网盘，每一个云服务提供商存储着许许多多的资源，由于政策原因，网盘一般都不提供搜索引擎服务。但是网上有很多第三方网盘搜索引擎网站，提供网盘搜索服务，可以利用这些网站进行尝试着找一下自己想要的电子书。<br>之后我也会列出一些第三方网盘搜索网站推荐。（也可自行找到自己想要的第三方网盘搜索网站）。<br>但是这些第三方网盘搜索服务用起来非常的费劲。准确度很低。</p></li><li><p>更多······</p><p>上述是比较好用、通用的两个搜书网站。搜书网站很多很多。我在这就不一一列举。按照自己找书的类型（专业书或者小说），找不同的搜书网站。</p></li></ul><h3 id="3-其他平台搜索"><a href="#3-其他平台搜索" class="headerlink" title="3. 其他平台搜索"></a>3. 其他平台搜索</h3><p>一般很少有情况遇到上面两种方法无法搜索到你想要的书。可能你搜索的那本书写书的人还没开始写，你就打算下下来了。但是也有这种可能性。即使找到了书籍也可以好好了解这一步，了解一下如何使用更多方法和途径搜索自己想要的电子书。不仅仅在电子书资源搜索之上，其他搜索也可以使用同样的方法和思路。<br>这里说一句：只要你能想到的平台，只要有搜索功能，你就可以去尝试。</p><ul><li><p>微信搜索框搜索</p><p>微信搜索框搜索的好处就在于，微信平台有很多公众号每天都在分享着资源。可以借助微信搜索框搜到其他地方搜索不到的包括书籍在内的资源。</p></li><li><p>Github平台搜索</p><p>Github：全球最大的同性交友网站。看似是很多程序员的聚集地。其实里面也是一个庞大的资源站，由于GitHub不允许百度爬虫，百度搜索无法搜索到github网站中的内容，需要我们进入GIthub搜索。里面也有很多仓库专门搜集电子书。可以直接利用搜索框搜索。<br>与此同时，Github有很多排行项目榜单，我们也可以推荐榜单去找到相关资源的项目找到自己想要的电子书。<br>文章之后介绍一些不错的Github中文导航项目榜单，按自行查找所需的项目。</p></li><li><p>其他专业资源平台搜索</p><p>根据自己不同的书籍，找到合适的专业网站，也可以很迅速的找到自己的书籍。<br>比如，本人需要找土木工程相关的书籍或者规范，可以去土木建筑相关的网站搜书规范和书籍。按照自己的需求找合适的网站，灵活的运用，往往是行之有效的好方法。</p></li><li><p>相关专业群组等</p><p>这个看个人有没有类似群组的资源平台或者获取途径。有些群中的文件都是比较稀少的资源，不容易获取的资源。所以通过相关的群组也可以找到。这种情况其实很少用到，我相信一本书再难找，用到这种方法的确是比较难找的书了。只是提出一种思路和方法。</p></li><li><p>微博</p><p>很多这种社交平台可以去尝试一下，想微博、抖音这类型的软件，一般都会很多有资源分享博主。借助关键词搜索即可。</p></li></ul><h2 id="电子书资源下载方法"><a href="#电子书资源下载方法" class="headerlink" title="电子书资源下载方法"></a>电子书资源下载方法</h2><p>此方法仅适用于：通过上述所有电子书资源搜索方法都没有下载到自己的电子书。</p><h3 id="1-工具下载"><a href="#1-工具下载" class="headerlink" title="1. 工具下载"></a>1. 工具下载</h3><p>该方法一般只适用于常见的文档类网站下载。</p><ul><li><p>冰点文库下载工具</p><p>冰点文库下载工具，能下豆丁、原创力book118、百度文库等多张文档网站资源。<br>下载原理：pdf扫描形式，文档无法直接复制文字，属于图片格式。效果可能不会很清晰。但是可用范围大，成功率高</p></li><li><p>豆丁当当</p><p>豆丁当当，pdf格式，扫描形式，相比冰点文库成功率低一些。</p></li><li><p>百度文档下载</p><p>优点，可下原格式。<br>缺点，显而易见，只能下百度文库。</p></li><li><p>小叶文库下载器</p><p>小叶文库下载器。效果自测。应该不错</p></li><li><p>更多方法….</p><p>对于可以看到全文的，可打印出来，截图出来。可能比较麻烦但是有些网站的有专门的脚本。自行百度。<br>只能看到可以下载，无法下载的，基本只能找淘宝。找咸鱼。或者再回去找找其他网站。</p></li></ul><h3 id="2-书籍下载网站下载"><a href="#2-书籍下载网站下载" class="headerlink" title="2. 书籍下载网站下载"></a>2. 书籍下载网站下载</h3><p>如果自己找到的书籍结果比较多，只是无法下载。可以使用多个结果链接下载，质量可能不同，价格不同，甚至一个地方需要花几块钱，另外一个网址使用工具解析的免费，质量还好。<br>像百度文库、豆丁、原创力book118这类的文档资源网站，往往不同网站之间的资源很多都是相同的，我们可以使用不同的链接下载。可能原创力的文档原本只能找淘宝代下，说不定换一下百度文库的就只需要自己解析然后免费下载就好了。</p><ul><li><p>文档类解析网站下载</p><p>该方法一般只适用于常见的文档类网站下载，比如百度文库，豆丁文档，原创力等文档类网站的解析下载。方法很简单，进入相应的网站解析下载即可。一般需要一点费用，但都不贵，一般在几元之内，还能多次下载。<br>只介绍自用的两个文档解析类网站：<br>南瓜文档：各种网页文档，学术论文下载解析网站。<br>嗨文库：百度文库解析网站，豆丁。<br>很多这种网站，如需更多，自行百度或知乎。</p></li><li><p>综合性网站下载</p><p>阅读链：<a href="https://cloud.yuedu.pro/#/">https://cloud.yuedu.pro/#/</a><br>刚发现的，东西挺不错的，涉及的书目种类有30多个标签。</p></li><li><p>专业类网站</p><p>有很多行业性的资源网站，这种网站一般资源的特征明显，质量较高。<br>可以依次类推，找到自己合适的专业网站，找到自己合适的资源进行下载。<br>标准分享网（学兔兔网）：<a href="http://www.bzfxw.com/">http://www.bzfxw.com/</a><br>卡兔建筑：<a href="https://www.cultoo.net/construction-code">https://www.cultoo.net/construction-code</a></p></li><li><p>小说类</p><p>自行百度知乎，很多推荐。</p></li><li><p>更多…</p></li></ul><h3 id="3-淘宝代找"><a href="#3-淘宝代找" class="headerlink" title="3. 淘宝代找"></a>3. 淘宝代找</h3><p>如果对自己找到的资源不满意，可以直接上淘宝。<br>先通过百度搜索，要是能搜索到你想要的书的网站，但是却无法下载下来的（需要会员、需要登录、付费等），可以复制链接找淘宝代下，比如原创力boo188k代下，百度文库代下，豆丁代下等等。<br>要是不能直接搜索到有效的相关资源网站。可直接淘宝pdf代找。一般均价三元一本。</p><ul><li><p>XXX网代下</p><p>相比电子书代找肯定便宜</p></li><li><p>电子书代找</p><p>缺点：价格稍微贵点。质量不一定。<br>优点：有钱就能摆平。</p></li><li><p>xxx文库代下</p><p>优点：费用少，快<br>缺点：需要自己找到想要的电子书链接。自己确定电子书质量。</p></li></ul><h3 id="4-网站合集"><a href="#4-网站合集" class="headerlink" title="4. 网站合集"></a>4. 网站合集</h3><p>推荐一些自认为好用实在的网站合集。</p><ul><li><p>书籍搜索网站</p><p>阅读链：<a href="https://cloud.yuedu.pro/#/">https://cloud.yuedu.pro/#/</a><br>鸠摩搜书：<a href="https://www.jiumodiary.com/">https://www.jiumodiary.com/</a><br>全国图书馆参考咨询联盟：<a href="http://www.ucdrs.superlib.net/">http://www.ucdrs.superlib.net/</a></p></li><li><p>文档类解析网站</p><p>皮皮虾学习网：<a href="http://www.wenkuwenku.com/">http://www.wenkuwenku.com/</a><br>南瓜文档：<a href="http://www.588230.com/">http://www.588230.com/</a></p></li><li><p>Github中文项目榜单推荐</p><p>HelloGitHub ：<a href="https://hellogithub.com/">https://hellogithub.com/</a><br>GitHub 中文项目排行榜：<a href="https://github.com/kon9chunkit/GitHub-Chinese-Top-Charts">https://github.com/kon9chunkit/GitHub-Chinese-Top-Charts</a></p></li><li><p>第三方网盘搜索网站</p><p>呆河马：<a href="http://www.daihema.com/">http://www.daihema.com/</a><br>资源搜索-网盘搜索：<a href="http://magnet.chongbuluo.com/">http://magnet.chongbuluo.com/</a><br>超能搜：<a href="https://www.chaonengsou.com/">https://www.chaonengsou.com/</a></p></li></ul><h2 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h2><p><img src="https://images.xmq.plus/20200712105923.png" alt="电子书获取方法总结"></p><p>方法途径是上图顺序依次进行。</p><p>找资源，只要你能想到的平台，只要有搜索功能，你就可以去尝试。</p>]]></content>
      
      
      <categories>
          
          <category> 方法技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源搜索 </tag>
            
            <tag> 电子书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown高效使用之Typora集成PicGo图床</title>
      <link href="posts/456e8c02.html"/>
      <url>posts/456e8c02.html</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown高效使用之Typora集成PicGo图床"><a href="#Markdown高效使用之Typora集成PicGo图床" class="headerlink" title="Markdown高效使用之Typora集成PicGo图床"></a>Markdown高效使用之Typora集成PicGo图床</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Markdown软件有多种，个人在Windows端使用两种软件，也认为是最好用的。</p><ul><li><p>Typora</p><p>简单，合并了写作和预览，所见即所得。</p></li></ul><ul><li><p>VS code</p><p>整个软件不仅仅是支持Markdown，功能强大，插件丰富，可实时分屏预览，相比Typora上手难度稍微大一点。</p></li></ul><p>虽然使用<code>markdown</code>标记语言写作提高了我们的效率，不再为繁琐的格式和排版感到烦恼。但是<code>markdown</code>标记语言是纯文本的格式，不支持放入媒体元素的，如图片视频等，只能用过引用路径的方式写入。因此，使用过<code>markdown</code>都知道图床，需要我们使用图床将我们的图片上传到网络上，得到图片的网址链接，再将链接粘贴到<code>markdown</code>中，整个过程切换较为繁琐。而好在Typora中恰好集成了PicGo图床服务。文章插入图片即可通过 PicGo 服务上传到图床内，而无需来回在上传图片和码字中来回切换。</p><h2 id="第一步安装"><a href="#第一步安装" class="headerlink" title="第一步安装"></a>第一步安装</h2><p>需要两个软件，一个是Typora，另外一个是PicGo。</p><ul><li><a href="https://typora.io/">Typora</a></li><li><a href="https://molunerfinn.com/PicGo/">PicGo</a></li></ul><p>如果无法在官网下载的，可以使用：</p><ul><li><a href="https://pan.baidu.com/s/1oQzWPTEk0SRzEVl6tKfUnQ">Typora</a>(提取码：900b)</li><li><a href="https://pan.baidu.com/s/1_ndXN61biSFPcAIrhc5NYw">PicGo</a>(提取码：elte)</li></ul><h2 id="第二部搭建图床"><a href="#第二部搭建图床" class="headerlink" title="第二部搭建图床"></a>第二部搭建图床</h2><p>关于PicGo图床的搭建有一点需要注意，就是码云仓库容量的限制，如下表：</p><p><img src="https://images.xmq.plus/Gitee%20%E4%BA%A7%E5%93%81%E9%85%8D%E9%A2%9D%E8%AF%B4%E6%98%8E.png" alt="Gitee 产品配额说明"></p><p>图片大小＜1M，Git单仓库容量上限是500M，可以创建1000个仓库，但用户总仓库容量不超过5G.</p><p>也就是说小于1M的图片单仓库你可以上传500M，通过扩展多个仓库的方法扩容图床，单账号你最多可以上传5G的图片。</p><p>有人会担心这个空间容量，担心需要频繁建仓</p><p>就按我个人而言，有自己的个人博客，图片需求量相较普通用户需求更大，单仓库将近两年时间总共上传630张图片，占用空间206M，不到一个仓库容量的一半，也就是一个单仓库，意味着搭建一次后我能用4年，单仓库容量满后，换仓后我又可以用四年，最多单个账号我可以建10个这样的仓全部填满，也就是5G的容量，我能用40年</p><p>兄弟，40年的免费图床够你用吗？</p><ul><li>新建图床仓库<br>打开码云官方网站，进入你的个人仓库界面，新建仓库，如何新建仓库的详细步骤我就不说了，相信搭建都会，直接上一张图，图中有文字说明：</li></ul><p><img src="https://images.xmq.plus/20200310213302.png" alt="img"></p><p>然后点击创建即可。</p><ul><li>设置私人令牌<br>看图中指示操作即可,设置 -&gt; 私人令牌 -&gt; 生成新令牌</li></ul><p><img src="https://images.xmq.plus/20200310214309.png" alt="img"></p><p>提交后，会提示你输入密码进行验证，验证成功后，会有提示框，提示框中的内容即为私人令牌。先复制保存，下面要用到。</p><p><img src="https://images.xmq.plus/20200310214730.png" alt="img"></p><p><img src="https://images.xmq.plus/20200310215138.png" alt="img"></p><ul><li>配置 Gitee 图床<br>首先就是需要软件 PicGo，然后进行安装。</li></ul><p>接着打开软件，点击软件界面中的插件设置，然后进行搜索：输入内容：picgo-plugin-gitee，你会发现，有两个插件，我选择的是第一种，第二种我后面会说到。然后选择图中所指向的插件。</p><p><img src="https://images.xmq.plus/20200310212058.png" alt="img"></p><p>安装完成后，重启 PicGo 应用，图床设置选项就会出现一个 Gitee 图床，然后进行点击，进入下面的页面：</p><p>属性选项说明：</p><p>url：这里填写码云官方的网址</p><p>owner：填写你的用户名</p><p>repo：填写你的图床仓库名称</p><p>path：图片存储路径</p><p>token：填写上面教程中你设置的私人令牌</p><p>message：不需要填</p><ul><li><p>上传测试</p><p>经测试，就上传速度而言，Gitee 图床与 Github 图床相比，Gitee 图床略胜一筹。毕竟是国内的，速度相比于 GitHub 好一点。</p></li></ul><p>下面这个链接是我写这篇文章上传测试的，试试看，打开速度咋样</p><p><a href="https://gitee.com//yafine66/blogimage/raw/master/img/010.jpg">https://gitee.com//yafine66/blogimage/raw/master/img/010.jpg</a></p><h2 id="第三步PicGo设置"><a href="#第三步PicGo设置" class="headerlink" title="第三步PicGo设置"></a>第三步PicGo设置</h2><p>打开 PicGo 软件-&gt;PicGo 设置 -&gt; 设置 Server-&gt;开启 Server，监听地址不用进行更改，监听端口的值设置为 36677，这个值的获取在 Typora 软件中，下面会提到：</p><p><img src="https://images.xmq.plus/Snipaste_2020-07-12_10-01-11.png" alt="设置Server"></p><h2 id="第四步-Typora设置"><a href="#第四步-Typora设置" class="headerlink" title="第四步 Typora设置"></a>第四步 Typora设置</h2><p>打开 typora 软件 -&gt; 文件 -&gt; 偏好设置 -&gt; 图像，具体配置参考下面的图中的配置：</p><p><img src="https://images.xmq.plus/20200712101936.png" alt="Typora设置"></p><h2 id="第五步验证上传选项"><a href="#第五步验证上传选项" class="headerlink" title="第五步验证上传选项"></a>第五步验证上传选项</h2><p>验证成功，可以直接在Typora中插入图片或者直接粘贴图片即可使用：</p><p><img src="https://images.xmq.plus/20200712102610.png" alt="验证上传"></p><p>以后只需写作时打开PicGo软件，或者设置自启动就可以只使用Typora直接写作了。无需再重复切换软件窗口，以方便、高校地写作。</p><h2 id="错误排除"><a href="#错误排除" class="headerlink" title="错误排除"></a>错误排除</h2><h3 id="错误1：-“success”-false"><a href="#错误1：-“success”-false" class="headerlink" title="错误1：{“success”,false}"></a>错误1：{“success”,false}</h3><p><img src="https://images.xmq.plus/20201010092225.jpeg"></p><p>这个错误相信也有很多小伙伴遇到了，原因是<strong>文件名冲突</strong>了，如果你上传过一张image1.jpg的图片，再上传名称一样的图片就会失败，康康log文件(感谢日志！)里也写到了。</p><p><img src="https://images.xmq.plus/20201010092225.jpeg"></p><p>办法也很简单，打开picgo设置，将【<strong>时间戳重命名】打开</strong>。如图所示：</p><p><img src="https://images.xmq.plus/20201010092401.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机安装Linux系统记录</title>
      <link href="posts/49e46b45.html"/>
      <url>posts/49e46b45.html</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟机安装系统学习记录"><a href="#虚拟机安装系统学习记录" class="headerlink" title="虚拟机安装系统学习记录"></a>虚拟机安装系统学习记录</h1><p><strong>安装前准备：</strong></p><ul><li><a href="https://pan.baidu.com/s/1RKLHnYrLgMpHpvQFelfung">VMware</a>  (提取码：1234)</li></ul><blockquote><p>软件来源：公众号（软件管家）</p></blockquote><ul><li><a href="magnet:?xt=urn:btih:9DB46A612D04763AA7DB02A0FF63EDE2EA555867&dn=CentOS-8.1.1911-x86_64-dvd1.iso">CentOS-8.1系统磁力链接</a></li></ul><blockquote><p>系统来源：<a href="https://next.itellyou.cn/">MSDN,I tell you</a></p><p>如需安装其他版本或其他系统，可进入网站自行选择系统</p></blockquote><p><img src="https://images.xmq.plus/20200811224617.png" alt="CentOS系统镜像下载"></p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><ul><li>安装过程中关闭更新</li><li>输入许可证密钥：<code>UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA</code></li></ul><p><img src="https://images.xmq.plus/20200811223524.png" alt="产品密钥"></p><h2 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h2><ol><li><p>点击创建新的虚拟机</p></li><li><p>选择自定义，点击下一步</p></li><li><p>硬件兼容性，选择最新版本，点击下一步</p></li><li><p>点击浏览，选择提前下载好的镜像系统，点击下一步</p><p><img src="https://images.xmq.plus/20200811232624.png" alt="选择镜像"></p></li><li><p>设置用户名和密码，点击下一步</p></li><li><p>点击设置虚拟机存放的位置，这里建议选择存放在C盘以外的其他盘。</p></li><li><p>根据电脑配置，选择处理器数量，数量设置适中即可。</p></li><li><p>设置虚拟机的内存大小，也不能设置太高，要根据电脑配置选择，建议最少选择512M。我这里选择1024M。</p></li><li><p>设置网络类型，默认下一步即可。</p></li><li><p>I/O控制器类型选择，默认下一步</p></li><li><p>磁盘类型，默认下一步</p></li><li><p>创建虚拟机磁盘大小，根据自身需求、系统类型、电脑配置设置虚拟机磁盘大小，我用于学习Linux系统，需求不高，在这里设置40G。</p><p><img src="https://images.xmq.plus/20200811234117.png" alt="容量大小设置"></p></li><li><p>下一步安装虚拟机，等待系统自动安装。</p><p><img src="https://images.xmq.plus/20200811234307.png" alt="配置汇总"></p></li></ol><p>14.点击编辑虚拟机</p><p><img src="https://images.xmq.plus/20200812070414.png" alt="编辑"></p><p><img src="https://images.xmq.plus/20200812070652.png" alt="确认镜像路径"></p><ol start="15"><li>开启虚拟机安装系统，选择<code>Install CentOS Linux 8</code>，<code>enter</code>进入</li></ol><p><img src="https://images.xmq.plus/20200812070758.png" alt="install centos"></p><ol start="16"><li>安装过程</li></ol><p><img src="https://images.xmq.plus/20200812070854.png" alt="安装过程"></p><ol start="17"><li>安装初始配置，选择简体中文</li></ol><p><img src="https://images.xmq.plus/20200812071047.png" alt="选择语言"></p><ol start="18"><li>设置分区</li></ol><p><img src="https://images.xmq.plus/20200812071216.png" alt="设置分区"></p><ol start="19"><li>选择自定义，点击完成</li></ol><p><img src="https://images.xmq.plus/20200812071535.png" alt="设置分区"></p><ol start="20"><li>添加磁盘分区</li></ol><p>Linux的分区，并不像Windows一样，分成C、D、E等盘，介绍几个重要的分区：</p><ul><li>交换分区（swap）：交换分区和Windows的虚拟内存很像。现在内存也便宜，物理服务器的配置也高，以前的说法是一般为物理内存的2倍，现在一般情况下划分为4~8GB备用即可。我们虚拟机的内存是4GB，我们就划8GB吧。</li><li>启动分区（boot）：200MB足够了。</li><li>根分区（/）：剩余空间都给根分区吧。当然我们也可以单独划出/data分区，专门用来存储存数据，不过这里我们先不这样做，直接全部都给根分区。</li></ul><p>按照下图顺序依次进行设置：</p><p><img src="https://images.xmq.plus/20200812071640.png" alt="image-20200812071639950"></p><p><img src="https://images.xmq.plus/20200812071804.png" alt="分区情况"></p><ol start="21"><li>点击完成后会弹出更改摘要页面，点击接受更改：</li></ol><p><img src="https://images.xmq.plus/20200812071904.png" alt="更改摘要页面"></p><ol start="22"><li>设置根密码：</li></ol><p><img src="https://images.xmq.plus/20200812072013.png" alt="根密码设置"></p><ol start="22"><li>安装完成</li></ol><p><img src="https://images.xmq.plus/20200812074504.png" alt="欢迎界面"></p><p><img src="https://images.xmq.plus/20200812074613.png" alt="image-20200812074613582"></p><ol start="23"><li>安装完成之后，关闭虚拟机，点击编辑虚拟机，移除<code>CD/DVD</code></li></ol><p><img src="https://images.xmq.plus/20200812074926.png" alt="image-20200812074926218"></p><ul><li><p>参考文章：</p><p><a href="https://zhuanlan.zhihu.com/p/112122692">VMware 安装 CentOS 8.1(centos 8 系列安装过程类似) 完整教程</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 基础知识总结</title>
      <link href="posts/f6ecac8e.html"/>
      <url>posts/f6ecac8e.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML-基础知识总结"><a href="#HTML-基础知识总结" class="headerlink" title="HTML 基础知识总结"></a>HTML 基础知识总结</h1><p>在搭建Hexo个人博客过程中，尤其是自定义Hexo主题时，不可避免的会接触到Html语法。对于修改Hexo主题来说，所需要的Html其实不需要很多。因为绝大多数都是写好了的，只需要我们看懂，然后依葫芦画瓢，好好修改一下就好了。所以只需要有个基础知识，认识一些常用标签，稍微入个门就足够我们使用了。</p><h2 id="一、HTML-的简述"><a href="#一、HTML-的简述" class="headerlink" title="一、HTML 的简述"></a>一、HTML 的简述</h2><p>&emsp;&emsp;HTML, 超文本标记语言，英文全称是Hyper Text Markup Language，由 Tim Berners-Lee 在 1982 年提出，它是互联网上应用最广泛的标记语言。</p><h3 id="1-HTML4-01-和-XHTML"><a href="#1-HTML4-01-和-XHTML" class="headerlink" title="1. HTML4.01 和 XHTML"></a>1. HTML4.01 和 XHTML</h3><p>&emsp;&emsp;XHTML的全称是 (eXtensible Hyper Text Markup Language，扩展的超文本标记语言)，XHTML和HTML4.01（先前的HTML） 具有很好的兼容性，而且XHTML是更严格、更纯净的HTML代码。W3C组织制定XHTML，目标是逐步取代原有的HTML。简单地说，XHTML就是最新版本的HTML规范。</p><p>&emsp;&emsp;XHTML要求HTML文档首先必须是一份<code>XML</code>文档。<code>XML</code>文档是一种结构化文档，它有如下4条基本规则：</p><ul><li>整个文档有且有一个根元素。</li><li>每个元素都由开始标签和结束标签组成，例如<code>&lt;a&gt;&lt;/a&gt;</code>，就是一对标签。除非使用空元素语法，例如 <code>&lt;br/&gt;</code> 就是空元素语法。</li><li>元素与元素之间应该合理嵌套。例如<code>&lt;div&gt;&lt;span&gt;内容&lt;/span&gt;&lt;/div&gt;</code>，这可以明确的看出<code>&lt;/span&gt;</code>元素是<code>&lt;/div&gt;</code>的子元素，这就是合理嵌套。但<code>&lt;div&gt;&lt;span&gt;内容&lt;/div&gt;&lt;/span&gt;</code>这种写法就比较混乱，也就是所谓的不合理嵌套。</li><li>元素的属性必须有属性值，而且属性值应该用引号（单引号和双引号都可以）引起来。</li></ul><h3 id="2-HTML5-的诞生"><a href="#2-HTML5-的诞生" class="headerlink" title="2. HTML5 的诞生"></a>2. HTML5 的诞生</h3><p>&emsp;&emsp;HTML5 是指万维网的核心语言、标准通用标记语言下的一个应用超文本标记语言的第五次重大修改。HTML5 的设计目的是为了在移动设备上支持多媒体。新的语法特征被引进以支持这一点，如<code>video</code>、<code>audio</code>和<code>canvas</code>标记。还引进了新的功能，可以真正改变用户与文档的交互方式。</p><p>&emsp;&emsp;HTML5 的第一份正式草案已于 2008 年 1 月 22 日公布。HTML5 仍处于完善之中。2013 年 5 月 6 日，HTML5.1 正式草案公布。该规范定义了第五次重大版本，第一次要修订万维网的核心语言：超文本标记语言。在这个版本中，新功能不断推出，以帮助 Web 应用程序的作者，努力提高新元素互操作性。直到 2014 年 10 月 29 日，经过几乎 8 年的艰辛努力，HTML5 标准规范终于制定完成了，并已公开发布。HTML5 还在继续修改完善，增加新的功能。</p><h2 id="二、常用的标签"><a href="#二、常用的标签" class="headerlink" title="二、常用的标签"></a>二、常用的标签</h2><h3 id="1-基本标签"><a href="#1-基本标签" class="headerlink" title="1.  基本标签"></a>1.  基本标签</h3><p>一个网页的大致构成是：</p><pre><code class="line-numbers language-html">&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;UTF-8&quot;&gt;&lt;!--编码格式--&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;&lt;!-- 优先使用最新的ie版本 --&gt;  &lt;title&gt;文档标题&lt;/title&gt;  &lt;link rel=&quot;stylesheet&quot; href=&quot;资源所在路径&quot; type=&quot;规定被链接文档的MIME类型&quot; media=&quot;&quot; target=&quot;&quot; charset=&quot;定义编码方式&quot;&gt;&lt;/head&gt;&lt;body&gt;  &lt;!--主体内容 显示在网页上的，由许多的标签组成--&gt;  &lt;p&gt;&lt;/p&gt;  &lt;h1&gt;&lt;/h1&gt;     ...   &lt;script src=&quot;引用文件地址&quot;&gt;&lt;/script&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        &lt;!--自己写的JavaScript代码，可在当前页面写，也可以另外写一个js文件，然后在引入 --&gt;    &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><ul><li><code>&lt;!DOCTYPE HTML&gt;</code>定义文档类型为<code>HTML</code>，自从HTML5问世之后，就开始使用。这个在编写代码时必须要写上，这个是用来声明文档类型的，文档类型类似于连接，规定了HTML 页面必须遵从的良好规则，能自动检测错误和其他有用的东西</li><li><code>&lt;head&gt;&lt;/head&gt;</code>定义文档的一些相关信息</li><li><code>&lt;title&gt;&lt;/title&gt;</code>定义文档的标题</li><li><code>&lt;meta&gt;</code>定义关于<code>HTML</code>文档的元信息，关键词，作者等。不会显示在网页上。它的属性有<code>charset</code>，<code>name</code>，<code>http-equiv</code>，<code>content</code>属性等，后期再对这个标签进行详细的解释。</li><li><code>&lt;link&gt;</code>用于链接样式表。关于什么是<code>MIME</code>类型，可以参考<code>MIME</code>类型参考手册，有具体的讲解。</li><li><code>&lt;!-- --&gt;</code>定义注释，便于开发者阅读浏览。</li><li><code>&lt;h1&gt;~&lt;h6&gt;</code>定义标题，字体的大小<code>&lt;h1&gt;</code>最大，<code>&lt;h6&gt;</code>最小。</li><li><code>&lt;p&gt;&lt;/p&gt;</code>段落标签，是一个块级标签。</li><li><code>&lt;span&gt;&lt;/span&gt;</code>和<code>&lt;div&gt;&lt;/div&gt;</code>定义文档的节。</li><li><code>&lt;iframe&gt;&lt;/iframe&gt;</code>定义文档的内联框架。</li></ul><h3 id="2-表格标签"><a href="#2-表格标签" class="headerlink" title="2.  表格标签"></a>2.  表格标签</h3><ul><li><code>&lt;table&gt;&lt;/table&gt;</code> 定义表格</li><li><code>&lt;th&gt;&lt;/th&gt;</code>定义表格的表头</li><li><code>&lt;tr&gt;&lt;/tr&gt;</code>定义表格的行</li><li><code>&lt;td&gt;&lt;/td&gt;</code>定义表格的单元</li><li><code>&lt;caption&gt;&lt;/caption&gt;</code>定义表格标题</li><li><code>&lt;thead&gt;&lt;thead&gt;</code>定义表格中的表头内容</li><li><code>&lt;tbody&gt;&lt;/tbody&gt;</code>定义表格中的主体内容</li><li><code>&lt;tfoot&gt;&lt;/tfood&gt;</code>定义表格中的表注内容（脚注）</li></ul><h3 id="3-列表标签"><a href="#3-列表标签" class="headerlink" title="3. 列表标签"></a>3. 列表标签</h3><ul><li><code>&lt;ul&gt;&lt;/ul&gt;</code>定义无序列表</li><li><code>&lt;ol&gt;&lt;/ol&gt;</code>定义有序列表</li><li><code>&lt;li&gt;&lt;/li&gt;</code>定义列表项</li><li><code>&lt;dl&gt;&lt;/dl&gt;</code>定义列表</li><li><code>&lt;dt&gt;&lt;/dt&gt;</code>自定义列表项目</li><li><code>&lt;dd&gt;&lt;/dd&gt;</code>定义自定义列表的描述</li></ul><h3 id="4-表单标签"><a href="#4-表单标签" class="headerlink" title="4. 表单标签"></a>4. 表单标签</h3><ul><li><code>&lt;form&gt;&lt;/form&gt;</code>定义供用户输入的表单</li><li><code>&lt;input&gt;</code>定义输入控件，如密码框，输入框，按钮等</li><li><code>&lt;textarea&gt;&lt;/textarea&gt;</code> 定义文本域 （一个多行的输入控件）</li><li><code>&lt;label&gt;&lt;/label&gt;</code> 定义了 <code>&lt;input&gt;</code> 元素的标签，一般为输入标题</li><li><code>&lt;filedset&gt;&lt;/filedset&gt;</code> 定义了一组相关的表单元素，并使用外框包含起来</li><li><code>&lt;legend&gt;&lt;/legend&gt; </code>定义了<code>&lt;fieldset&gt;</code>元素的标题</li><li><code>&lt;select&gt;&lt;/select&gt;</code> 定义了下拉选项列表</li><li><code>&lt;optgroup&gt;&lt;/optgroup&gt;</code> 定义了下拉选项组</li><li><code>&lt;option&gt;&lt;/option&gt;</code> 定义下拉列表中的选项</li><li><code>&lt;button&gt;&lt;/button&gt;</code> 定义一个点击按钮</li></ul><h3 id="5-多媒体链接"><a href="#5-多媒体链接" class="headerlink" title="5. 多媒体链接"></a>5. 多媒体链接</h3><ul><li><code>&lt;a&gt;&lt;/a&gt;</code>定义一个超链接</li><li><code>&lt;img&gt;</code>定义图像</li><li><code>&lt;embed&gt;&lt;/embed&gt;</code> 定义在页面中嵌入的内容，可插入音频视频等。</li></ul><h3 id="6-格式标签"><a href="#6-格式标签" class="headerlink" title="6. 格式标签"></a>6. 格式标签</h3><ul><li><code>&lt;b&gt;&lt;b/&gt;</code> 定义粗体文本</li><li><code>&lt;del&gt;&lt;/del&gt;</code>定义被删除文本</li><li><code>&lt;em&gt;&lt;/em&gt;</code> 定义强调文本</li><li><code>&lt;i&gt;&lt;/i&gt;</code> 定义斜体文本</li><li><code>&lt;sup&gt;&lt;/sup&gt;</code> 定义上标文本</li><li><code>&lt;sub&gt;&lt;/sub&gt;</code> 定义下标文本</li><li><code>&lt;hr&gt;</code> 定义水平线</li><li><code>&lt;br&gt;</code> 定义简单的换行</li></ul><p>&emsp;&emsp;常用的标签基本上就是这些了，有些标签在现在的网页开发中很少用或者是被弃用淘汰了，在新的 HTML5 中新增了很多的标签和属性。同时，如果对HTML想更加深入的了解或学习，可去<a href="https://www.runoob.com/html/html5-intro.html">菜鸟教程</a>系统学习。</p><p>更多标签搜索：<a href="https://www.runoob.com/tags/ref-byfunc.html">HTML标签列表（功能排序）</a>。</p><p>&emsp;&emsp;与此同时，此文章不关是仅仅列出一些常用标签，可以在以后需要使用时访问本站，使用<code>ctrl+F</code>搜索标签，即可快速明白标签大致用途，方便修改以及自定义博客。</p><p><strong>参考文章</strong></p><ul><li><a href="https://yafine-blog.cn/posts/7aedb564.html">Yafine</a></li><li><a href="https://www.runoob.com/html/html5-intro.html">菜鸟教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VI/VIM 编辑器安装及使用</title>
      <link href="posts/46de4a9a.html"/>
      <url>posts/46de4a9a.html</url>
      
        <content type="html"><![CDATA[<h1 id="VI-VIM-编辑器安装及使用"><a href="#VI-VIM-编辑器安装及使用" class="headerlink" title="VI/VIM 编辑器安装及使用"></a>VI/VIM 编辑器安装及使用</h1><h2 id="VI和VIM是什么"><a href="#VI和VIM是什么" class="headerlink" title="VI和VIM是什么"></a>VI和VIM是什么</h2><ul><li>VI 是 Unix 操作系统和类 Unix 操作系统中最通用的文本编辑器。</li><li>VIM 编辑器是从 VI 发展出来的一个性能更强大的文本编辑器。可以主动的以字体颜色辨别语法的正确性，方便程序设计。VIM 与 VI 编辑器完全兼容。</li></ul><h2 id="VIM编辑器在Windows中安装"><a href="#VIM编辑器在Windows中安装" class="headerlink" title="VIM编辑器在Windows中安装"></a>VIM编辑器在Windows中安装</h2><ol><li><p>下载</p><ul><li>有条件的可以去官网链接:<a href="https://www.vim.org/">Vim官网</a><br>点击左侧的”Downloade”,之后选择右边的Windows版本。</li><li>或者使用我下好的，点击这个链接直接下载:<a href="https://pan.baidu.com/s/1rRn5acNzyPYMVUvVmvPkcg">GVIM</a> (提取码：kgu8)。</li></ul></li><li><p>安装</p><ul><li>傻瓜式安装，直接点下一步（next）即可。</li></ul></li><li><p>配置</p></li></ol><p>&emsp;安装完成之后你会发现你的桌面上出现了若干个它的图标，但是还没有完，我们安装vim是为了提高效率，要在命令行内使用它的，可是，在cmd中执行<code>vim</code>命令后发现并不能出现vim的界面，这是因为还没有为vim设置环境变量。<br>我们右击“我的电脑”选择“属性”，点击左侧的“高级系统选项”，弹出系统变量的对话框，我们在下面的“path”变量里的最后一行加上vim的安装路径。</p><p><img src="https://images.xmq.plus/VIMinstall.png" alt="配置步骤"></p><p>&emsp;找到VIM安装软件路径，填入Vim所在的安装目录,点击确定即可：</p><p><img src="https://images.xmq.plus/viminstall2.png" alt="输入安装路径"></p><ol start="4"><li>测试</li></ol><p>&emsp;在添加完变量之后，<code>window</code>+<code>r</code>输入<code>cmd</code>后运行<code>vim</code>，你将会看到vim的DOS界面：</p><p><img src="https://images.xmq.plus/vimtest.png" alt="安装成功"></p><p>输入<code>:q</code>退出，安装成功！下次可以直接使用<code>vim</code>命令代替vi编辑器编写。</p><h2 id="Vi-Vim-的常用操作"><a href="#Vi-Vim-的常用操作" class="headerlink" title="Vi(Vim)的常用操作"></a>Vi(Vim)的常用操作</h2><ul><li>VI或者VIM有三个不同的模式，分别有不同的作用和功能：</li></ul><h2 id="一般模式"><a href="#一般模式" class="headerlink" title="一般模式"></a>一般模式</h2><ul><li>一般模式：翻页、复制、删除、缩进等操作。</li></ul><h3 id="一般模式命令表"><a href="#一般模式命令表" class="headerlink" title="一般模式命令表"></a>一般模式命令表</h3><p><img src="https://images.xmq.plus/general-mode.png" alt="一般模式"></p><h2 id="指令模式"><a href="#指令模式" class="headerlink" title="指令模式"></a>指令模式</h2><ul><li>指令模式：查找内容、保存、退出等功能。</li></ul><h3 id="指令模式命令表"><a href="#指令模式命令表" class="headerlink" title="指令模式命令表"></a>指令模式命令表</h3><p><img src="https://images.xmq.plus/code-mode.png" alt="指令模式"></p><h2 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h2><ul><li>编辑模式：主要对文本的写入、编辑。</li></ul><h3 id="编辑模式命令表"><a href="#编辑模式命令表" class="headerlink" title="编辑模式命令表"></a>编辑模式命令表</h3><p><img src="https://images.xmq.plus/editing-mode.png" alt="编辑模式"></p><h2 id="模式转换"><a href="#模式转换" class="headerlink" title="模式转换"></a>模式转换</h2><ul><li>三个模式能相互转换。</li></ul><h3 id="模式转换关系及常用操作汇总图"><a href="#模式转换关系及常用操作汇总图" class="headerlink" title="模式转换关系及常用操作汇总图"></a>模式转换关系及常用操作汇总图</h3><p><img src="https://images.xmq.plus/VIVIM.png" alt="汇总图"></p><p><img src="https://images.xmq.plus/20200712145919.gif" alt="VIM键位图"></p><p>掌握上面命令基本可以很好的使用VI或VIM编辑器啦！</p><ul><li>详情教程见：<a href="https://www.runoob.com/linux/linux-vim.html">菜鸟教程-Linux vi/vim</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-themes-matery主题目录总结</title>
      <link href="posts/4044a160.html"/>
      <url>posts/4044a160.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-themes-matery主题目录总结"><a href="#Hexo-themes-matery主题目录总结" class="headerlink" title="Hexo-themes-matery主题目录总结"></a>Hexo-themes-matery主题目录总结</h1><p><strong>博客的目录结构如下图：</strong></p><p><img src="https://images.xmq.plus/Hexo-theme-matery.png" alt="hexo-theme-matery主题目录结构"></p><blockquote><p>在定制个人博客过程中，颜色标记越红的文件（文件夹），代表需要修改或添加参数的频繁可能越高。<br>定制完成后的后期发布文章，一般只需关注<code>/source/_post/</code>中的内容。</p></blockquote><h1 id="目录说明"><a href="#目录说明" class="headerlink" title="目录说明"></a>目录说明</h1><h2 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a><a name='_config.yml'></a>_config.yml</h2><p>全局配置文件,配置主要基本参数。如网站标题、部署信息、主题选择、默认文件夹、插件设置等。</p><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a><a name='package.json'></a>package.json</h2><p>应用程序、插件的版本信息,一般不用。</p><h2 id="node-modules"><a href="#node-modules" class="headerlink" title="node_modules"></a><a name='node_modules'></a>node_modules</h2><p>hexo基于<code>node.js</code>，所以会有这个文件夹，<code>node.js</code>里面放着各种库,对于定制我们的博客，一般用不着。</p><h2 id="public"><a href="#public" class="headerlink" title="public"></a><a name='public'></a>public</h2><p>生成的网页文件目录。<br>使用<code>hexo clean &amp;&amp; hexo generate </code>命令会重新删除并重新生成文件夹。<br>使用<code>hexo deploy</code>部署到github或者gitee上的代码也就是这个文件夹中的文件。</p><h2 id="source"><a href="#source" class="headerlink" title="source"></a><a name='source'></a>source</h2><p>资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。<code>Markdown </code>和<code>HTML</code>文件会被解析并放到 <code>public </code>文件夹，而其他文件会被直接拷贝过去。</p><h3 id="data"><a href="#data" class="headerlink" title="_data"></a><a name='_data'></a>_data</h3><ul><li><p>friends.json</p><p>定义友情链接卡片文件，通过修动此文件中对应信息，可对友情链接中的文本信息进行修改。</p></li></ul><h3 id="post"><a href="#post" class="headerlink" title="_post"></a><a name='_post'></a>_post</h3><p>博客文章存放的位置，所有发表的博客文章在此文件夹中。</p><h3 id="CNAME"><a href="#CNAME" class="headerlink" title="CNAME"></a><a name='cname'></a>CNAME</h3><p>域名解析的地址，用于绑定域名。</p><h3 id="404-md"><a href="#404-md" class="headerlink" title="404.md"></a><a name='404.md'></a>404.md</h3><p>404错误页面</p><h3 id="categories"><a href="#categories" class="headerlink" title="categories"></a><a name='categories'></a>categories</h3><p>分类页</p><ul><li>index.md</li></ul><h3 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a><a name='contact'></a>Contact</h3><p>留言页</p><ul><li>index.md</li></ul><h3 id="friends"><a href="#friends" class="headerlink" title="friends"></a><a name='friends'></a>friends</h3><p>友情链接页</p><ul><li>index.md</li></ul><h3 id="tags"><a href="#tags" class="headerlink" title="tags"></a><a name='tags'></a>tags</h3><p>标签页</p><ul><li>index.md</li></ul><h3 id="about"><a href="#about" class="headerlink" title="about"></a><a name='about'></a>about</h3><p>关于页面</p><ul><li><p>index.md</p><p>在设定好卡片之后，可编辑文件加入内容。</p></li></ul><blockquote><p><code>source</code>文件夹中的文件是通过<code>hexo new page &quot;xxx&quot;</code>创建出来的。index.md是页面的基本配置。似乎没什么用。</p></blockquote><h2 id="themes"><a href="#themes" class="headerlink" title="themes"></a><a name='themes'></a>themes</h2><p>主题文件夹，存放Hexo主题的文件夹，更多主题访问：<a href="https://hexo.io/themes/">Themes</a></p><h3 id="hexo-theme-matery"><a href="#hexo-theme-matery" class="headerlink" title="hexo-theme-matery"></a><a name='hexo-theme-matery'></a>hexo-theme-matery</h3><ul><li><p>_config.yml</p><p>主题的配置文件，配置文件中含有大量注释说明，根据注释即可知道使用方法。<br>与该主题相关的大多数配置都在这个文件里面。比如，配置菜单导航的名称、路径和图标、banner设置、音乐视频模板基础设置、社交链接、代码块、动效、副标题打字效果、评论插件等。<br>相比于根目录下的<code>_config.yml</code>更加详细。</p></li></ul><ul><li><p>languages<br>语言相关，一般用不到</p></li><li><p>layout</p><p>主题结构布置、布局的模板库，自定义程度较高时，此文件夹的改动也会较为频繁。</p><ul><li><p>_partial</p><p>定义小组件的功能布局文件</p></li><li><p>_widget</p><p>定义小项目的功能布局文件</p></li><li><p>404.ejs</p><p>404页面</p></li><li><p>about.ejs</p><p>“关于”页面的模板文件。</p></li><li><p>archive.ejs</p><p>归档页面</p></li><li><p>categories.ejs</p><p>分类页面</p></li><li><p>contact.ejs</p><p>留言板页面</p></li><li><p>friends.ejs</p><p>友情链接页面</p></li><li><p>index,ejs</p><p>首页</p></li><li><p>post.ejs</p><p>博客阅读页面</p></li><li><p>tags.ejs</p><p>标签页面</p></li><li><p>layout.ejs</p><p>整体功能布局文件，所有页面都会存在的功能布局文件，相当于在各种主要页面之之中都存在的某些功能，都在这个文件中。比如说，在每个页面都有的鼠标的点击效果、滚动条效果等。</p></li></ul></li><li><p>source<br>媒体文件的存放文件夹，定义主题外观，图片更改等。自定义程度较高时，此文件夹的改动也会较为频繁。</p><ul><li><p>css</p><p>样式文件夹：主题的各个部分的颜色，各个部件放置的位置、透明度等设置都在这个当中，主要的是对matery.css的设置。</p><ul><li><p>matery.css</p><p>定义整个主题的各个组件的外观、位置等</p></li><li><p>gitment.css</p><p>gitment评论样式设置</p></li><li><p>my.css</p><p>表情外观位置设置。</p></li><li><p>my-gittalk.css</p><p>gittalk的外观设置</p></li></ul></li><li><p>favicon.png</p><p>网站图标</p></li><li><p>js</p><p>外观动效文件夹</p><ul><li><p>click_show_text.js</p><p>点击效果动效设置</p></li><li><p>matery.js</p><p>整个主题</p></li><li><p>search.js</p><p>搜索引擎</p></li></ul></li><li><p>libs</p><p>各种小部件功能实现文件</p></li><li><p>medias</p><p>图片文件集合，需要用到的本地图片都在这个文件夹中。</p><ul><li><p>avatar.png</p><p>头像</p></li><li><p>banner</p></li><li><p>comment_bg.png</p><p>评论区图片</p></li><li><p>cover.png</p></li><li><p>featureimages</p><p>特征图。发文章是用的图片一般在这里</p></li><li><p>icp.png</p><p>看图片就知道了<br>网页最下方图片</p></li><li><p>logo.png</p><p>logo图标</p></li><li><p>reward</p><p>支付宝微信二维码</p></li></ul></li></ul></li><li><p>LICENSE</p><p>许可证</p></li><li><p>README.md<br>主题说明，没用，移除</p></li><li><p>README_CN.md<br>主题说明，没用，移除</p></li></ul><h2 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a><a name='scaffolds'></a>scaffolds</h2><p>模板    文件夹：更新文章、草稿、页面或自定义内容的模板集合</p><h3 id="draft-md"><a href="#draft-md" class="headerlink" title="draft.md"></a><a name='draft.md'></a>draft.md</h3><p>草稿模板</p><h3 id="page-md"><a href="#page-md" class="headerlink" title="page.md"></a><a name='page.md'></a>page.md</h3><p>页面模板</p><h3 id="post-md"><a href="#post-md" class="headerlink" title="post.md"></a><a name='post.md'></a>post.md</h3><p>博客文章模板<br>可根据Front-matter选项自行设置模板格式。<br>使用hexo new post 创建将默认使用该模板</p><br><p><strong>参考来源</strong></p><ul><li><a href="https://hexo.io/zh-cn/docs/">Hexo文档</a></li></ul><p><strong>注：</strong></p><p>内容由个人经验总结，仅列出大概框架和解释，以便快速入门，更快的熟悉hexo目录结构和matery主题，其他主题区别不大，也可以以此作为参考。如有更多补充、有疑问或问题的之处，欢迎在评论区留言。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Hexo-themes-matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScripts记录</title>
      <link href="posts/9c02.html"/>
      <url>posts/9c02.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScripts记录"><a href="#JavaScripts记录" class="headerlink" title="JavaScripts记录"></a>JavaScripts记录</h1><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><ol><li><strong>如何运行JavaScript代码</strong></li></ol><ul><li>直接嵌入</li></ul><pre><code class="line-numbers language-html">&lt;html&gt;&lt;head&gt;  &lt;script&gt;    alert(&#39;Hello, world&#39;);  &lt;/script&gt;&lt;/head&gt;&lt;body&gt;  ...&lt;/body&gt;&lt;/html&gt;</code></pre><p>&emsp; 由<script>...</script>包含的代码就是JavaScript代码，它将直接被浏览器执行。</p><ul><li>引用<code>.js</code>文件</li></ul><pre><code class="line-numbers language-html">&lt;html&gt;&lt;head&gt;  &lt;script src=&quot;/static/js/abc.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;  ...&lt;/body&gt;&lt;/html&gt;</code></pre><p>&emsp; 把JavaScript代码放到一个单独的<code>.js</code>文件，然后在HTML中通过<code>&lt;script src=&quot;...&quot;&gt;&lt;/script&gt;</code>引入这个文件,<code>/static/js/abc.js</code>就会被浏览器执行。</p><ol start="2"><li><strong>如何编写JavaScript代码</strong></li></ol><p>可以用任何文本编辑器来编写JavaScript代码。推荐以下几种文本编辑器：</p><ul><li>Visual Studio Code</li></ul><p>微软出的Visual Studio Code，可以看做迷你版Visual Studio，免费！跨平台！内置JavaScript支持。</p><ul><li>Sublime Text</li></ul><p>Sublime Text是一个好用的文本编辑器，免费。</p><ul><li>Notepad++</li></ul><p>Notepad++也是免费的文本编辑器，但仅限Windows下使用。</p><blockquote><p>注意：不可以用Word或写字板来编写JavaScript或HTML，因为带格式的文本保存后不是纯文本文件，无法被浏览器正常读取。也尽量不要用记事本编写，它会自作聪明地在保存UTF-8格式文本时添加BOM头。</p></blockquote><ol start="3"><li><strong>如何调试JavaScript代码</strong></li></ol><ul><li>使用Google Chrome浏览器调试</li></ul><p>要查看一个变量的内容：</p><p>查看(View)-开发者(Developer)-开发者工具(Developer Tools) 在Console中输入console.log(内容);</p><p>回车后显示的值就是变量的内容。</p><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><ol><li><strong>语法</strong></li></ol><p>&emsp; JavaScript的语法和Java语言类似，每个语句以<code>;</code>结束，语句块用<code>&#123;...&#125;</code>。但是，JavaScript并不强制要求在每个语句的结尾加<code>;</code>，浏览器中负责执行JavaScript代码的引擎会自动在每个语句的结尾补上<code>;</code>。</p><p>&emsp; 花括号<code>&#123;...&#125;</code>内的语句具有缩进，通常是4个空格。缩进不是JavaScript语法要求必须的，但缩进有助于我们理解代码的层次，所以编写代码时要遵守缩进规则。很多文本编辑器具有“自动缩进”的功能，可以帮助整理代码。</p><blockquote><p><code>&#123;...&#125;</code>还可以嵌套，形成层级结构</p></blockquote><ol start="2"><li><strong>注释</strong></li></ol><p>&emsp; 以<code>//</code>开头直到行末的字符被视为行注释，注释是给开发人员看到，JavaScript引擎会自动忽略。</p><p>&emsp; 另一种块注释是用<code>/*...*/</code>把多行字符包裹起来，把一大“块”视为一个注释。</p><ol start="3"><li><strong>大小写</strong></li></ol><p>&emsp; JavaScript严格区分大小写。</p><h3 id="数据类型和变量"><a href="#数据类型和变量" class="headerlink" title="数据类型和变量"></a>数据类型和变量</h3><ol><li><strong>Number</strong></li></ol><p>JavaScript不区分整数和浮点数，统一用Number表示，以下都是合法的Number类型：</p><pre><code>123; // 整数1230.456; // 浮点数0.4561.2345e3; // 科学计数法表示1.2345x1000，等同于1234.5-99; // 负数NaN; // NaN表示Not a Number，当无法计算结果时用NaN表示Infinity; // Infinity表示无限大，当数值超过了JavaScript的Number所能表示的最大值时，就表示为Infinity</code></pre><p>Number可以直接做四则运算，规则和数学一致：</p><pre><code>1 + 2; // 3(1 + 2) * 5 / 2; // 7.52 / 0; // Infinity0 / 0; // NaN10 % 3; // 110.5 % 3; // 1.5</code></pre><p>注意%是求余运算。</p><ol start="2"><li><strong>字符串</strong></li></ol><p>字符串是以单引号<code>&#39;</code>或双引号<code>&quot;</code>括起来的任意文本，比如<code>&#39;abc&#39;</code>，<code>&quot;xyz&quot;</code>等等。</p><ol start="3"><li><strong>布尔值</strong></li></ol><p>布尔值和布尔代数的表示完全一致，一个布尔值只有<code>true</code>、<code>false</code>两种值。</p><pre><code>true; // 这是一个true值false; // 这是一个false值2 &gt; 1; // 这是一个true值2 &gt;= 3; // 这是一个false值</code></pre><p><code>&amp;&amp;</code>运算是与运算，只有所有都为<code>true</code>，<code>&amp;&amp;</code>运算结果才是<code>true</code>:</p><pre><code>true &amp;&amp; true; // 这个&amp;&amp;语句计算结果为truetrue &amp;&amp; false; // 这个&amp;&amp;语句计算结果为falsefalse &amp;&amp; true &amp;&amp; false; // 这个&amp;&amp;语句计算结果为false</code></pre><p><code>||</code>运算是或运算，只要其中有一个为<code>true</code>，<code>||</code>运算结果就是<code>true</code>：</p><pre><code>false || false; // 这个||语句计算结果为falsetrue || false; // 这个||语句计算结果为truefalse || true || false; // 这个||语句计算结果为true</code></pre><p><code>!</code>运算是非运算，它是一个单目运算符，把<code>true</code>变成<code>false</code>，<code>false</code>变成<code>true</code>：</p><pre><code>! true; // 结果为false! false; // 结果为true! (2 &gt; 5); // 结果为true</code></pre><p>布尔值经常用在条件判断中，比如：</p><pre><code>var age = 15;if (age &gt;= 18) &#123;    alert(&#39;adult&#39;);&#125; else &#123;    alert(&#39;teenager&#39;);&#125;</code></pre><ol start="4"><li><strong>比较运算符</strong></li></ol><p>JavaScript允许对任意数据类型做比较：</p><pre><code>false == 0; // truefalse === 0; // false</code></pre><p>要特别注意相等运算符<code>==</code>。JavaScript在设计时，有两种比较运算符：</p><ul><li><p>第一种是<code>==</code>比较，它会自动转换数据类型再比较，很多时候，会得到非常诡异的结果；</p></li><li><p>第二种是<code>===</code>比较，它不会自动转换数据类型，如果数据类型不一致，返回<code>false</code>，如果一致，再比较。</p></li></ul><p>由于JavaScript这个设计缺陷，不要使用<code>==</code>比较，始终坚持使用<code>===</code>比较。</p><p>另一个例外是<code>NaN</code>这个特殊的Number与所有其他值都不相等，包括它自己：</p><p><code>NaN === NaN; // false</code></p><p>唯一能判断<code>NaN</code>的方法是通过<code>isNaN()</code>函数：</p><p><code>isNaN(NaN); // true</code></p><p>最后要注意浮点数的相等比较：</p><p><code>1 / 3 === (1 - 2 / 3); // false</code></p><p>这不是JavaScript的设计缺陷。浮点数在运算过程中会产生误差，因为计算机无法精确表示无限循环小数。要比较两个浮点数是否相等，只能计算它们之差的绝对值，看是否小于某个阈值：</p><p><code>Math.abs(1 / 3 - (1 - 2 / 3)) &lt; 0.0000001; // true</code></p><ol start="5"><li><strong>null和undefined</strong></li></ol><p><code>null</code>表示一个“空”的值，它和0以及空字符串<code>&#39;&#39;</code>不同，<code>0</code>是一个数值，<code>&#39;&#39;</code>表示长度为0的字符串，而<code>null</code>表示“空”。</p><p>在JavaScript中，还有一个和null类似的undefined，它表示“未定义”。</p><blockquote><p>JavaScript的设计者希望用null表示一个空的值，而undefined表示值未定义。事实证明，区分两者的意义不大。大多数情况下，我们都应该用null。undefined仅仅在判断函数参数是否传递的情况下有用。</p></blockquote><ol start="6"><li><strong>数组</strong></li></ol><ul><li>数组用<code>[]</code>表示</li></ul><p>数组是一组按顺序排列的集合，集合的每个值称为元素。JavaScript的数组可以包括==任意数据==类型。例如：</p><pre><code>[1, 2, 3.14, &#39;Hello&#39;, null, true];</code></pre><p>上述数组包含6个元素。数组用<code>[]</code>表示，元素之间用<code>,</code>分隔。</p><ul><li>通过<code>Array()</code>函数实现</li></ul><p>另一种创建数组的方法是通过Array()函数实现：</p><p><code>new Array(1, 2, 3); // 创建了数组[1, 2, 3]</code></p><p>然而，出于代码的可读性考虑，强烈建议直接使用<code>[]</code>。</p><p>数组的元素可以通过索引来访问。请注意，索引的起始值为0：</p><pre><code>var arr = [1, 2, 3.14, &#39;Hello&#39;, null, true];arr[0]; // 返回索引为0的元素，即1arr[5]; // 返回索引为5的元素，即truearr[6]; // 索引超出了范围，返回undefined</code></pre><ol start="7"><li><strong>对象</strong></li></ol><p>JavaScript的对象是一组由键-值组成的无序集合，例如：</p><pre><code>var person = &#123;    name: &#39;Bob&#39;,    age: 20,    tags: [&#39;js&#39;, &#39;web&#39;, &#39;mobile&#39;],    city: &#39;Beijing&#39;,    hasCar: true,    zipcode: null&#125;;</code></pre><p>JavaScript==对象的键都是字符串类型，值可以是任意数据类型==。上述person对象一共定义了6个键值对，其中每个键又称为对象的属性，例如，person的name属性为’Bob’，zipcode属性为null。</p><p>要获取一个对象的属性，我们用对象变量.属性名的方式：</p><pre><code>person.name; // &#39;Bob&#39;person.zipcode; // null</code></pre><ol start="8"><li><strong>变量</strong></li></ol><p>变量在JavaScript中就是用一个变量名表示，变量名是大小写英文、数字、$和_的组合，且==不能用数字==开头。变量名也不能是JavaScript的关键字，如<code>if</code>、<code>while</code>等。申明一个变量用<code>var</code>语句，比如：</p><pre><code>var a; // 申明了变量a，此时a的值为undefinedvar $b = 1; // 申明了变量$b，同时给$b赋值，此时$b的值为1var s_007 = &#39;007&#39;; // s_007是一个字符串var Answer = true; // Answer是一个布尔值truevar t = null; // t的值是null</code></pre><p>在JavaScript中，使用等号<code>=</code>对变量进行赋值。可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量，但是要注意只能用<code>var</code>申明一次，例如：</p><pre><code>var a = 123; // a的值是整数123a = &#39;ABC&#39;; // a变为字符串</code></pre><p>这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。例如Java是静态语言，赋值语句如下：</p><pre><code>int a = 123; // a是整数类型变量，类型用int申明a = &quot;ABC&quot;; // 错误：不能把字符串赋给整型变量</code></pre><p>和静态语言相比，动态语言更灵活，就是这个原因。</p><blockquote><p>要显示变量的内容，可以用<code>console.log(x)</code>，打开Chrome的控制台就可以看到结果。使用<code>console.log()</code>代替<code>alert()</code>的好处是可以避免弹出烦人的对话框。</p></blockquote><ol start="9"><li><strong>strict模式</strong></li></ol><p>JavaScript在设计之初，为了方便初学者学习，并不强制要求用<code>var</code>申明变量。这个设计错误带来了严重的后果：如果一个变量没有通过<code>var</code>申明就被使用，那么该变量就自动被申明为全局变量：</p><pre><code>i = 10; // i现在是全局变量</code></pre><p>在同一个页面的不同的JavaScript文件中，如果都不用<code>var</code>申明，恰好都使用了变量<code>i</code>，将造成变量i互相影响，产生难以调试的错误结果。</p><p>使用<code>var</code>申明的变量则不是全局变量，它的范围被限制在该变量被申明的函数体内（函数的概念将稍后讲解），同名变量在不同的函数体内互不冲突。</p><p>为了修补JavaScript这一严重设计缺陷，ECMA在后续规范中推出了strict模式，在strict模式下运行的JavaScript代码，强制通过var申明变量，未使用var申明变量就使用的，将导致运行错误。</p><p>启用strict模式的方法是在JavaScript代码的第一行写上：</p><p><code>&#39;use strict&#39;;</code></p><p>这是一个字符串，不支持strict模式的浏览器会把它当做一个字符串语句执行，支持strict模式的浏览器将开启strict模式运行JavaScript。</p><h2 id="实用要点"><a href="#实用要点" class="headerlink" title="实用要点"></a>实用要点</h2><h3 id="1-平滑回到顶部按钮"><a href="#1-平滑回到顶部按钮" class="headerlink" title="1.平滑回到顶部按钮"></a>1.平滑回到顶部按钮</h3><p>html中加入：</p><pre><code class="line-numbers language-HTML">&lt;head&gt;    &lt;style&gt;html&#123;scroll-behavior: smooth;&#125;&lt;/style&gt;    &lt;!--平滑滚动实现样式--&gt;      &lt;script&gt;document.getElementById(&quot;logogotop&quot;).scrollIntoView();&lt;/script&gt;    &lt;!--平滑滚动实现脚本--&gt;&lt;/head&gt;</code></pre><p>在需要设置回到顶部的地方加入<code>id=“logogotop”</code>，例如：</p><pre><code class="line-numbers language-HTML">&lt;div id=&quot;logogotop&quot; class=&quot;logo&quot;&gt;&lt;/div&gt;</code></pre><h3 id="2-搜索框实用脚本"><a href="#2-搜索框实用脚本" class="headerlink" title="2.搜索框实用脚本"></a>2.搜索框实用脚本</h3><p>1.光标自动定位到txt（输入栏id=”txt”）中</p><pre><code class="line-numbers language-html">&lt;input type=&quot;text&quot; id=&quot;txt&quot; class=&quot;search-input&quot; autocomplete=&quot;off&quot; placeholder=&quot;搜索&quot;&gt;</code></pre><pre><code class="line-numbers language-JS">&lt;!--光标定位--&gt;&lt;script&gt;document.getElementById(&quot;txt&quot;).focus();&lt;/script&gt;</code></pre><p>2.回车/点击搜索按钮后，清空搜索框内容/全选文本：</p><pre><code class="line-numbers language-HTML">&lt;input type=&quot;text&quot; id=&quot;txt&quot; class=&quot;search-input&quot; autocomplete=&quot;off&quot; placeholder=&quot;搜索&quot;&gt;&lt;button class=&quot;search-btn&quot; id=&quot;search-btn&quot;&gt;&lt;i class=&quot;fas fa-search&quot;&gt;&lt;/i&gt;&lt;/button&gt;</code></pre><pre><code class="line-numbers language-JS">&lt;!--点击search-btn，清空文本内容--&gt;&lt;script&gt;    document.getElementById(&quot;search-btn&quot;).onclick=function()&#123;    document.getElementById(&#39;txt&#39;).value = &quot;&quot;;&#125;&lt;/script&gt;&lt;!--点击search-btn后，全选文本内容--&gt;&lt;script&gt;    document.getElementById(&quot;search-btn&quot;).onclick=function()&#123;    txt.select();&#125;&lt;/script&gt;&lt;!--回车后，清空文本内容--&gt;&lt;script&gt;    $(function()&#123;      $(document).keypress(function (e)&#123;      if(e.keyCode == 13)&#123;          //e只是一个自己定义的名称可随意更改          //keyCode代表不同的按键，更多按键对照值可参考附录          document.getElementById(&#39;txt&#39;).value = &quot;&quot;;          //将id=&quot;txt&quot;所在的input处的值变为空      &#125; 　　&#125;)         &#125;)&lt;/script&gt;&lt;!--回车后，全选文本内容--&gt;&lt;script&gt;    $(function()&#123;      $(document).keypress(function (e)&#123;      if(e.keyCode == 13)&#123;          txt.select();//将id=&quot;txt&quot;所在的输入框内容选中      &#125; 　　&#125;)         &#125;)&lt;/script&gt;</code></pre><h3 id="3-打开网页自动跳转到指定页面"><a href="#3-打开网页自动跳转到指定页面" class="headerlink" title="3.打开网页自动跳转到指定页面"></a>3.打开网页自动跳转到指定页面</h3><p>脚本<code>&lt;script&gt;window.location.href = &quot;跳转页面链接&quot;;&lt;/script&gt;</code>加入即可</p><p>示例：</p><pre><code class="line-numbers language-html">&lt;!doctype html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;自动跳转&lt;/title&gt;          &lt;script&gt;window.location.href = &quot;https://xmq.plus/nav&quot;;&lt;/script&gt;&lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;/html&gt;</code></pre><h3 id="4-IF选择语句"><a href="#4-IF选择语句" class="headerlink" title="4.IF选择语句"></a>4.IF选择语句</h3><p><code>&lt;% if (条件) &#123; %&gt;条件成立执行的内容&lt;% &#125; else &#123; %&gt;条件不成立执行的内容&lt;% &#125; %&gt;</code></p><p>示例：</p><pre><code class="line-numbers language-js">&lt;% if (page.title !== &#39;导航&#39;) &#123; %&gt;内容&lt;% &#125; %&gt;</code></pre><h2 id="附录：Keycode对照表（键码对照表）"><a href="#附录：Keycode对照表（键码对照表）" class="headerlink" title="附录：Keycode对照表（键码对照表）"></a>附录：Keycode对照表（键码对照表）</h2><h4 id="字母和数字键的键码值-keyCode"><a href="#字母和数字键的键码值-keyCode" class="headerlink" title="字母和数字键的键码值(keyCode)"></a>字母和数字键的键码值(keyCode)</h4><table><thead><tr><th>按键</th><th>键码</th><th>按键</th><th>键码</th><th>按键</th><th>键码</th><th>按键</th><th>键码</th></tr></thead><tbody><tr><td>A</td><td>65</td><td>J</td><td>74</td><td>S</td><td>83</td><td>1</td><td>49</td></tr><tr><td>B</td><td>66</td><td>K</td><td>75</td><td>T</td><td>84</td><td>2</td><td>50</td></tr><tr><td>C</td><td>67</td><td>L</td><td>76</td><td>U</td><td>85</td><td>3</td><td>51</td></tr><tr><td>D</td><td>68</td><td>M</td><td>77</td><td>V</td><td>86</td><td>4</td><td>52</td></tr><tr><td>E</td><td>69</td><td>N</td><td>78</td><td>W</td><td>87</td><td>5</td><td>53</td></tr><tr><td>F</td><td>70</td><td>O</td><td>79</td><td>X</td><td>88</td><td>6</td><td>54</td></tr><tr><td>G</td><td>71</td><td>P</td><td>80</td><td>Y</td><td>89</td><td>7</td><td>55</td></tr><tr><td>H</td><td>72</td><td>Q</td><td>81</td><td>Z</td><td>90</td><td>8</td><td>56</td></tr><tr><td>I</td><td>73</td><td>R</td><td>82</td><td>0</td><td>48</td><td>9</td><td>57</td></tr></tbody></table><h4 id="数字键盘上的键的键码值-keyCode"><a href="#数字键盘上的键的键码值-keyCode" class="headerlink" title="数字键盘上的键的键码值(keyCode)"></a>数字键盘上的键的键码值(keyCode)</h4><table><thead><tr><th>按键</th><th>键码</th><th>按键</th><th>键码</th></tr></thead><tbody><tr><td>0</td><td>96</td><td>8</td><td>104</td></tr><tr><td>1</td><td>97</td><td>9</td><td>105</td></tr><tr><td>2</td><td>98</td><td>*</td><td>106</td></tr><tr><td>3</td><td>99</td><td>+</td><td>107</td></tr><tr><td>4</td><td>100</td><td>Enter</td><td>108</td></tr><tr><td>5</td><td>101</td><td>-</td><td>109</td></tr><tr><td>6</td><td>102</td><td>.</td><td>110</td></tr><tr><td>7</td><td>103</td><td>/</td><td>111</td></tr></tbody></table><h4 id="功能键键码值-keyCode"><a href="#功能键键码值-keyCode" class="headerlink" title="功能键键码值(keyCode)"></a>功能键键码值(keyCode)</h4><table><thead><tr><th>按键</th><th>键码</th><th>按键</th><th>键码</th></tr></thead><tbody><tr><td>F1</td><td>112</td><td>F7</td><td>118</td></tr><tr><td>F2</td><td>113</td><td>F8</td><td>119</td></tr><tr><td>F3</td><td>114</td><td>F9</td><td>120</td></tr><tr><td>F4</td><td>115</td><td>F10</td><td>121</td></tr><tr><td>F5</td><td>116</td><td>F11</td><td>122</td></tr><tr><td>F6</td><td>117</td><td>F12</td><td>123</td></tr></tbody></table><h4 id="控制键键码值-keyCode"><a href="#控制键键码值-keyCode" class="headerlink" title="控制键键码值(keyCode)"></a>控制键键码值(keyCode)</h4><table><thead><tr><th>按键</th><th>键码</th><th>按键</th><th>键码</th><th>按键</th><th>键码</th><th>按键</th><th>键码</th></tr></thead><tbody><tr><td>BackSpace</td><td>8</td><td>Esc</td><td>27</td><td>Right Arrow</td><td>39</td><td>-_</td><td>189</td></tr><tr><td>Tab</td><td>9</td><td>Spacebar</td><td>32</td><td>Dw Arrow</td><td>40</td><td>.&gt;</td><td>190</td></tr><tr><td>Clear</td><td>12</td><td>Page Up</td><td>33</td><td>Insert</td><td>45</td><td>/?</td><td>191</td></tr><tr><td>Enter</td><td>13</td><td>Page Down</td><td>34</td><td>Delete</td><td>46</td><td>`~</td><td>192</td></tr><tr><td>Shift</td><td>16</td><td>End</td><td>35</td><td>Num Lock</td><td>144</td><td>[{</td><td>219</td></tr><tr><td>Control</td><td>17</td><td>Home</td><td>36</td><td>;:</td><td>186</td><td>|</td><td>220</td></tr><tr><td>Alt</td><td>18</td><td>Left Arrow</td><td>37</td><td>=+</td><td>187</td><td>]}</td><td>221</td></tr><tr><td>Cape Lock</td><td>20</td><td>Up Arrow</td><td>38</td><td>,&lt;</td><td>188</td><td>‘“</td><td>222</td></tr></tbody></table><h4 id="多媒体键码值-keyCode"><a href="#多媒体键码值-keyCode" class="headerlink" title="多媒体键码值(keyCode)"></a>多媒体键码值(keyCode)</h4><table><thead><tr><th>按键</th><th>键码</th></tr></thead><tbody><tr><td>音量加</td><td>175</td></tr><tr><td>音量减</td><td>174</td></tr><tr><td>停止</td><td>179</td></tr><tr><td>静音</td><td>173</td></tr><tr><td>浏览器</td><td>172</td></tr><tr><td>邮件</td><td>180</td></tr><tr><td>搜索</td><td>170</td></tr><tr><td>收藏</td><td>171</td></tr></tbody></table><h2 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h2><ul><li><a href="https://www.w3school.com.cn/jquery/index.asp">jQuery教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git学习笔记</title>
      <link href="posts/2148.html"/>
      <url>posts/2148.html</url>
      
        <content type="html"><![CDATA[<p>Git简介：Git是目前世界上最先进的分布式版本控制系统。</p><p>学习的目的主要用来连接GitHub仓库</p><p>学习教程：<a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git教程_廖雪峰</a>、<a href="https://docs.github.com/cn">Github_Docs</a>。</p><h2 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h2><ul><li><p>Linux安装：sudo apt-get install git就可以直接完成Git的安装；</p></li><li><p>MAC安装： 第一种方法安装homebrew，然后通过homebrew安装Git，具体方法 请参考homebrew的文档：<a href="http://brew.sh/%E3%80%82">http://brew.sh/。</a></p><p>第二种方法更简单，也是推荐的方法，就是直接从AppStore安装Xcode，Xcode集成了Git，不过默认没有安装，你需要运行Xcode，选择菜单 “Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择 “Command Line Tools”，点“Install”就可以完成安装了。</p></li><li><p>windows安装：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p></li></ul><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><ul><li>登录Github账号</li></ul><pre><code class="line-numbers language-BASH">$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot;</code></pre><p>注意git config命令的–global参数，用了这个参数，表示你这台机器上所有的Git仓库都 会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p><ul><li><p>创建版本库（repository）</p><p>1、建立空目录</p><pre><code class="line-numbers language-bash"> $ mkdir learngit $ cd learngit $ pwd /Users/michael/learngit</code></pre><p>2、变成版本库</p><p>git初始化<br>git init，通过这个命令将这个目录变成git可以管理的仓库，会在当前目录下多一个.git目录，用来跟踪管理库，该目录默认是隐藏的，可以使用ls -ah命令查看。</p><pre><code class="line-numbers language-BASH"> $ git init # Initialized empty Git repository in /Users/michael/learngit/.git/</code></pre><p>3、把文件添加到版本库</p><p>使用notepad++编写一个readme.txt文件于目录文件下（/learngit）；</p><p>用命令git add告诉Git，把文件添加到仓库：</p><pre><code class="line-numbers language-bash">$ git add readme.txt</code></pre><p>用命令git commit告诉Git，把文件提交到仓库：</p><pre><code class="line-numbers language-bash">$ git **commit** -m &quot;wrote a readme file&quot;  #-m后面输入的是本次提交的说明，可以输入任意内容</code></pre></li></ul><p>上传文件流程汇总：</p><pre><code class="line-numbers language-bash">$ git add readme.txt$ git commit -m &quot;wrote a readme file&quot; $ git push -u origin master #第一次上传需-u，后续不需要</code></pre><h2 id="远程仓库绑定"><a href="#远程仓库绑定" class="headerlink" title="远程仓库绑定"></a>远程仓库绑定</h2><p>本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以，需要设置：</p><ol><li>创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没 有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开     Shell（Windows下打开Git Bash），创建SSH Key：</li></ol><pre><code class="line-numbers language-BASH">$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code></pre><p>如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub 两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub 是公钥，可以放心地告诉任何人。</p><ol start="2"><li>登陆GitHub，打开“Account settings”，“SSH Keys”页面：</li></ol><p>然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容，点“Add Key”，你就应该看到已经添加的Key</p><p>注：</p><p>可以添加多个Key，即多台电脑提交</p><p>GitHub上免费托管的Git仓库，任何人都可以看到（但只有你自己才能改）</p><h2 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h2><p>将本地已有文件推送到新建仓库步骤</p><ol><li>创建新库</li></ol><p>登录GitHub——Create a new repo——Repository name填入learngit—— Create repository<br>2. 已经连接好密钥的情况下，在需要推送的文件夹下初始化</p><pre><code class="line-numbers language-BASH">git init</code></pre><ol start="3"><li>关联本地仓库<br>在本地的推送文件夹下运行命令：<pre><code class="line-numbers language-BASH">$ git remote add origin git@github.com:Sumsung524/learngit.git</code></pre></li></ol><p>如果连接远程仓库时连接仓库错误，需要解除连接关联的仓库：<br>删除关联的origin的远程库命令</p><pre><code class="line-numbers language-BASH">git remote rm origin</code></pre><ol start="4"><li>把本地库的所有内容推送到远程库上(git push -u origin master)</li></ol><pre><code class="line-numbers language-BASH">$ git add *$ git commit -u &quot;first push&quot;$ git push -u origin master</code></pre><ol start="5"><li>一般提交 （git push origin master）<br>后续修改只需一般提交<pre><code class="line-numbers language-BASH">$ git add *$ git commit -u &quot;提交描述&quot;$ git push origin master</code></pre></li></ol><p>把本地master分支的最新修改推送至GitHub。</p><p>Git版本控制系统跟踪纯文本文件的每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而git无法跟踪二进制文件的变化，比如图片、视频、word文件等二进制格式文件。</p><h2 id="从远程库克隆"><a href="#从远程库克隆" class="headerlink" title="从远程库克隆"></a>从远程库克隆</h2><p>1、登录GitHub，创建新的远程库。</p><p>2、本地库克隆</p><pre><code class="line-numbers language-BASH">$ git clone git@github.com:Sumsung524/远程库名.git</code></pre><p>要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone命令克隆。</p><p>Git支持多种协议，包括https，但ssh协议速度最快。</p><p>我这里以码云为例,拉取同一仓库</p><p>ssh：<br> git clone <a href="mailto:&#x67;&#105;&#116;&#64;&#103;&#105;&#x74;&#101;&#x65;&#x2e;&#99;&#x6f;&#109;">&#x67;&#105;&#116;&#64;&#103;&#105;&#x74;&#101;&#x65;&#x2e;&#99;&#x6f;&#109;</a>:ge_minglin/gitskill.git </p><p>https:<br> git clone <a href="https://gitee.com/ge_minglin/gitskill.git">https://gitee.com/ge_minglin/gitskill.git</a></p><h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><ol><li>查看历史</li></ol><pre><code class="line-numbers language-BASH">$ git log #详细历史记录$ git log --pretty=oneline #简短式历史记录</code></pre><p>回退版本选择</p><p>版本退回Git中，HEAD表示当前版本，HEAD^表示上一版本，依次类推，回退版本次数较多时，可以使用HEAD<del>回退次数，如HEAD</del>100</p><ol start="2"><li>回到上一版本</li></ol><pre><code class="line-numbers language-BASH">git reset --hard HEAD</code></pre><p>只是在本地回退到上一次commit版本，并未推送至远程仓库。<br>可以使用<code>git reflog</code>命令看到，HEAD指向上一个版本，也就是本地回到了上一个版本<br>但是origin/master，origin/HEAD还是指向的原来版本，也就是远程仓库还是原来的版本。</p><ol start="3"><li>回到未来的版本</li></ol><p>回到上一版本后后悔了怎么办，找到git log之前版本的commit id号 输入前五个字符即可</p><pre><code class="line-numbers language-bash">git reset --hard 1094a</code></pre><p>如果之前没有使用git log命令，找不到commit id号，使用<code>git reflog</code>，用来记录你的每一次命令，可以找到之前版本的commit id号</p><h2 id="工作区和暂存区"><a href="#工作区和暂存区" class="headerlink" title="工作区和暂存区"></a>工作区和暂存区</h2><p>工作区，就是你在电脑里能看到的目录</p><p>版本库，也就是工作区里面隐藏的目录.git，版本库中还有一个暂存区。<br>也就是git add添加文件的时候就是将文修改放到暂存区，然后用git commit提交更改，把版本库中暂存区的所有内容提交到当前分支。</p><p><img src="https://images.xmq.plus/202204030834136.jpeg" alt="工作区与版本库"></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h3><p>git status 命令用于查看在你上次提交之后是否有对文件进行再次修改。<br>红色表示改动过但未上传文件，在工作区的文件；<br>绿色表示git add后本次新增文件。</p><h3 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h3><p>查看git commit历史记录</p><p>如果嫌输出信息太多，看得眼花缭乱的，可以试试加上–pretty=oneline参数：</p><pre><code class="line-numbers language-bash">$ git log --pretty=oneline</code></pre><h3 id="git-rm"><a href="#git-rm" class="headerlink" title="git rm"></a>git rm</h3><p>  1、使用rm命令将工作区的文件删除</p><p>  2、使用<code>git rm 文件名 </code>和<code>git commit </code>即可将与版本库同步删除。也可直接使用此步骤。</p><ul><li><p>如果是误删，可以使用<code>git checkout</code>命令恢复。</p><pre><code class="line-numbers language-BASH">$ git checkout -- test.txt</code></pre><p>git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是 删除，都可以“一键还原”。</p></li></ul><p>   注意：从来没有被添加到版本库就被删除的文件，是无法恢复的！</p><h3 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h3><p>把远程仓库修改的更新拉取下来</p><p>将远程仓库的代码获取并合并，将远程仓库的文件获取下来，本地新增的文件不会删除。<br>如果远程仓库修改了，可以使用git pull下来保持更新，然后再将本地新增的文件push上去。</p><h3 id="git-reset-–hard-commit-id"><a href="#git-reset-–hard-commit-id" class="headerlink" title="git reset –hard [commit id]"></a>git reset –hard [commit id]</h3><p>工作区文件回到某个版本，相比远程仓库的新增文件不会发生改变，但是远程仓库不会因命令而发生改变。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
